#!/usr/bin/php
<?php
require_once 'duration_generator.class.php';

define( 'MIN_RANK', 1 );
define( 'MAX_RANK', 3 );

// require an input rank, begin date, end date, site
$rank=3;
$begin_date='2019-01-16';
$end_date='2019-02-15';

$durations=array(
  'inhome_1'=>array(
    'ranges'=>array(14*60+15,31*60+55,13*60+55,31*60),
    'data'=>null),
  'inhome_2'=>array(
    'ranges'=>array(12*60,24*60+10,11*60+5,22*60+55),
    'data'=>null),
  'inhome_3'=>array(
    'ranges'=>array(7*60+5,27*60+35,6*60+45,27*60+5),
    'data'=>null),
    /*
  'inhome_4'=>array(
    'ranges'=>array(19*60+50,40*60+50,17*60+30,38*60),
    'data'=>null)
    */
  'inhome_4'=>array(
    'ranges'=>array(11*60+05,27*60+15,9*60+25,23*60+25),
    'data'=>null)
);

$common_header_str = array();
$common_header_str[]=sprintf('"DATES","%s - %s"',$begin_date, $end_date);
$common_header_str[]='"","Low","High","","Low","High","","Low","High","","Low","High","*"';
$str = array();
foreach($durations as $stage_key=>$value)
{
  $str[] = str_replace('_',' ', strtoupper($stage_key));
  foreach($value['ranges'] as $idx=>$time)
  {
    if($idx>1)continue;
    // convert from seconds to minutes
    $str[]=util::time_to_label($time/60.0);
  }
}
$common_header_str[]=str_replace(' min',' m:s','"'.implode('","',$str).'"');
$common_header_str[]='"*90% of times fall between these low and high thresholds when looking at the entire wave"';

// get all available sites that have the data for all four inhome interview stages
$total_key_list = array('total_time_sub','total_time_par','total_time_sup');
$total_key_count = count($total_key_list);
$stage_key_list = array_keys($durations);
$site_keys=array();
$site_key_counts=array();
$all_site_total = array(
'total_partial'=>0,
'total_complete'=>0,
'total_time'=>0,
'total_time_count'=>0
);
$site_tech_keys = array();
foreach($durations as $key=>$value)
{
  $$key = new duration_generator($key, $rank, $begin_date, $end_date);
  $$key->set_par_time_range($value['ranges']);
  $$key->set_threshold(60);
  $$key->set_standard_deviation_scale(1);
  $$key->build_table_data();
  $data = $$key->get_site_data_list();
  unset($data['ALL']);
  $durations[$key]['data']=$data;
  $keys = array_keys($data);
  $site_keys[] = $keys;
  $site_key_counts[] = count($keys);
  $all_site_total[$key] = array_combine($total_key_list,array_fill(0,$total_key_count,0));
  foreach($data as $site_key=>$value)
  {
    $tech_keys = array_keys($value['technicians']);
    if(!array_key_exists($site_key,$site_tech_keys))
      $site_tech_keys[$site_key] = $tech_keys;
    else
      $site_tech_keys[$site_key] = array_merge($tech_keys, $site_tech_keys[$site_key]);
  }
}

$idx = array_search(min($site_key_counts),$site_key_counts);
$site_keys = $site_keys[$idx];
foreach($site_keys as $key)
  $site_tech_keys[$key] = array_unique($site_tech_keys[$key]);

$file_str_sites = array();

foreach($site_keys as $site)
{
  $tech_data = array();
  $site_data = array();
  $tech_list = $site_tech_keys[$site];
  $site_data['total_sum'] = 0;
  $file_str = array();
  $file_str[] = sprintf('"SITE","%s"',$site);
  $file_str = array_merge($file_str,$common_header_str);
  $header_str = array();
  foreach($durations as $stage_key=>$value)
  {
    // for the current stage, get the number of below, within, above for each tech
    $data = $value['data'][$site]['technicians'];
    $site_stage_total = array_combine($total_key_list,array_fill(0,$total_key_count,0));

    foreach($tech_list as $tech_key)
    {
      if(!array_key_exists($tech_key,$data))
      {
        $data[$tech_key]=array_combine($total_key_list,array_fill(0,$total_key_count,0));
      }
    }

    foreach($data as $tech_key=>$tech_totals)
    {
      if('NA' == $tech_key) continue;
      if(!array_key_exists($tech_key,$tech_data))
      {
        $tech_data[$tech_key] = array();
        $tech_data[$tech_key]['total']=0;
      }
      $total_list = array();
      foreach($total_key_list as $total_key)
      {
        $total_str = explode('<',$tech_totals[$total_key]);
        $total_val = intval($total_str[0]);

        $all_site_total[$stage_key][$total_key] += $total_val;

        $total_list[] = $total_val;
        $site_stage_total[$total_key] += $total_val;
        $tech_data[$tech_key]['total'] += $total_val;
      }
      $total_sum = array_sum( $total_list );
      $tech_data[$tech_key][$stage_key]['total_sum'] = $total_sum;
      foreach($total_list as $idx=>$total)
      {
        $total_list[$idx] = sprintf('%d (%d)',$total, (0==$total_sum ? 0 : round(100.0*$total/$total_sum)));
      }
      $tech_data[$tech_key][$stage_key]['total_list'] = $total_list;
    }

    // convert the current site data to totals and within percent strings
    $site_stage_values = array_values($site_stage_total);
    $total_sum = array_sum($site_stage_values);
    $total_list = array();
    foreach($site_stage_values as $total)
    {
      $total_list[] = sprintf('%d (%d)',$total, (0==$total_sum ? 0 : round(100.0*$total/$total_sum)));
    }
    $site_data['total_sum'] += $total_sum;
    $site_data[$stage_key]['total_sum'] = $total_sum;
    $site_data[$stage_key]['total_list'] = $total_list;
  }

  $file_str[] = '""'; // row separator

  $file_str[]='"NUMBER (PERCENTAGE) OF INTERVIEWS"';
  $header_str=array();
  $sql = sprintf(
   'select tech, sum(if(count=4,1,0)) as complete, sum(if(count<4,1,0)) as partial, '.
   'sum(if(count=4,if(time<=240,time,0),0)) as tot_time, '.
   'sum(if(count=4,if(time<=240,1,0),0)) as tot_time_count '.
   'from ('.
   'select t.name as tech, uid, count(*) as count, '.
   'sum(cast(substring_index(substring_index(s.duration,",",1),":",-1) as decimal(10,3))) as time '.
   'from stage s '.
   'join interview i on i.id=s.interview_id '.
   'join technician t on t.id=s.technician_id '.
   'join site on site.id=i.site_id and site.id=t.site_id '.
   'where s.name in ("inhome_1","inhome_2","inhome_3","inhome_4") '.
   'and rank=%d '.
   'and start_date between "%s" and "%s" '.
   'and s.duration is not null '.
   'and site.name="%s" '.
   'group by uid, t.name ) as t '.
   'where tech != "NA" '.
   'group by tech', $rank, $begin_date, $end_date, $site);

  //util::out($sql);

  $res = $db->get_all($sql);
  $site_data['total_partial']=0;
  $site_data['total_complete']=0;
  $site_data['total_time']=0;
  $site_data['total_time_count']=0;
  foreach($res as $item)
  {
    $tech = $item['tech'];
    $tech_data[$tech]['partial'] = $item['partial'];
    $tech_data[$tech]['complete'] = $item['complete'];
    $tech_data[$tech]['total_time'] = $item['tot_time'];
    $tech_data[$tech]['total_time_count'] = $item['tot_time_count'];
    $site_data['total_partial'] += $item['partial'];
    $site_data['total_complete'] += $item['complete'];
    $site_data['total_time'] += $item['tot_time'];
    $site_data['total_time_count'] += $item['tot_time_count'];
  }
  $all_site_total['total_partial'] += $site_data['total_partial'];
  $all_site_total['total_complete'] += $site_data['total_complete'];
  $all_site_total['total_time'] += $site_data['total_time'];
  $all_site_total['total_time_count'] += $site_data['total_time_count'];

  $file_str[] =
    str_replace('_', ' ',strtoupper(
    '"","","' .
    implode('","","","',array_keys($durations)) .
    '","","",""'));

  $file_str[] =
    '"Tech",'.
    implode(',',array_fill(0,4,'"Total Below (%)","Total Within (%)","Total Above (%)"')) .
    ',"Total Partial","Total Interviews","Avg Duration"';

  $total_site_interview = $site_data['total_partial']+$site_data['total_complete'];
  foreach($tech_data as $tech=>$values)
  {
    $str = array();
    $str[] = $tech;
    foreach($stage_key_list as $stage)
    {
      $str = array_merge($str,$values[$stage]['total_list']);
    }
    $total_interview = $values['partial']+$values['complete'];
    $str[] = $values['partial'];
    $str[] = sprintf('%s (%s)',
      $values['complete'],
      (0 == $total_site_interview ? 0 : round(100.0*$total_interview/$total_site_interview)));

    $str[] = 0 < $values['total_time_count'] ?
      util::time_to_label($values['total_time']/$values['total_time_count']/60.0,'hr') : 'NA';

    $file_str[] = '"'.implode('","',$str).'"';
  }

  $str = array('TOTAL');
  foreach($stage_key_list as $stage)
  {
    $str = array_merge($str,$site_data[$stage]['total_list']);
  }
  $str[] = $site_data['total_partial'];
  $str[] = sprintf('%s (100)', $total_site_interview);
  $str[] = 0 < $site_data['total_time_count'] ?
    util::time_to_label($site_data['total_time']/$site_data['total_time_count']/60.0,'hr') : 'NA';
  $file_str[] = '"'.implode('","', $str).'"';


  //var_dump($site_data);
  $file_str_sites[$site] = $file_str;
  util::out($site);
}

$str = array('OVERALL');
foreach($stage_key_list as $stage)
{
  $total_stage = array_sum(array_values($all_site_total[$stage]));
  foreach($all_site_total[$stage] as $key=>$value)
  {
    $str[] = sprintf('%s (%s)',$value,
    (0 == $total_stage ? 0 : round(100.0*$value/$total_stage)));
  }
}
$total_interview = $all_site_total['total_partial']+$all_site_total['total_complete'];
$str[] = $all_site_total['total_partial'];
$str[] = sprintf('%s (100)', $total_interview);
$str[] = 0 < $all_site_total['total_time_count'] ?
  util::time_to_label($all_site_total['total_time']/$all_site_total['total_time_count']/60.0,'hr') : 'NA';
//var_dump($all_site_total);

$str = '"'.implode('","', $str).'"';

$filename = sprintf('/home/dean/files/webapps/qac/aux/inhome_duration_report_wave_%d_%s_%s.csv',
  $rank,
  str_replace('-','',$begin_date),
  str_replace('-','',$end_date));

$file = fopen($filename,'w');
foreach($file_str_sites as $site=>$file_str)
{
  foreach($file_str as $item_str)
    fwrite($file, $item_str . PHP_EOL );
  fwrite($file, $str . PHP_EOL );
  fwrite($file, '""' . PHP_EOL );
}
fclose($file);
