<org.obiba.magma.views.View>
  <name>QC_BL_meta</name>
  <from class="org.obiba.magma.views.JoinTable">
    <list>
      <table inner="false" class="org.obiba.magma.support.ValueTableReference">
        <reference>clsa-dcs.Participants</reference>
      </table>
      <table inner="false" class="org.obiba.magma.support.ValueTableReference">
        <reference>clsa-dcs.ECG</reference>
      </table>
      <table inner="false" class="org.obiba.magma.support.ValueTableReference">
        <reference>clsa-dcs.4mWalk</reference>
      </table>
      <table inner="false" class="org.obiba.magma.support.ValueTableReference">
        <reference>clsa-dcs.Blood</reference>
      </table>
      <table inner="false" class="org.obiba.magma.support.ValueTableReference">
        <reference>clsa-dcs.Blood2</reference>
      </table>
      <table inner="false" class="org.obiba.magma.support.ValueTableReference">
        <reference>clsa-dcs.ChairRise</reference>
      </table>
      <table inner="false" class="org.obiba.magma.support.ValueTableReference">
        <reference>clsa-dcs.ConclusionQuestionnaire</reference>
      </table>
      <table inner="false" class="org.obiba.magma.support.ValueTableReference">
        <reference>clsa-dcs.ContraIndications</reference>
      </table>
      <table inner="false" class="org.obiba.magma.support.ValueTableReference">
        <reference>clsa-dcs.DiseaseSymptoms</reference>
      </table>
      <table inner="false" class="org.obiba.magma.support.ValueTableReference">
        <reference>clsa-dcs.EventPMT</reference>
      </table>
      <table inner="false" class="org.obiba.magma.support.ValueTableReference">
        <reference>clsa-dcs.FunctionalStatus</reference>
      </table>
      <table inner="false" class="org.obiba.magma.support.ValueTableReference">
        <reference>clsa-dcs.HearingQuestionnaire</reference>
      </table>
      <table inner="false" class="org.obiba.magma.support.ValueTableReference">
        <reference>clsa-dcs.NeuropsychologicalBattery</reference>
      </table>
      <table inner="false" class="org.obiba.magma.support.ValueTableReference">
        <reference>clsa-dcs.NeuropsychologicalBatteryScoring</reference>
      </table>
      <table inner="false" class="org.obiba.magma.support.ValueTableReference">
        <reference>clsa-dcs.QuestionnaireBoneDensity</reference>
      </table>
      <table inner="false" class="org.obiba.magma.support.ValueTableReference">
        <reference>clsa-dcs.StandingBalance</reference>
      </table>
      <table inner="false" class="org.obiba.magma.support.ValueTableReference">
        <reference>clsa-dcs.TUG</reference>
      </table>
      <table inner="false" class="org.obiba.magma.support.ValueTableReference">
        <reference>clsa-dcs.TimeBasedProspectiveMemoryTask</reference>
      </table>
      <table inner="false" class="org.obiba.magma.support.ValueTableReference">
        <reference>clsa-dcs.Urine</reference>
      </table>
      <table inner="false" class="org.obiba.magma.support.ValueTableReference">
        <reference>clsa-dcs.VisionAcuity</reference>
      </table>
      <table inner="false" class="org.obiba.magma.support.ValueTableReference">
        <reference>clsa-dcs.BloodPressure</reference>
      </table>
      <table inner="false" class="org.obiba.magma.support.ValueTableReference">
        <reference>clsa-dcs-images.CarotidIntima</reference>
      </table>
      <table inner="false" class="org.obiba.magma.support.ValueTableReference">
        <reference>clsa-dcs.CognitiveTest</reference>
      </table>
      <table inner="false" class="org.obiba.magma.support.ValueTableReference">
        <reference>clsa-dcs-images.DualHipBoneDensity</reference>
      </table>
      <table inner="false" class="org.obiba.magma.support.ValueTableReference">
        <reference>clsa-dcs-images.ForearmBoneDensity</reference>
      </table>
      <table inner="false" class="org.obiba.magma.support.ValueTableReference">
        <reference>clsa-dcs.GripStrength</reference>
      </table>
      <table inner="false" class="org.obiba.magma.support.ValueTableReference">
        <reference>clsa-dcs.Hearing</reference>
      </table>
      <table inner="false" class="org.obiba.magma.support.ValueTableReference">
        <reference>clsa-dcs.HipsWaist</reference>
      </table>
      <table inner="false" class="org.obiba.magma.support.ValueTableReference">
        <reference>clsa-dcs-images.LateralBoneDensity</reference>
      </table>
      <table inner="false" class="org.obiba.magma.support.ValueTableReference">
        <reference>clsa-dcs-images.RetinalScan</reference>
      </table>
      <table inner="false" class="org.obiba.magma.support.ValueTableReference">
        <reference>clsa-dcs.SittingHeight</reference>
      </table>
      <table inner="false" class="org.obiba.magma.support.ValueTableReference">
        <reference>clsa-dcs-images.Plaque</reference>
      </table>
      <table inner="false" class="org.obiba.magma.support.ValueTableReference">
        <reference>clsa-dcs.Spirometry</reference>
      </table>
      <table inner="false" class="org.obiba.magma.support.ValueTableReference">
        <reference>clsa-dcs.Phlebotomy</reference>
      </table>
      <table inner="false" class="org.obiba.magma.support.ValueTableReference">
        <reference>clsa-dcs.Tonometer</reference>
      </table>
      <table inner="false" class="org.obiba.magma.support.ValueTableReference">
        <reference>clsa-dcs.Weight</reference>
      </table>
      <table inner="false" class="org.obiba.magma.support.ValueTableReference">
        <reference>clsa-dcs-images.WholeBodyBoneDensity</reference>
      </table>
    </list>
  </from>
  <select class="org.obiba.magma.views.support.NoneClause"/>
  <where class="org.obiba.magma.views.support.AllClause"/>
  <variables class="org.obiba.magma.js.views.VariablesClause">
    <variables class="linked-hash-set">
      <variable name="group_questionnaire" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0" repeatable="true" occurrenceGroup="">
        <attributes>
          <attribute name="script" valueType="text">var list=[
&apos;4mWalk&apos;,
&apos;Blood&apos;,
&apos;Blood2&apos;,
&apos;ChairRise&apos;,
&apos;ConclusionQuestionnaire&apos;,
&apos;ContraIndications&apos;,
&apos;DiseaseSymptoms&apos;,
&apos;EventPMT&apos;,
&apos;FunctionalStatus&apos;,
&apos;HearingQuestionnaire&apos;,
&apos;NeuropsychologicalBattery&apos;,
&apos;NeuropsychologicalBatteryScoring&apos;,
&apos;Phlebotomy&apos;,
&apos;QuestionnaireBoneDensity&apos;,
&apos;StandingBalance&apos;,
&apos;TUG&apos;,
&apos;TimeBasedProspectiveMemoryTask&apos;,
&apos;Urine&apos;,
&apos;VisionAcuity&apos;
]
$(&apos;clsa-dcs.Participants:Admin.StageInstance.stage&apos;).asSequence().filter(function(v){
  return -1!=list.indexOf(v.value())
})</attribute>
        </attributes>
      </variable>
      <variable name="group_instrument" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0" repeatable="true" occurrenceGroup="">
        <attributes>
          <attribute name="script" valueType="text">var list=[
&apos;BloodPressure&apos;,
&apos;CarotidIntima&apos;,
&apos;CognitiveTest&apos;,
&apos;DualHipBoneDensity&apos;,
&apos;ECG&apos;,
&apos;ForearmBoneDensity&apos;,
&apos;GripStrength&apos;,
&apos;Hearing&apos;,
&apos;HipsWaist&apos;,
&apos;LateralBoneDensity&apos;,
&apos;Plaque&apos;,
&apos;RetinalScan&apos;,
&apos;Spirometry&apos;,
&apos;SittingHeight&apos;,
&apos;StandingHeight&apos;,
&apos;Tonometer&apos;,
&apos;Weight&apos;,
&apos;WholeBodyBoneDensity&apos;
]

$(&apos;clsa-dcs.Participants:Admin.StageInstance.stage&apos;).asSequence().filter(function(v){
  return -1!=list.indexOf(v.value())
})</attribute>
        </attributes>
      </variable>
      <variable name="group_duration_ecg" valueType="integer" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">var res = null
if($(&apos;clsa-dcs.ECG:RES_MEASUREMENT_DATE&apos;).isNull().not().and(
   $(&apos;clsa-dcs.ECG:RES_MEASUREMENT_TIME&apos;).isNull().not()).value()) {
  var ecg = newValue(
    $(&apos;clsa-dcs.ECG:RES_MEASUREMENT_DATE&apos;).value() + &apos; &apos; +
    $(&apos;clsa-dcs.ECG:RES_MEASUREMENT_TIME&apos;).value(), &apos;datetime&apos;)
    
  var ecgTime = ecg.time()
  var preIndex = -1
  var postIndex = -1    
  var pre = newValue(null, &apos;datetime&apos;)
  var post = newValue(null, &apos;datetime&apos;)
  var minPre = 10000000000000000
  var minPost = minPre  
  var stages = $(&apos;clsa-dcs.Participants:Admin.StageInstance.stage&apos;).asSequence().filter(function(v) {
    return v.matches(/ECG/).not().value()
  }) 
  var times = {&apos;pre&apos;:null,&apos;post&apos;:null}

  for(var i = 0; i &lt; stages.size(); i++) {
    var stage = stages.valueAt(i).value()    
    
    if(-1 != $this(&apos;group_questionnaire&apos;).indexOf(stage)) {
      pre = $(&apos;clsa-dcs.&apos;+stage+&apos;:QuestionnaireRun.timeEnd&apos;)      
    } else if(-1 != $this(&apos;group_instrument&apos;).indexOf(stage)) {
      pre = $(&apos;clsa-dcs.&apos;+stage+&apos;:InstrumentRun.timeEnd&apos;)      
    } else if(-1 != $this(&apos;group_other&apos;).indexOf(stage)) {
      pre = $(&apos;clsa-dcs.&apos;+stage+&apos;:timeEnd&apos;) 
    } else {
      continue
    }
    if(ecg.after(pre).value()) {
      var p = ecgTime.minus(pre.time()).value()
      if(p &lt; minPre) {
        minPre = p
        preIndex = i
        times[&apos;pre&apos;] = pre.time()
      }        
    } else {
      if(-1 != $this(&apos;group_questionnaire&apos;).indexOf(stage)) {        
        post = $(&apos;clsa-dcs.&apos;+stage+&apos;:QuestionnaireRun.timeStart&apos;)
      } else if(-1 != $this(&apos;group_instrument&apos;).indexOf(stage)) {        
        post = $(&apos;clsa-dcs.&apos;+stage+&apos;:InstrumentRun.timeStart&apos;)
      } else if(-1 != $this(&apos;group_other&apos;).indexOf(stage)) {        
        post = $(&apos;clsa-dcs.&apos;+stage+&apos;:timeStart&apos;)
      } else {
        continue
      }     
      if (ecg.before(post).value()) {
        var p = post.time().minus(ecgTime).value()
        if(p &lt; minPost) {
          minPost = p
          postIndex = i
          times[&apos;post&apos;] = post.time()
        }
      }
    }
  }
  if(1&lt;(postIndex-preIndex)) {
    res = times[&apos;post&apos;].minus(times[&apos;pre&apos;]).div(1000)    
  }
}

if(null == res) {
  var post = $(&apos;clsa-dcs.ECG:InstrumentRun.timeEnd&apos;)
  var pre = $(&apos;clsa-dcs.ECG:InstrumentRun.timeStart&apos;)
  if(pre.before(post).value()) {
    res = post.time().minus(pre.time()).div(1000)
  }
  if(null == res) {
    res = $group(
      &apos;clsa-dcs.Participants:Admin.StageInstance.stage&apos;,
      &apos;ECG&apos;,
      &apos;Admin.StageInstance.duration&apos;).asSequence().sum()
  }
  if(res.eq(0).value()) res = null
}

res</attribute>
        </attributes>
      </variable>
      <variable name="group_duration_dexa" valueType="integer" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">var list = [&apos;LateralBoneDensity&apos;,&apos;ForearmBoneDensity&apos;,&apos;WholeBodyBoneDensity&apos;,&apos;DualHipBoneDensity&apos;]
var stages = $(&apos;clsa-dcs.Participants:Admin.StageInstance.stage&apos;).asSequence().filter(function(v) {
    return -1!=list.indexOf(v.value())
  })
var res = null
if(stages.empty().not().value()) {
  // bracket the actual bone density acquisitions
  // 
  var pre = $(&apos;clsa-dcs.QuestionnaireBoneDensity:QuestionnaireRun.timeEnd&apos;)
  var post = $(&apos;clsa-dcs.EventPMT:QuestionnaireRun.timeStart&apos;)  
  if(pre.before(post).value()) {    
    res = post.time().minus(pre.time()).div(1000)
  }  
}

if(null == res) {
  res = newValue(0,&apos;integer&apos;)
  list.forEach(function(stage) {
    var pre = $(&apos;clsa-dcs.&apos;+stage+&apos;:InstrumentRun.timeEnd&apos;)
    var post = $(&apos;clsa-dcs.&apos;+stage+&apos;:InstrumentRun.timeStart&apos;)  
    if(pre.before(post).value()) {    
      res = res.plus(post.time().minus(pre.time()).div(1000))
    }    
  })
  if(res.eq(0).value()) res = null
}

res</attribute>
        </attributes>
      </variable>
      <variable name="group_blood" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">var res = null
var u = $group(&apos;clsa-dcs.Participants:Admin.StageInstance.stage&apos;,&apos;Phlebotomy&apos;,&apos;Admin.StageInstance.lastState&apos;).asSequence().last()
var v = $group(&apos;clsa-dcs.Participants:Admin.StageInstance.stage&apos;,&apos;Blood&apos;,&apos;Admin.StageInstance.lastState&apos;).asSequence().last()
var w = $group(&apos;clsa-dcs.Participants:Admin.StageInstance.stage&apos;,&apos;Blood2&apos;,&apos;Admin.StageInstance.lastState&apos;).asSequence().last()
var p = $(&apos;clsa-dcs.Participants:Admin.StageInstance.stage&apos;).any(&apos;Phlebotomy&apos;).and(w.isNull().not()).value()
var q = $(&apos;clsa-dcs.Participants:Admin.StageInstance.stage&apos;).any(&apos;Blood&apos;).and(u.isNull().not()).value()
var r = $(&apos;clsa-dcs.Participants:Admin.StageInstance.stage&apos;).any(&apos;Blood2&apos;).and(v.isNull().not()).value()
if(p &amp;&amp; !(q || r)) {
  res = newValue( &apos;Phlebotomy&apos;, &apos;text&apos;) 
} else if(q &amp;&amp; !(p || r)) {
  res = newValue( &apos;Blood&apos;, &apos;text&apos;) 
} else if(r &amp;&amp; !(p || q)) {
  res = newValue( &apos;Blood2&apos;, &apos;text&apos;) 
} else if(p || q || r) {
  var s=[]
  var n = [&apos;Phlebotomy&apos;,&apos;Blood&apos;,&apos;Blood2&apos;]
  if(p) s.push(u)
  if(q) s.push(v)
  if(r) s.push(w)
  var x = []
  var y = []
  for(var i = 0; i &lt; s.length; i++) {
    if(s[i].any(&apos;Completed&apos;).value()) x.push(n[i])
    if(s[i].any(&apos;NotApplicable&apos;).value()) y.push(n[i])
  }
  if(0 &lt; x.length) {
    res = newValue(x[x.length-1],&apos;text&apos;)
  } else if(0 &lt; y.length) {
    res = newValue(y[y.length-1],&apos;text&apos;)
  }
}
res</attribute>
        </attributes>
      </variable>
      <variable name="group_other" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0" repeatable="true" occurrenceGroup="">
        <attributes>
          <attribute name="script" valueType="text">var list=[
&apos;Consent&apos;
]
$(&apos;clsa-dcs.Participants:Admin.StageInstance.stage&apos;).asSequence().filter(function(v){
  return -1!=list.indexOf(v.value())
})</attribute>
        </attributes>
      </variable>
      <variable name="group_carotid" valueType="integer" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">// the expected stages in room 1
room1_dependent = [&apos;HipsWaist&apos;,&apos;Weight&apos;,&apos;SittingHeight&apos;,&apos;StandingHeight&apos;,&apos;BloodPressure&apos;,&apos;ECG&apos;,&apos;CarotidIntima&apos;,&apos;Plaque&apos;,&apos;Spirometry&apos;,&apos;QuestionnaireBoneDensity&apos;]

stages = $(&apos;Admin.Action.stage&apos;).asSequence().filter(function(v){
  return -1!=room1_dependent.indexOf(v.value())
}).filter(function(v,i){
    return i==this.indexOf(v)
  }).asSequence()
  
var res = null
var i = stages.indexOf(&apos;CarotidIntima&apos;)
var j = i-1
var k = i+1
if( -1&lt;j &amp;&amp; k&lt;stages.size().value() ) {
  var pre = newValue(null, &apos;datetime&apos;)
  var post = newValue(null, &apos;datetime&apos;)
  
  var prev = stages.valueAt(j)
  var next = stages.valueAt(k)
  if(-1 != $this(&apos;group_questionnaire&apos;).indexOf(prev)) {
    pre = $(&apos;clsa-dcs.&apos;+prev+&apos;:QuestionnaireRun.timeEnd&apos;)      
  } else if(-1 != $this(&apos;group_instrument&apos;).indexOf(prev)) {
    pre = $(&apos;clsa-dcs.&apos;+prev+&apos;:InstrumentRun.timeEnd&apos;)      
  } else if(-1 != $this(&apos;group_other&apos;).indexOf(prev)) {
    pre = $(&apos;clsa-dcs.&apos;+prev+&apos;:timeEnd&apos;) 
  } 
  if(-1 != $this(&apos;group_questionnaire&apos;).indexOf(next)) {
    post = $(&apos;clsa-dcs.&apos;+next+&apos;:QuestionnaireRun.timeStart&apos;)
  } else if(-1 != $this(&apos;group_instrument&apos;).indexOf(next)) {
    post = $(&apos;clsa-dcs.&apos;+next+&apos;:InstrumentRun.timeStart&apos;)
  } else if(-1 != $this(&apos;group_other&apos;).indexOf(next)) {
    post = $(&apos;clsa-dcs.&apos;+next+&apos;:timeStart&apos;)
  }
  if(pre.before(post).value()) {
    res = post.time().minus(pre.time()).div(1000)
  }
}

if(null == res) {
  var post = $(&apos;clsa-dcs.CarotidIntima:InstrumentRun.timeEnd&apos;)
  var pre = $(&apos;clsa-dcs.CarotidIntima:InstrumentRun.timeStart&apos;)
  if(pre.before(post).value()) {
    res = post.time().minus(pre.time()).div(1000)
  }
  if(null == res) {
    res = $group(
      &apos;clsa-dcs.Participants:Admin.StageInstance.stage&apos;,
      &apos;CarotidIntima&apos;,
      &apos;Admin.StageInstance.duration&apos;).asSequence().sum()
  }
  if(res.eq(0).value()) res = null
}

res</attribute>
        </attributes>
      </variable>
    </variables>
  </variables>
  <created valueType="datetime">2019-04-23T15:04:23.246-04</created>
  <updated valueType="datetime">2019-10-23T09:49:25.001-04</updated>
</org.obiba.magma.views.View>