{"from": ["clsa-dcs.Participants","clsa-dcs.Hearing"],"name": "QC_BL_hearing","datasourceName": "cosmos_dcs","Magma.VariableListViewDto.view": {"variables": [{"name": "technician","entityType": "Participant","valueType": "text","mimeType": "","isRepeatable": false,"attributes": [{"name": "script","value": "$('clsa-dcs.Hearing:InstrumentRun.user').whenNull(\n  $group('Admin.Action.stage','Hearing','Admin.Action.user').asSequence().last()).lowerCase()"}],"unit": "","index": 0,"referencedEntityType": ""},{"name": "skip","entityType": "Participant","valueType": "text","mimeType": "","isRepeatable": false,"attributes": [{"name": "script","value": "var stage = 'Hearing'\nvar action = $group('Admin.Action.stage',stage,'Admin.Action.actionType').asSequence()\nvar res = $group('Admin.Action.stage',stage,'Admin.Action.eventReason').asSequence().filter(function(v,i){\n  return i == action.indexOf('SKIP')\n  }).last()\nif(res.isNull().not().value()) {\n  res = newValue(res.value().slice(14),'text')  \n}\nres"}],"unit": "","index": 0,"referencedEntityType": ""},{"name": "contraindicated","entityType": "Participant","valueType": "boolean","mimeType": "","isRepeatable": false,"attributes": [{"name": "script","value": "$group('clsa-dcs.Participants:Admin.StageInstance.stage','Hearing',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable')"}],"unit": "","index": 0,"referencedEntityType": ""},{"name": "comment","entityType": "Participant","valueType": "text","mimeType": "","isRepeatable": false,"attributes": [{"name": "script","value": "// this script compounds repeated comments by using lowercase comment strings as array keys\n//\nvar stage = 'Hearing'\nvar c_seq = $group('Admin.Action.stage',stage,'Admin.Action.comment').asSequence()\nvar e_seq = $group('Admin.Action.stage',stage,'Admin.Action.eventReason').asSequence()\nvar res = null\nif(c_seq.size().eq(e_seq.size()).value())\n{\n  var c_str = []  // string array of comments\n  var e_str = []  // string array of event reasons\n\n  for(var i = 0; i < c_seq.size(); i++) {\n    var c = c_seq.valueAt(i).value()\n    if(null == c) continue\n    c = c.replace(/[^a-zA-Z0-9 àâäèéêëîïôœùûüÿçÀÂÄÈÉÊËÎÏÔŒÙÛÜŸÇ]/g,\"\")\n    var e = e_seq.valueAt(i).value()\n    if(0 < c.length) {\n      c_str.push(c)\n      if(null != e && 0 < e.length) {\n        e = e.slice(14)\n      } else {\n        e = 'SeeComment'\n      }\n      e_str.push(e)\n    }\n  }\n\n  if(0 < c_str.length) {\n    var arr = []  // array of event reasons\n    var key_orig = []  // array of lower cased comments as unique keys\n    for(var i = 0; i < c_str.length; i++) {\n      var key = c_str[i]\n      var key_lower = key.toLowerCase()\n      // retain the first encountered instance of the comment\n      //\n      if(undefined === key_orig[key_lower])\n        key_orig[key_lower] = key\n\n      if(undefined === arr[e_str[i]])\n        arr[e_str[i]] = []\n\n      if(-1===arr[e_str[i]].indexOf(key_orig[key_lower]))\n        arr[e_str[i]].push(key_orig[key_lower])\n    }\n\n    // loop over the final array of event reasons and their sets of comments\n    //\n    var str = '{'\n    for(var key in arr) {\n      str += '\"' + key + '\":['\n      var t = []\n      for(var i = 0; i < arr[key].length; i++) {\n        t.push('\"' + arr[key][i] + '\"')\n      }\n      str += t.join(',') + '],'\n    }\n\n    res = newValue(str.substring(0,str.length-1)+'}','text')\n  }\n}\nres"}],"unit": "","index": 0,"referencedEntityType": ""},{"name": "duration","entityType": "Participant","valueType": "integer","mimeType": "","isRepeatable": false,"attributes": [{"name": "script","value": "var stage = 'Hearing'\nvar res = null\nvar post = $('clsa-dcs.'+stage+':InstrumentRun.timeEnd')\nvar pre = $('clsa-dcs.'+stage+':InstrumentRun.timeStart')\nif(pre.before(post).value()) {\n    res = post.time().minus(pre.time()).div(1000)\n}\nif(null === res) {\n  res = $group(\n    'clsa-dcs.Participants:Admin.StageInstance.stage',\n    stage,\n    'Admin.StageInstance.duration').asSequence().sum()\n}\nif(res.eq(0).value()) res = null\nres"}],"unit": "","index": 0,"referencedEntityType": ""},{"name": "missing","entityType": "Participant","valueType": "boolean","mimeType": "","isRepeatable": false,"attributes": [{"name": "script","value": "$this('contraindicated').not().and(\n  $this('skip').isNull(),\n  $this('duration').isNull())"}],"unit": "","index": 0,"referencedEntityType": ""},{"name": "count_value","entityType": "Participant","valueType": "integer","mimeType": "","isRepeatable": true,"occurrenceGroup": "","attributes": [{"name": "script","value": "var stage = 'clsa-dcs.Hearing:RES'\nvar side = ['RIGHT','LEFT']\nvar freq = ['1KT','500','1K','2K','3K','4K','6K','8K']\nvar count = {RIGHT:0,LEFT:0}\nvar countfreq = {RIGHT:0,LEFT:0}\nvar counterr = {RIGHT:0,LEFT:0}\nfor(var i=0; i<side.length; i++) {\n  var s = side[i]\n  var v = [stage,s]\n  for(var j = 0; j < freq.length; j++) {\n    var f = v.concat(freq[j]).join('_')\n    var e = f.concat('_ERR')\n    \n    // if there was a response of any kind\n    if ($(f).isNull().and($(e).isNull()).not().value()) count[s]++;\n    \n    // if there was a frequency response\n    if ($(f).isNull().not().value()) countfreq[s]++;\n    \n    // if there was an error response\n    if ($(e).isNull().not().value()) counterr[s]++;\n  }\n}\n(0 == count.RIGHT && 0 == count.LEFT) ? null :\n  newSequence([\n    count.RIGHT,\n    count.LEFT,\n    (0 < counterr.LEFT && 0 == countfreq.LEFT ? '1' : '0'),\n    (0 < counterr.RIGHT && 0 == countfreq.RIGHT ? '1' : '0')\n    ],'integer')"}],"unit": "","index": 0,"referencedEntityType": ""},{"name": "count_name","entityType": "Participant","valueType": "text","mimeType": "","isRepeatable": true,"occurrenceGroup": "","attributes": [{"name": "script","value": "newSequence(['response_left','response_right','error_left','error_right'])"}],"unit": "","index": 0,"referencedEntityType": ""}]}}