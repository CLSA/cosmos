{"from": ["clsa-dcs-f1.Participants","clsa-dcs-images-f1.CarotidIntima","cosmos_dcs.QC_F1_meta"],"name": "QC_F1_carotid_intima","datasourceName": "cosmos_dcs","where": "$('clsa-dcs-f1.Participants:DCSatHOME').not().whenNull(true).and($('clsa-dcs-f1.Participants:DCS_PHONE').not().whenNull(true))","Magma.VariableListViewDto.view": {"variables": [{"name": "technician","entityType": "Participant","valueType": "text","mimeType": "","isRepeatable": false,"attributes": [{"name": "script","value": "$('clsa-dcs-images-f1.CarotidIntima:InstrumentRun.user').whenNull(\n  $group('Admin.Action.stage','CarotidIntima','Admin.Action.user').asSequence().last()).lowerCase()"}],"unit": "","index": 0,"referencedEntityType": ""},{"name": "contraindicated","entityType": "Participant","valueType": "boolean","mimeType": "","isRepeatable": false,"attributes": [{"name": "script","value": "$group('clsa-dcs-f1.Participants:Admin.StageInstance.stage','CarotidIntima',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable')"}],"unit": "","index": 0,"referencedEntityType": ""},{"name": "missing","entityType": "Participant","valueType": "boolean","mimeType": "","isRepeatable": false,"attributes": [{"name": "script","value": "$this('contraindicated').not().and(\n  $this('skip').isNull(),\n  $this('file_complete').isNull())"}],"unit": "","index": 0,"referencedEntityType": ""},{"name": "skip","entityType": "Participant","valueType": "text","mimeType": "","isRepeatable": false,"attributes": [{"name": "script","value": "var action=$group('Admin.Action.stage','CarotidIntima','Admin.Action.actionType').asSequence()\nvar res=$group('Admin.Action.stage','CarotidIntima','Admin.Action.eventReason').asSequence().filter(function(v,i){\n  return i==action.indexOf('SKIP')\n  }).last()\nif(res.isNull().not().value()) {\n  res = newValue(res.value().slice(14),'text')\n}\nres"}],"unit": "","index": 0,"referencedEntityType": ""},{"name": "comment","entityType": "Participant","valueType": "text","mimeType": "","isRepeatable": false,"attributes": [{"name": "script","value": "// this script compounds repeated comments by using lowercase comment strings as array keys\n//\nvar stage = 'CarotidIntima'\nvar c_seq = $group('Admin.Action.stage',stage,'Admin.Action.comment').asSequence()\nvar e_seq = $group('Admin.Action.stage',stage,'Admin.Action.eventReason').asSequence()\nvar res = null\nif(c_seq.size().eq(e_seq.size()).value())\n{\n  var c_str = []  // string array of comments\n  var e_str = []  // string array of event reasons\n\n  for(var i = 0; i < c_seq.size(); i++) {\n    var c = c_seq.valueAt(i).value()\n    if(null == c) continue\n    c = c.replace(/[^a-zA-Z0-9 àâäèéêëîïôœùûüÿçÀÂÄÈÉÊËÎÏÔŒÙÛÜŸÇ]/g,\"\")\n    var e = e_seq.valueAt(i).value()\n    if(0 < c.length) {\n      c_str.push(c)\n      if(null != e && 0 < e.length) {\n        e = e.slice(14)\n      } else {\n        e = 'SeeComment'\n      }\n      e_str.push(e)\n    }\n  }\n\n  if(0 < c_str.length) {\n    var arr = []  // array of event reasons\n    var key_orig = []  // array of lower cased comments as unique keys\n    for(var i = 0; i < c_str.length; i++) {\n      var key = c_str[i]\n      var key_lower = key.toLowerCase()\n      // retain the first encountered instance of the comment\n      //\n      if(undefined === key_orig[key_lower])\n        key_orig[key_lower] = key\n\n      if(undefined === arr[e_str[i]])\n        arr[e_str[i]] = []\n\n      if(-1===arr[e_str[i]].indexOf(key_orig[key_lower]))\n        arr[e_str[i]].push(key_orig[key_lower])\n    }\n\n    // loop over the final array of event reasons and their sets of comments\n    //\n    var str = '{'\n    for(var key in arr) {\n      str += '\"' + key + '\":['\n      var t = []\n      for(var i = 0; i < arr[key].length; i++) {\n        t.push('\"' + arr[key][i] + '\"')\n      }\n      str += t.join(',') + '],'\n    }\n\n    res = newValue(str.substring(0,str.length-1)+'}','text')\n  }\n}\nres"}],"unit": "","index": 0,"referencedEntityType": ""},{"name": "duration","entityType": "Participant","valueType": "integer","mimeType": "","isRepeatable": false,"attributes": [{"name": "script","value": "null\n/* TODO - revamp script\nvar res=null\nif($this('contraindicated').not().and(\n  $('cosmos_dcs.QC_F1_meta:group_duration_ecg').isNull().not()).value()) {\n  var stages = $('clsa-dcs-f1.Participants:Admin.StageInstance.stage').asSequence()\n  var preIndex = $('cosmos_dcs.QC_F1_meta:group_duration_ecg').first().value()\n  var postIndex = $('cosmos_dcs.QC_F1_meta:group_duration_ecg').last().value()\n  var cimtStages = stages.filter(function(v,i){\n    return (preIndex <= i && i <= postIndex)\n  })\n  var ecgIndex = cimtStages.indexOf('ECG').value()\n  var cimtIndex = cimtStages.indexOf('CarotidIntima').value()\n\n  if(-1!=ecgIndex && -1!=cimtIndex) {\n    var pre=newValue(null,'datetime')\n    var post=newValue(null,'datetime')\n    // get the stage immediately before cimt\n    cimtIndex=0\n    for(var i=postIndex;i>0;i--) {\n      var stage=stages.valueAt(i).value()\n      if('CarotidIntima'==stage) {\n        cimtIndex=i\n        break\n      }\n    }\n    for(var i=cimtIndex-1;i>0;i--) {\n      var stage=stages.valueAt(i).value()\n      var isQ=-1!=$('cosmos_dcs.QC_F1_meta:group_questionnaire').indexOf(stage)\n      var isI=-1!=$('cosmos_dcs.QC_F1_meta:group_instrument').indexOf(stage)\n      if(!(isQ || isI)) continue\n      pre=isQ ?\n        $('clsa-dcs-f1.'+stage+':QuestionnaireRun.timeEnd') :\n        $('clsa-dcs-f1.'+stage+':InstrumentRun.timeEnd')\n      break\n    }\n    // get the stage immediately after cimt\n    for(var i=cimtIndex+1;i<postIndex+5;i--) {\n      var stage=stages.valueAt(i).value()\n      var isQ=-1!=$('cosmos_dcs.QC_F1_meta:group_questionnaire').indexOf(stage)\n      var isI=-1!=$('cosmos_dcs.QC_F1_meta:group_instrument').indexOf(stage)\n      if(!(isQ || isI)) continue\n      post=isQ ?\n        $('clsa-dcs-f1.'+stage+':QuestionnaireRun.timeStart') :\n        $('clsa-dcs-f1.'+stage+':InstrumentRun.timeStart')\n      break\n    }\n\n    if(post.after(pre).value()) {\n      res=post.time().minus(pre.time()).div(1000)\n    }\n  }\n}\nres\n*/"}],"unit": "","index": 0,"referencedEntityType": ""},{"name": "file_name","entityType": "Participant","valueType": "text","mimeType": "","isRepeatable": true,"occurrenceGroup": "","attributes": [{"name": "script","value": "newSequence([\n  'cineloop_1_left','cineloop_1_right',\n  'still_1_left','still_1_right',\n  'still_2_left','still_2_right',\n  'still_3_left','still_3_right',\n  'sr_1_left','sr_1_right'\n  ],'text')"}],"unit": "","index": 0,"referencedEntityType": ""},{"name": "file_size","entityType": "Participant","valueType": "integer","mimeType": "","isRepeatable": true,"occurrenceGroup": "","attributes": [{"name": "script","value": "newSequence([\n  $group('Measure.SIDE','Left','Measure.CINELOOP_1').asSequence().last().length(),\n  $group('Measure.SIDE','Right','Measure.CINELOOP_1').asSequence().last().length(),\n  $group('Measure.SIDE','Left','Measure.STILL_IMAGE_1').asSequence().last().length(),\n  $group('Measure.SIDE','Right','Measure.STILL_IMAGE_1').asSequence().last().length(),\n  $group('Measure.SIDE','Left','Measure.STILL_IMAGE_2').asSequence().last().length(),\n  $group('Measure.SIDE','Right','Measure.STILL_IMAGE_2').asSequence().last().length(),\n  $group('Measure.SIDE','Left','Measure.STILL_IMAGE_3').asSequence().last().length(),\n  $group('Measure.SIDE','Right','Measure.STILL_IMAGE_3').asSequence().last().length(),\n  $group('Measure.SIDE','Left','Measure.SR_1').asSequence().last().length(),\n  $group('Measure.SIDE','Right','Measure.SR_1').asSequence().last().length(),\n  ],'integer')"}],"unit": "","index": 0,"referencedEntityType": ""},{"name": "file_complete","entityType": "Participant","valueType": "decimal","mimeType": "","isRepeatable": false,"attributes": [{"name": "script","value": "$this('file_size').trimmer().size().div($this('file_name').size()).multiply(100)"}],"unit": "","index": 0,"referencedEntityType": ""}]}}