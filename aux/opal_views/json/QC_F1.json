{
  "Magma.VariableListViewDto.view": {
    "variables": [
      {
        "attributes": [
          {
            "name": "stage", 
            "value": "Spirometry"
          }, 
          {
            "name": "script", 
            "value": "$('clsa-dcs-f1.Spirometry:InstrumentRun.user').whenNull(\n  $group('Admin.Action.stage','Spirometry','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_technician_spirometry", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$('Admin.ApplicationConfiguration.siteName').map({\n  'BritishColumbia':'University of BC DCS',\n  'British Columbia':'University of BC DCS',\n  'Calgary':'Calgary DCS',\n  'Dalhousie':'Dalhousie DCS',\n  'Hamilton':'Hamilton DCS',\n  'Manitoba':'Manitoba DCS',\n  'McGill':'McGill DCS',\n  'McMaster':'Hamilton DCS',\n  'Memorial':'Memorial DCS',\n  'Memorial University':'Memorial DCS',\n  'Ottawa':'Ottawa DCS',\n  'Sherbrooke':'Sherbrooke DCS',\n  'Simon Fraser':'Simon Fraser DCS',\n  'SimonFraser':'Simon Fraser DCS',\n  'UniversityofBC':'University of BC DCS',\n  'University of Manitoba':'Manitoba DCS',\n  'University of Victoria':'Victoria DCS',\n  'Victoria':'Victoria DCS'},null) "
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "interview_site", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$this('data_qac_spirometry').isNull().and(\n  $this('stage_contraindicated_spirometry').eq(0),\n  $this('stage_skip_spirometry').isNull()\n).value() ? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_missing_spirometry", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var action=$group('Admin.Action.stage','Spirometry','Admin.Action.actionType').asSequence()\nvar res=$group('Admin.Action.stage','Spirometry','Admin.Action.eventReason').asSequence().filter(function(v,i){\n  return action.indexOf('SKIP')==i\n  }).last()\nif(res.isNull().not().value()) {\n  res=newValue(res.value().slice(14),'text')  \n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_skip_spirometry", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$group('clsa-dcs-f1.Participants:Admin.StageInstance.stage','Spirometry',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value() \n? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_contraindicated_spirometry", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "derivedFrom", 
            "namespace": "opal", 
            "value": "/datasource/clsa-dcs-f1/table/Participants/variable/Admin.Interview.startDate"
          }, 
          {
            "name": "script", 
            "value": "$('Admin.Interview.startDate')"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "interview_start_date", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "date"
      }, 
      {
        "attributes": [
          {
            "name": "identifier", 
            "value": "true"
          }, 
          {
            "name": "derivedFrom", 
            "namespace": "opal", 
            "value": "/datasource/clsa-dcs-f1/table/Participants/variable/Admin.Participant.barcode"
          }, 
          {
            "name": "script", 
            "value": "$('Admin.Participant.barcode')"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "interview_barcode", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var res=$('clsa-dcs-f1.Spirometry:OUTPUT_QUALITY_GRADE')\nif(!res.isNull().value()) {\n  res=newValue('{grade:'+res.value()+'}','text')\n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_qac_spirometry", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$('clsa-dcs-f1.GripStrength:InstrumentRun.user').whenNull(\n  $group('Admin.Action.stage','GripStrength','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_technician_grip_strength", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$group('clsa-dcs-f1.Participants:Admin.StageInstance.stage','GripStrength',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value() \n? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_contraindicated_grip_strength", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var action=$group('Admin.Action.stage','GripStrength','Admin.Action.actionType').asSequence()\nvar res=$group('Admin.Action.stage','GripStrength','Admin.Action.eventReason').asSequence().filter(function(v,i){\n  return action.indexOf('SKIP')==i\n  }).last()\nif(res.isNull().not().value()) {\n  res=newValue(res.value().slice(14),'text')  \n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_skip_grip_strength", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$this('data_qac_grip_strength').isNull().and(\n  $this('stage_contraindicated_grip_strength').eq(0),\n  $this('stage_skip_grip_strength').isNull()\n).value() ? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_missing_grip_strength", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var res=$('clsa-dcs-f1.GripStrength:Measure.RES_TRIAL_MAX')\nif(res.isNull().not().value()) {\n  res=newValue('{trial_count:'+res.size()+'}','text')\n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_qac_grip_strength", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$('clsa-dcs-f1.BloodPressure:InstrumentRun.user').whenNull(\n  $group('Admin.Action.stage','BloodPressure','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_technician_blood_pressure", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$group('clsa-dcs-f1.Participants:Admin.StageInstance.stage','BloodPressure',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value() \n? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_contraindicated_blood_pressure", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var action=$group('Admin.Action.stage','BloodPressure','Admin.Action.actionType').asSequence()\nvar res=$group('Admin.Action.stage','BloodPressure','Admin.Action.eventReason').asSequence().filter(function(v,i){\n  return action.indexOf('SKIP')==i\n  }).last()\nif(res.isNull().not().value()) {\n  res=newValue(res.value().slice(14),'text')  \n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_skip_blood_pressure", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$this('data_qac_blood_pressure').isNull().and(\n  $this('stage_contraindicated_blood_pressure').eq(0),\n  $this('stage_skip_blood_pressure').isNull()\n).value() ? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_missing_blood_pressure", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var res=$('clsa-dcs-f1.BloodPressure:RES_AVG_COUNT')\nif(res.isNull().not().value()) {\n  res=newValue('{trial_count:'+res.value()+'}','text')\n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_qac_blood_pressure", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$('clsa-dcs-f1.ECG:InstrumentRun.user').whenNull(\n  $group('Admin.Action.stage','ECG','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_technician_ecg", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$group('clsa-dcs-f1.Participants:Admin.StageInstance.stage','ECG',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value() \n? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_contraindicated_ecg", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var action=$group('Admin.Action.stage','ECG','Admin.Action.actionType').asSequence()\nvar res=$group('Admin.Action.stage','ECG','Admin.Action.eventReason').asSequence().filter(function(v,i){\n  return action.indexOf('SKIP')==i\n  }).last()\nif(res.isNull().not().value()) {\n  res=newValue(res.value().slice(14),'text')  \n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_skip_ecg", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$this('data_qac_ecg').isNull().and(\n  $this('stage_contraindicated_ecg').eq(0),\n  $this('stage_skip_ecg').isNull()\n).value() ? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_missing_ecg", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var f=$('clsa-dcs-f1.ECG:RES_XML_FILE')\nvar q=$('clsa-dcs-f1.ECG:RES_DIAGNOSIS')\nvar res=null\nif(f.isNull().not().value()) {\n  var str='{filesize:'+f.length()+',quality:'\n  if(q.lowerCase().matches(/poor data quality/).value()) {\n    str += '0}'\n  } else {\n    str += '1}'  \n  }\n  res = newValue(str,'text')\n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_qac_ecg", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$('clsa-dcs-f1.CognitiveTest:InstrumentRun.user').whenNull(\n  $group('Admin.Action.stage','CognitiveTest','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_technician_cognitive_test", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$group('clsa-dcs-f1.Participants:Admin.StageInstance.stage','CognitiveTest',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value() \n? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_contraindicated_cognitive_test", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var action=$group('Admin.Action.stage','CognitiveTest','Admin.Action.actionType').asSequence()\nvar res=$group('Admin.Action.stage','CognitiveTest','Admin.Action.eventReason').asSequence().filter(function(v,i){\n  return action.indexOf('SKIP')==i\n  }).last()\nif(res.isNull().not().value()) {\n  res=newValue(res.value().slice(14),'text')  \n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_skip_cognitive_test", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$this('data_qac_cognitive_test').isNull().and(\n  $this('stage_contraindicated_cognitive_test').eq(0),\n  $this('stage_skip_cognitive_test').isNull()\n).value() ? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_missing_cognitive_test", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var res=$('clsa-dcs-f1.CognitiveTest:RES_RESULT_FILE')\nif(res.isNull().not().value()) {\n  res = newValue('{filesize:'+res.length()+'}','text')\n}  \nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_qac_cognitive_test", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$('clsa-dcs-f1.Hearing:InstrumentRun.user').whenNull(\n  $group('Admin.Action.stage','Hearing','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_technician_hearing", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$group('clsa-dcs-f1.Participants:Admin.StageInstance.stage','Hearing',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value() \n? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_contraindicated_hearing", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var action=$group('Admin.Action.stage','Hearing','Admin.Action.actionType').asSequence()\nvar res=$group('Admin.Action.stage','Hearing','Admin.Action.eventReason').asSequence().filter(function(v,i){\n  return action.indexOf('SKIP')==i\n  }).last()\nif(res.isNull().not().value()) {\n  res=newValue(res.value().slice(14),'text')  \n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_skip_hearing", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$this('data_qac_hearing').isNull().and(\n  $this('stage_contraindicated_hearing').eq(0),\n  $this('stage_skip_hearing').isNull()\n).value() ? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_missing_hearing", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var side = ['RIGHT','LEFT']\nvar freq = ['1KT','500','1K','2K','3K','4K','6K','8K']\nvar count = {RIGHT:0,LEFT:0}\nvar countfreq = {RIGHT:0,LEFT:0}\nvar counterr = {RIGHT:0,LEFT:0}\nfor(var i=0;i<side.length;i++) {\n  var s = side[i]\n  var v = 'clsa-dcs-f1.Hearing:RES_' + s + '_'\n  for(var j=0;j<freq.length;j++) {\n    var f = v + freq[j]\n    if ($(f).isNull().not().or($(f + '_ERR').isNull().not()).value()) count[s]++;\n    if ($(f).isNull().not().value()) countfreq[s]++;\n    if ($(f + '_ERR').isNull().not().value()) counterr[s]++;\n  }\n}\nres = (0 == count.RIGHT && 0 == count.LEFT && \n  $('clsa-dcs-f1.Hearing:RES_TEST_ID').isNull().and(\n    $('clsa-dcs-f1.Hearing:RES_TEST_DATETIME').isNull()).value()) ?\n      null : newValue(\n        '{response_left:'+count.LEFT+\n        ',response_right:'+count.RIGHT+\n        ',error_left:'+(counterr.LEFT>0 && countfreq.LEFT==0 ? '1' : '0')+\n        ',error_right:'+(counterr.RIGHT>0 && countfreq.RIGHT==0 ? '1' : '0')+\n        '}','text')"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_qac_hearing", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$('clsa-dcs-f1.Tonometer:InstrumentRun.user').whenNull(\n  $group('Admin.Action.stage','Tonometer','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_technician_tonometer", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$group('clsa-dcs-f1.Participants:Admin.StageInstance.stage','Tonometer',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value() \n? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_contraindicated_tonometer", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var action=$group('Admin.Action.stage','Tonometer','Admin.Action.actionType').asSequence()\nvar res=$group('Admin.Action.stage','Tonometer','Admin.Action.eventReason').asSequence().filter(function(v,i){\n  return action.indexOf('SKIP')==i\n  }).last()\nif(res.isNull().not().value()) {\n  res=newValue(res.value().slice(14),'text')  \n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_skip_tonometer", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$this('data_qac_tonometer').isNull().and(\n  $this('stage_contraindicated_tonometer').eq(0),\n  $this('stage_skip_tonometer').isNull()\n).value() ? 1: 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_missing_tonometer", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var eye=$('clsa-dcs-f1.Tonometer:Measure.TON_EYE').lowerCase().map({\n  'l':'L',\n  'r':'R',\n  'right':'R',\n  'left':'L',\n  'left eye':'L',\n  'right eye':'R',\n  'righr':'R',\n  'rigth':'R',\n  'rught':'R',\n  'lrft':'L',\n  '0':'L',\n  '1':'R',\n  'll':'L',\n  'rr':'R',\n  'le':'L',\n  'leeft':'L',\n  'gauche':'L',\n  'droit':'R',\n  'droite':'R'},null)\n\n// bare minimum useful data is IOPcc: Corneal Compensated Intraocular Pressure\nvar iopcc=$('clsa-dcs-f1.Tonometer:Measure.TON_IOPCC').asSequence() \n\n// if there is raw applanation and pressure data there will be a quality index\n// for each set of measurements\nvar qual=$('clsa-dcs-f1.Tonometer:Measure.TON_QUALITYINDEX').asSequence()\nvar appl=$('clsa-dcs-f1.Tonometer:Measure.TON_PRESSURE').asSequence()\nvar pres=$('clsa-dcs-f1.Tonometer:Measure.TON_APPLANATION').asSequence()\n\nvar has_iopcc=iopcc.size().eq(eye.size()).value()\nvar has_qual=qual.size().eq(eye.size()).value()\nvar has_appl=appl.size().eq(eye.size()).value()\nvar has_pres=pres.size().eq(eye.size()).value()\nvar res=null\nif(eye.isNull().not().value()) {\n  var side={L:{left_iopcc:'0',left_qi:'-1',left_appl:'0',left_pres:'0'},\n            R:{right_iopcc:'0',right_qi:'-1',right_appl:'0',right_pres:'0'}}\n  for(var i=0;i<eye.size();i++) {\n    var e=eye.valueAt(i).value()\n    if(has_iopcc) {\n      var q=newValue(iopcc.valueAt(i).value(),'text')\n      if(q.matches(/^(\\d*\\.)?\\d+$/)) {\n        if('L'==e) {\n          side[e].left_iopcc='1'\n        } else if('R'==e) {\n          side[e].right_iopcc='1'\n        }\n      }\n    }\n    if(has_qual) {\n      var q=newValue(qual.valueAt(i).round(2).value(),'text')\n      if(q.matches(/^(\\d*\\.)?\\d+$/)) {\n        if('L'==e) {\n          side[e].left_qi=q.value()\n        } else if('R'==e) {\n          side[e].right_qi=q.value()\n        }\n      }\n    }\n    if(has_appl) {\n      var q=appl.valueAt(i).value().split(',').length\n      if('L'==e) {\n        side[e].left_appl=q\n      } else if('R'==e) {\n        side[e].right_appl=q\n      }      \n    }        \n    if(has_pres) {\n      var q=pres.valueAt(i).value().split(',').length\n      if('L'==e) {\n        side[e].left_pres=q\n      } else if('R'==e) {\n        side[e].right_pres=q\n      }\n    }\n  }\n  res=newValue(\n    JSON.stringify(side.L).replace(/\"/g,'').replace(/}/g,',') +\n    JSON.stringify(side.R).replace(/\"/g,'').replace(/{/g,''), 'text')\n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_qac_tonometer", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$('clsa-dcs-f1.Weight:InstrumentRun.user').whenNull(\n  $group('Admin.Action.stage','Weight','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_technician_weight", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$group('clsa-dcs-f1.Participants:Admin.StageInstance.stage','Weight',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value() \n? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_contraindicated_weight", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var action=$group('Admin.Action.stage','Weight','Admin.Action.actionType').asSequence()\nvar res=$group('Admin.Action.stage','Weight','Admin.Action.eventReason').asSequence().filter(function(v,i){\n  return action.indexOf('SKIP')==i\n  }).last()\nif(res.isNull().not().value()) {\n  res=newValue(res.value().slice(14),'text')  \n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_skip_weight", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$this('data_qac_weight').isNull().and(\n  $this('stage_contraindicated_weight').eq(0),\n  $this('stage_skip_weight').isNull()\n).value() ? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_missing_weight", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var res=$('clsa-dcs-f1.Weight:Measure.RES_WEIGHT_MEASURE')\nif(res.size().gt(1).value()){\n  res=newValue('{stddev:'+res.stddev().round(6).value()+',size:'+res.size().value()+'}','text')\n} else if(res.size().eq(1).value()) {\n  res=newValue('{stddev:0,size:1}','text')\n} \nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_qac_weight", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$('clsa-dcs-images-f1.RetinalScanLeft:InstrumentRun.user').whenNull(\n  $group('Admin.Action.stage','RetinalScanLeft','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_technician_retinal_scan_left", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$group('clsa-dcs-f1.Participants:Admin.StageInstance.stage','RetinalScanLeft',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value()\n? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_contraindicated_retinal_scan_left", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var action=$group('Admin.Action.stage','RetinalScanLeft','Admin.Action.actionType').asSequence()\nvar res=$group('Admin.Action.stage','RetinalScanLeft','Admin.Action.eventReason').asSequence().filter(function(v,i){\n  return action.indexOf('SKIP')==i\n  }).last()\nif(res.isNull().not().value()) {\n  res=newValue(res.value().slice(14),'text')\n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_skip_retinal_scan_left", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$this('data_qac_retinal_scan_left').isNull().and(\n  $this('stage_contraindicated_retinal_scan_left').eq(0),\n  $this('stage_skip_retinal_scan_left').isNull()\n).value() ? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_missing_retinal_scan_left", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var res=$('clsa-dcs-images-f1.RetinalScanLeft:EYE')\nif(res.isNull().not().value()) {\n  res=newValue('{filesize:'+res.length()+'}','text')\n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_qac_retinal_scan_left", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$('clsa-dcs-images-f1.RetinalScanRight:InstrumentRun.user').whenNull(\n  $group('Admin.Action.stage','RetinalScanRight','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_technician_retinal_scan_right", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$group('clsa-dcs-f1.Participants:Admin.StageInstance.stage','RetinalScanRight',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value()\n? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_contraindicated_retinal_scan_right", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var action=$group('Admin.Action.stage','RetinalScanRight','Admin.Action.actionType').asSequence()\nvar res=$group('Admin.Action.stage','RetinalScanRight','Admin.Action.eventReason').asSequence().filter(function(v,i){\n  return action.indexOf('SKIP')==i\n  }).last()\nif(res.isNull().not().value()) {\n  res=newValue(res.value().slice(14),'text')\n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_skip_retinal_scan_right", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$this('data_qac_retinal_scan_right').isNull().and(\n  $this('stage_contraindicated_retinal_scan_right').eq(0),\n  $this('stage_skip_retinal_scan_right').isNull()\n).value() ? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_missing_retinal_scan_right", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var res=$('clsa-dcs-images-f1.RetinalScanRight:EYE')\nif(res.isNull().not().value()) {\n  res=newValue('{filesize:'+res.length()+'}','text')\n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_qac_retinal_scan_right", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$('clsa-dcs-images-f1.LateralBoneDensity:InstrumentRun.user').whenNull(\n  $group('Admin.Action.stage','LateralBoneDensity','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_technician_lateral_bone_density", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$group('clsa-dcs-f1.Participants:Admin.StageInstance.stage','LateralBoneDensity',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value() \n? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_contraindicated_lateral_bone_density", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var action=$group('Admin.Action.stage','LateralBoneDensity','Admin.Action.actionType').asSequence()\nvar res=$group('Admin.Action.stage','LateralBoneDensity','Admin.Action.eventReason').asSequence().filter(function(v,i){\n  return action.indexOf('SKIP')==i\n  }).last()\nif(res.isNull().not().value()) {\n  res=newValue(res.value().slice(14),'text')\n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_skip_lateral_bone_density", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$this('data_qac_lateral_bone_density').isNull().and(\n  $this('stage_contraindicated_lateral_bone_density').eq(0),\n  $this('stage_skip_lateral_bone_density').isNull()\n).value() ? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_missing_lateral_bone_density", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var res=$('clsa-dcs-images-f1.LateralBoneDensity:RES_SEL_DICOM_MEASURE')\nif(res.isNull().not().value()) {\n  res = newValue('{filesize:'+res.length()+'}','text')\n}  \nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_qac_lateral_bone_density", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$('clsa-dcs-f1.StandingHeight:InstrumentRun.user').whenNull(\n  $group('Admin.Action.stage','StandingHeight','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_technician_standing_height", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$group('clsa-dcs-f1.Participants:Admin.StageInstance.stage','StandingHeight',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value() \n? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_contraindicated_standing_height", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var action=$group('Admin.Action.stage','StandingHeight','Admin.Action.actionType').asSequence()\nvar res=$group('Admin.Action.stage','StandingHeight','Admin.Action.eventReason').asSequence().filter(function(v,i){\n  return action.indexOf('SKIP')==i\n  }).last()\nif(res.isNull().not().value()) {\n  res=newValue(res.value().slice(14),'text')\n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_skip_standing_height", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$this('data_qac_standing_height').isNull().and(\n  $this('stage_contraindicated_standing_height').eq(0),\n  $this('stage_skip_standing_height').isNull()\n).value() ? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_missing_standing_height", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var res=$('clsa-dcs-f1.StandingHeight:Measure.RES_HEIGHT_MEASURE')\nif(res.size().gt(1).value()){\n  res=newValue('{stddev:'+res.stddev().round(6).value()+',size:'+res.size().value()+'}','text')\n} else if(res.size().eq(1).value()) {\n  res=newValue('{stddev:0,size:1}','text')\n} \nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_qac_standing_height", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$('clsa-dcs-images-f1.SpineBoneDensity:InstrumentRun.user').whenNull(\n  $group('Admin.Action.stage','SpineBoneDensity','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_technician_spine_bone_density", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$group('clsa-dcs-f1.Participants:Admin.StageInstance.stage','SpineBoneDensity',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value()\n? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_contraindicated_spine_bone_density", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var action=$group('Admin.Action.stage','SpineBoneDensity','Admin.Action.actionType').asSequence()\nvar res=$group('Admin.Action.stage','SpineBoneDensity','Admin.Action.eventReason').asSequence().filter(function(v,i){\n  return action.indexOf('SKIP')==i\n  }).last()\nif(res.isNull().not().value()) {\n  res=newValue(res.value().slice(14),'text')  \n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_skip_spine_bone_density", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$this('data_qac_spine_bone_density').isNull().and(\n  $this('stage_contraindicated_spine_bone_density').eq(0),\n  $this('stage_skip_spine_bone_density').isNull()\n).value() ? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_missing_spine_bone_density", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var res=$('clsa-dcs-images-f1.SpineBoneDensity:RES_SP_DICOM')\nif(res.isNull().not().value()) {\n  res = newValue('{filesize:'+res.length()+'}','text')\n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_qac_spine_bone_density", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$('clsa-dcs-images-f1.ForearmBoneDensity:InstrumentRun.user').whenNull(\n  $group('Admin.Action.stage','ForearmBoneDensity','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_technician_forearm_bone_density", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$group('clsa-dcs-f1.Participants:Admin.StageInstance.stage','ForearmBoneDensity',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value() \n? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_contraindicated_forearm_bone_density", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var action=$group('Admin.Action.stage','ForearmBoneDensity','Admin.Action.actionType').asSequence()\nvar res=$group('Admin.Action.stage','ForearmBoneDensity','Admin.Action.eventReason').asSequence().filter(function(v,i){\n  return action.indexOf('SKIP')==i\n  }).last()\nif(res.isNull().not().value()) {\n  res=newValue(res.value().slice(14),'text')  \n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_skip_forearm_bone_density", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$this('data_qac_forearm_bone_density').isNull().and(\n  $this('stage_contraindicated_forearm_bone_density').eq(0),\n  $this('stage_skip_forearm_bone_density').isNull()\n).value() ? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_missing_forearm_bone_density", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var res=$group('OUTPUT_FA_SIDE','LEFT','RES_FA_DICOM').asSequence().last().whenNull(\n  $group('OUTPUT_FA_SIDE','RIGHT','RES_FA_DICOM').asSequence().last())\nif(res.isNull().not().value()) {\n  res=newValue('{filesize:'+res.length().value()+'}','text')\n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_qac_forearm_bone_density", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$('clsa-dcs-images-f1.WholeBodyBoneDensity:InstrumentRun.user').whenNull(\n  $group('Admin.Action.stage','WholeBodyBoneDensity','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_technician_whole_body_bone_density", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$group('clsa-dcs-f1.Participants:Admin.StageInstance.stage','WholeBodyBoneDensity',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value() \n? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_contraindicated_whole_body_bone_density", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var action=$group('Admin.Action.stage','WholeBodyBoneDensity','Admin.Action.actionType').asSequence()\nvar res=$group('Admin.Action.stage','WholeBodyBoneDensity','Admin.Action.eventReason').asSequence().filter(function(v,i){\n  return action.indexOf('SKIP')==i\n  }).last()\nif(res.isNull().not().value()) {\n  res=newValue(res.value().slice(14),'text')  \n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_skip_whole_body_bone_density", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$this('data_qac_whole_body_bone_density').isNull().and(\n  $this('stage_contraindicated_whole_body_bone_density').eq(0),\n  $this('stage_skip_whole_body_bone_density').isNull()\n).value() ? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_missing_whole_body_bone_density", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var res=$('clsa-dcs-images-f1.WholeBodyBoneDensity:RES_WB_DICOM_1')\nif(res.isNull().not().value()) {\n  res = newValue('{filesize:'+res.length()+'}','text')\n}  \nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_qac_whole_body_bone_density", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$('clsa-dcs-images-f1.DualHipBoneDensity:InstrumentRun.user').whenNull(\n  $group('Admin.Action.stage','DualHipBoneDensity','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_technician_dual_hip_bone_density", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$group('clsa-dcs-f1.Participants:Admin.StageInstance.stage','DualHipBoneDensity',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value() \n? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_contraindicated_dual_hip_bone_density", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var action=$group('Admin.Action.stage','DualHipBoneDensity','Admin.Action.actionType').asSequence()\nvar res=$group('Admin.Action.stage','DualHipBoneDensity','Admin.Action.eventReason').asSequence().filter(function(v,i){\n  return action.indexOf('SKIP')==i\n  }).last()\nif(res.isNull().not().value()) {\n  res=newValue(res.value().slice(14),'text')  \n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_skip_dual_hip_bone_density", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$this('data_qac_dual_hip_bone_density').isNull().and(\n  $this('stage_contraindicated_dual_hip_bone_density').eq(0),\n  $this('stage_skip_dual_hip_bone_density').isNull()\n).value() ? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_missing_dual_hip_bone_density", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var l=$group('Measure.OUTPUT_HIP_SIDE','LEFT','Measure.RES_HIP_DICOM').asSequence().last()\nvar r=$group('Measure.OUTPUT_HIP_SIDE','RIGHT','Measure.RES_HIP_DICOM').asSequence().last()\nvar res=null\nif(!l.isNull().and(r.isNull()).value()) {\n  res=newValue(\n    '{filesize_left:'+\n    (l.isNull().value()?'0':l.length().value())+\n    ',filesize_right:'+\n    (r.isNull().value()?'0':r.length().value())+\n    '}', 'text')\n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_qac_dual_hip_bone_density", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$('clsa-dcs-images-f1.CarotidIntima:InstrumentRun.user').whenNull(\n  $group('Admin.Action.stage','CarotidIntima','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_technician_carotid_intima", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$group('clsa-dcs-f1.Participants:Admin.StageInstance.stage','CarotidIntima',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value() \n? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_contraindicated_carotid_intima", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var action=$group('Admin.Action.stage','CarotidIntima','Admin.Action.actionType').asSequence()\nvar res=$group('Admin.Action.stage','CarotidIntima','Admin.Action.eventReason').asSequence().filter(function(v,i){\n  return action.indexOf('SKIP')==i\n  }).last()\nif(res.isNull().not().value()) {\n  res=newValue(res.value().slice(14),'text')  \n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_skip_carotid_intima", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$this('data_qac_carotid_intima').isNull().and(\n  $this('stage_contraindicated_carotid_intima').eq(0),\n  $this('stage_skip_carotid_intima').isNull()\n).value() ? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_missing_carotid_intima", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var rc=$group('clsa-dcs-images-f1.CarotidIntima:Measure.SIDE','Right','Measure.CINELOOP_1').asSequence().last()\nvar rsr=$group('clsa-dcs-images-f1.CarotidIntima:Measure.SIDE','Right','Measure.SR_1').asSequence().last()\nvar rs1=$group('clsa-dcs-images-f1.CarotidIntima:Measure.SIDE','Right','Measure.STILL_IMAGE_1').asSequence().last()\nvar rs2=$group('clsa-dcs-images-f1.CarotidIntima:Measure.SIDE','Right','Measure.STILL_IMAGE_2').asSequence().last()\nvar rs3=$group('clsa-dcs-images-f1.CarotidIntima:Measure.SIDE','Right','Measure.STILL_IMAGE_3').asSequence().last()\nvar lc=$group('clsa-dcs-images-f1.CarotidIntima:Measure.SIDE','Left','Measure.CINELOOP_1').asSequence().last()\nvar lsr=$group('clsa-dcs-images-f1.CarotidIntima:Measure.SIDE','Left','Measure.SR_1').asSequence().last()\nvar ls1=$group('clsa-dcs-images-f1.CarotidIntima:Measure.SIDE','Left','Measure.STILL_IMAGE_1').asSequence().last()\nvar ls2=$group('clsa-dcs-images-f1.CarotidIntima:Measure.SIDE','Left','Measure.STILL_IMAGE_2').asSequence().last()\nvar ls3=$group('clsa-dcs-images-f1.CarotidIntima:Measure.SIDE','Left','Measure.STILL_IMAGE_3').asSequence().last()\nvar res=null\nif(!rc.isNull().and(rsr.isNull(),rs1.isNull(),rs2.isNull(),rs3.isNull(),\n   lc.isNull(),lsr.isNull(),ls1.isNull(),ls2.isNull(),ls3.isNull()).value()) {\n  var str=[]\n  str.push('filesize_left_cine:'+(lc.isNull().value()?'0':lc.length().value()))\n  str.push('filesize_left_sr:'+(lsr.isNull().value()?'0':lsr.length().value()))\n  str.push('filesize_left_still_1:'+(ls1.isNull().value()?'0':ls1.length().value()))\n  str.push('filesize_left_still_2:'+(ls2.isNull().value()?'0':ls2.length().value()))\n  str.push('filesize_left_still_3:'+(ls3.isNull().value()?'0':ls3.length().value()))\n  str.push('filesize_right_cine:'+(rc.isNull().value()?'0':rc.length().value()))\n  str.push('filesize_right_sr:'+(rsr.isNull().value()?'0':rsr.length().value()))\n  str.push('filesize_right_still_1:'+(rs1.isNull().value()?'0':rs1.length().value()))\n  str.push('filesize_right_still_2:'+(rs2.isNull().value()?'0':rs2.length().value()))\n  str.push('filesize_right_still_3:'+(rs3.isNull().value()?'0':rs3.length().value()))\n  res=newValue('{'+str.join(',')+'}','text')\n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_qac_carotid_intima", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$('clsa-dcs-f1.TUG:QuestionnaireRun.user').whenNull(\n  $group('Admin.Action.stage','TUG','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_technician_tug", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$group('clsa-dcs-f1.Participants:Admin.StageInstance.stage','TUG',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value() \n? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_contraindicated_tug", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var action=$group('Admin.Action.stage','TUG','Admin.Action.actionType').asSequence()\nvar res=$group('Admin.Action.stage','TUG','Admin.Action.eventReason').asSequence().filter(function(v,i){\n  return action.indexOf('SKIP')==i\n  }).last()\nif(res.isNull().not().value()) {\n  res=newValue(res.value().slice(14),'text')  \n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_skip_tug", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$this('data_qac_tug').isNull().and(\n  $this('stage_contraindicated_tug').eq(0),\n  $this('stage_skip_tug').isNull()\n).value() ? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_missing_tug", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var tt=$('clsa-dcs-f1.TUG:TUG_TIME').whenNull($('clsa-dcs-f1.TUG:TUG_TIME_2'))\nvar res=null\nif(tt.isNull().not().value()) {\n  var wt=$('clsa-dcs-f1.4mWalk:WLK_TIME').whenNull($('clsa-dcs-f1.4mWalk:WLK_TIME_2'))  \n  var ct=$('clsa-dcs-f1.ChairRise:CR_TIME').whenNull($('clsa-dcs-f1.ChairRise:CR_TIME_2'))  \n  var str = '0'\n  if(tt.isNull().not().and(ct.isNull().not()).value()) {\n    var cv=ct.div($('clsa-dcs-f1.ChairRise:CR_NB').whenNull(1))\n    str=Math.round(tt.minus(wt.multiply(1.5).plus(cv)).abs().value())\n  }  \n  res=newValue(\n    '{time:'+tt.round(3).value()+\n    ',congruency:'+str+\n    '}','text')\n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_qac_tug", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$('clsa-dcs-f1.ChairRise:QuestionnaireRun.user').whenNull(\n  $group('Admin.Action.stage','ChairRise','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_technician_chair_rise", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$group('clsa-dcs-f1.Participants:Admin.StageInstance.stage','ChairRise',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value() \n? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_contraindicated_chair_rise", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var action=$group('Admin.Action.stage','ChairRise','Admin.Action.actionType').asSequence()\nvar res=$group('Admin.Action.stage','ChairRise','Admin.Action.eventReason').asSequence().filter(function(v,i){\n  return action.indexOf('SKIP')==i\n  }).last()\nif(res.isNull().not().value()) {\n  res=newValue(res.value().slice(14),'text')  \n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_skip_chair_rise", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$this('data_qac_chair_rise').isNull().and(\n  $this('stage_contraindicated_chair_rise').eq(0),\n  $this('stage_skip_chair_rise').isNull()\n).value() ? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_missing_chair_rise", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var ct=$('clsa-dcs-f1.ChairRise:CR_TIME').whenNull($('clsa-dcs-f1.ChairRise:CR_TIME_2'))  \nvar res=null\nif(ct.isNull().not().value()) {\n  var wt=$('clsa-dcs-f1.4mWalk:WLK_TIME').whenNull($('clsa-dcs-f1.4mWalk:WLK_TIME_2'))  \n  var tt=$('clsa-dcs-f1.TUG:TUG_TIME').whenNull($('clsa-dcs-f1.TUG:TUG_TIME_2'))  \n  var str = '0'\n  if(tt.isNull().not().and(ct.isNull().not()).value()) {\n    var cv=ct.div($('clsa-dcs-f1.ChairRise:CR_NB').whenNull(1))\n    str=Math.round(tt.minus(wt.multiply(1.5).plus(cv)).abs().value())\n  }  \n  res=newValue(\n    '{time:'+ct.round(3).value()+\n    ',congruency:'+str+\n    '}','text')\n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_qac_chair_rise", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$('clsa-dcs-f1.HipsWaist:InstrumentRun.user').whenNull(\n  $group('Admin.Action.stage','HipsWaist','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_technician_hips_waist", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$group('clsa-dcs-f1.Participants:Admin.StageInstance.stage','HipsWaist',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value() \n? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_contraindicated_hips_waist", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var action=$group('Admin.Action.stage','HipsWaist','Admin.Action.actionType').asSequence()\nvar res=$group('Admin.Action.stage','HipsWaist','Admin.Action.eventReason').asSequence().filter(function(v,i){\n  return action.indexOf('SKIP')==i\n  }).last()\nif(res.isNull().not().value()) {\n  res=newValue(res.value().slice(14),'text')  \n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_skip_hips_waist", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$this('data_qac_hips_waist').isNull().and(\n  $this('stage_contraindicated_hips_waist').eq(0),\n  $this('stage_skip_hips_waist').isNull()\n).value() ? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_missing_hips_waist", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var i=$('clsa-dcs-f1.HipsWaist:IV_MEASURE_TAKEN')\nvar w=$('clsa-dcs-f1.HipsWaist:RES_WAIST_SIZE')\nvar h=$('clsa-dcs-f1.HipsWaist:RES_HIPS_SIZE')\nvar r=$('clsa-dcs-f1.HipsWaist:CALC_WAIST_TO_HIP_RATIO')\nvar res=null\nif(!i.isNull().and(w.isNull(),h.isNull(),r.isNull()).value()) {\n  var str='{iv_type:'+(i.isNull().value()?'NA':i.value())+','\n  str+='size_waist:'+(w.isNull().value()?'0':w.value())+','\n  str+='size_hips:'+(h.isNull().value()?'0':h.value())+','\n  str+='ratio:'+(r.isNull().value()?'0':r.round(3).value())+'}'\n  res=newValue(str,'text')\n}  \nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_qac_hips_waist", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$('clsa-dcs-f1.NeuropsychologicalBattery:QuestionnaireRun.user').whenNull(\n  $group('Admin.Action.stage','NeuropsychologicalBattery','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_technician_neuropsychological_battery", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$group('clsa-dcs-f1.Participants:Admin.StageInstance.stage','NeuropsychologicalBattery',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value() \n? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_contraindicated_neuropsychological_battery", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "// if a dcs by phone visit, then the skip will be \"ModifiedVisit\"\nvar res=null\nif($('clsa-dcs-f1.Participants:DCS_PHONE').isNull().not().value()){\n  res=newValue('ModifiedVisit','text')\n} else {\n  var action=$group('Admin.Action.stage','NeuropsychologicalBattery','Admin.Action.actionType').asSequence()\n  var res=$group('Admin.Action.stage','NeuropsychologicalBattery','Admin.Action.eventReason').asSequence().filter(function(v,i){\n      return action.indexOf('SKIP')==i\n    }).last()\n  if(res.isNull().not().value()) {\n    res=newValue(res.value().slice(14),'text')\n  }  \n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_skip_neuropsychological_battery", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$this('data_qac_neuropsychological_battery').isNull().and(\n  $this('stage_contraindicated_neuropsychological_battery').eq(0),\n  $this('stage_skip_neuropsychological_battery').isNull()\n).value() ? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_missing_neuropsychological_battery", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var stage='clsa-dcs-f1.NeuropsychologicalBattery:'\nvar p=$(stage+'QuestionnaireMetric.missingCount').asSequence()\nvar q=$(stage+'QuestionnaireMetric.questionCount').asSequence()\nvar res=null\nif(p.isNull().and(q.isNull()).not().value() && 0!=q.sum()) {\n  var str=[]\n  str.push(\n    'complete:'+\n    Math.round(q.sum().minus(p.sum()).multiply(100).div(q.sum()).value()))\n\nvar sections={\n'FAS':[\n'FAS_INSTRDY_COF1',\n'FAS_INSTRPT_COF1',\n'FAS_INSTFCTR_COF1',\n'FAS_INSTLST_COF1',\n'FAS_FRECR_COF1',\n'FAS_FCOMP_COF1',\n'FAS_FCOMP_COMM_COF1',\n'FAS_ARECR_COF1',\n'FAS_ACOMP_COF1',\n'FAS_ACOMP_COMM_COF1',\n'FAS_SRECR_COF1',\n'FAS_SCOMP_COF1',\n'FAS_SCOMP_COMM_COF1'],\n'SN':[\n'SN_LIVH_COF1',\n'SN_LIVH_M2R_COF1',\n'SN_LIVH_M2S_COF1',\n'SN_LIVH_M2A_COF1',\n'SN_LIVH_M3R_COF1',\n'SN_LIVH_M3S_COF1',\n'SN_LIVH_M3A_COF1',\n'SN_LIVH_M4R_COF1',\n'SN_LIVH_M4S_COF1',\n'SN_LIVH_M4A_COF1',\n'SN_LIVH_M5R_COF1',\n'SN_LIVH_M5S_COF1',\n'SN_LIVH_M5A_COF1',\n'SN_LIVH_M6R_COF1',\n'SN_LIVH_M6S_COF1',\n'SN_LIVH_M6A_COF1',\n'SN_LIVH_M7R_COF1',\n'SN_LIVH_M7S_COF1',\n'SN_LIVH_M7A_COF1',\n'SN_LIVH_M8R_COF1',\n'SN_LIVH_M8S_COF1',\n'SN_LIVH_M8A_COF1',\n'SN_LIVH_M9R_COF1',\n'SN_LIVH_M9S_COF1',\n'SN_LIVH_M9A_COF1',\n'SN_LIVH_M10R_COF1',\n'SN_LIVH_M10S_COF1',\n'SN_LIVH_M10A_COF1',\n'SN_CHILD_COF1',\n'SN_CHILDBIO_COF1',\n'SN_CHILDADP_COF1',\n'SN_CHILDSTP_COF1',\n'SN_CHILDPR_COF1',\n'SN_CHILDSTPPR_COF1',\n'SN_DGHTRLIV_COF1',\n'SN_SONLIV_COF1',\n'SN_SEECHILD_COF1',\n'SN_SIBLIV_COF1',\n'SN_SEESIB_COF1',\n'SN_RELLIV_COF1',\n'SN_SEEREL_COF1',\n'SN_FRND_COF1',\n'SN_SEEFRND_COF1',\n'SN_NEIBR_COF1',\n'SN_SEENEIBR_COF1',\n'SN_PERWSCH_COF1',\n'SN_PERCOM_COF1',\n'SN_PERACT_COF1'],\n'SPA':[\n'SPA_SOAC_COF1',\n'SPA_OUTS_COF1',\n'SPA_CHRCH_COF1',\n'SPA_SPORT_COF1',\n'SPA_EDUC_COF1',\n'SPA_CLUB_COF1',\n'SPA_NEIBR_COF1',\n'SPA_VOLUN_COF1',\n'SPA_OTACT_COF1',\n'SPA_MORAC_COF1',\n'SPA_PREVAC_COF1',\n'SPA_COHES_COF1'],\n'SSA':[\n'SSA_CONFBED_COF1',\n'SSA_NDTLK_COF1',\n'SSA_CRISIS_COF1',\n'SSA_TYTDR_COF1',\n'SSA_SHLOV_COF1',\n'SSA_GOODT_COF1',\n'SSA_INFO_COF1',\n'SSA_CONFID_COF1',\n'SSA_HUGS_COF1',\n'SSA_RELAX_COF1',\n'SSA_MEALS_COF1',\n'SSA_ADVCE_COF1',\n'SSA_MINDOFF_COF1',\n'SSA_CHORES_COF1',\n'SSA_SHFEAR_COF1',\n'SSA_SUGG_COF1',\n'SSA_ENJOY_COF1',\n'SSA_PROBLM_COF1',\n'SSA_LOVU_COF1',\n'SSA_PET_COF1'],\n'STP':[\n'NEUR_CONSREC_COF1',\n'STP_DOT_COF1',\n'STP_DOTRPT_COF1',\n'STP_DOTFCTR_COF1',\n'STP_DOTLST_COF1',\n'STP_DOTRECR_COF1',\n'STP_DOTABLE_COF1',\n'STP_DOTTIMEN_COF1',\n'STP_WOR_COF1',\n'STP_WORRPT_COF1',\n'STP_WORFCTR_COF1',\n'STP_WORLST_COF1',\n'STP_WORRECR_COF1',\n'STP_WORABLE_COF1',\n'STP_WORTIMEN_COF1',\n'STP_COL_COF1',\n'STP_COLRPT_COF1',\n'STP_COLFCTR_COF1',\n'STP_COLLST_COF1',\n'STP_COLRECR_COF1',\n'STP_COLABLE_COF1',\n'STP_COLTIMEN_COF1',\n'STP_COLCOMM_COF1']\n}\n\n  var skip=[]\n  if($(stage+'QuestionnaireRun.version').any('4.0').value()) {\n    skip.push('STP')\n  }\n\n  for(var key in sections) {\n    if(-1!=skip.indexOf(key)) {\n      str.push(key+':0')\n      continue\n    }\n    var rcount=0\n    var qcount=0\n    var arr=sections[key]\n    for(var i=0; i<arr.length; i++ ) {\n      var j=$(stage+arr[i])\n      if(j.isNull().value()) continue\n      qcount++      \n      rcount+=j.any('REFUSED').value()?1:0\n    }\n    if(0==qcount) {\n      str.push(key+':100')\n    } else {\n      var perc=100.0*rcount/qcount      \n      if(0<perc && 100>perc && 0!=(perc-Math.floor(perc))) {        \n        perc=perc.toFixed(3)\n      }\n      str.push(key+':'+perc)\n    }  \n  }\n\n  res=newValue('{'+str.join(',')+'}','text')\n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_qac_neuropsychological_battery", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$('clsa-dcs-f1.StandingBalance:QuestionnaireRun.user').whenNull(\n  $group('Admin.Action.stage','StandingBalance','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_technician_standing_balance", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$group('clsa-dcs-f1.Participants:Admin.StageInstance.stage','StandingBalance',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value() \n? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_contraindicated_standing_balance", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var action=$group('Admin.Action.stage','StandingBalance','Admin.Action.actionType').asSequence()\nvar res=$group('Admin.Action.stage','StandingBalance','Admin.Action.eventReason').asSequence().filter(function(v,i){\n  return action.indexOf('SKIP')==i\n  }).last()\nif(res.isNull().not().value()) {\n  res=newValue(res.value().slice(14),'text')  \n} else {\n  var l1=$('clsa-dcs-f1.StandingBalance:STAND_COMPLETION_LEFT')  \n  var r1=$('clsa-dcs-f1.StandingBalance:STAND_COMPLETION_RIGHT')  \n  if(l1.any('NO').value()) {\n    var l2=$('clsa-dcs-f1.StandingBalance:STAND_UNCOMPLETE_LEFT').map({\n      'TECHNICAL':'TechnicalProblem',\n      'PARTICIPANT-DECISION':'ParticipantDecision',\n      'INTERVIEWER-DECISION':'InterviewerDecision',\n      'OTHER-SPEFICY':'SeeComment'},null)\n    if(l2.isNull().not().value()) {\n      res=l2\n    }  \n  } \n  if (null===res && r1.any('NO').value()) {\n    var r2=$('clsa-dcs-f1.StandingBalance:STAND_UNCOMPLETE_RIGHT').map({\n      'TECHNICAL':'TechnicalProblem',\n      'PARTICIPANT-DECISION':'ParticipantDecision',\n      'INTERVIEWER-DECISION':'InterviewerDecision',\n      'OTHER-SPEFICY':'SeeComment'},null)\n    if(r2.isNull().not().value()) {\n      res=r2\n    }\n  }\n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_skip_standing_balance", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$this('data_qac_standing_balance').isNull().and(\n  $this('stage_contraindicated_standing_balance').eq(0),\n  $this('stage_skip_standing_balance').isNull()\n).value() ? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_missing_standing_balance", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var b=$('clsa-dcs-f1.StandingBalance:STAND_BEST').whenNull($('clsa-dcs-f1.StandingBalance:STAND_BEST_2'))\nvar lc =$('clsa-dcs-f1.StandingBalance:STAND_COMPLETION_LEFT')\nvar rc =$('clsa-dcs-f1.StandingBalance:STAND_COMPLETION_RIGHT')\nvar res=null\nif(!b.isNull().and(lc.isNull(),rc.isNull()).value()) {\n  var str = '{time_best:'\n  if(b.isNull().not().value()) {\n    str+=b.round(3).value()\n  } else  {\n    str+='-1'\n  }\n  var l=$('clsa-dcs-f1.StandingBalance:STAND_LEFT_TIME').whenNull($('clsa-dcs-f1.StandingBalance:STAND_LEFT_TIME_2'))\n  str+=',time_left:'\n  if(l.isNull().not().value()) {\n    str+=l.round(3).value()\n  } else  {\n    str+='-1'\n  }\n  var r=$('clsa-dcs-f1.StandingBalance:STAND_RIGHT_TIME').whenNull($('clsa-dcs-f1.StandingBalance:STAND_RIGHT_TIME_2'))\n  str+=',time_right:'\n  if(r.isNull().not().value()) {\n    str+=r.round(3).value()\n  } else  {\n    str+='-1'\n  }\n  str+='}'  \n  res=newValue(str,'text')\n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_qac_standing_balance", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$('clsa-dcs-f1.4mWalk:QuestionnaireRun.user').whenNull(\n  $group('Admin.Action.stage','4mWalk','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_technician_four_metre_walk", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$group('clsa-dcs-f1.Participants:Admin.StageInstance.stage','4mWalk',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value() \n? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_contraindicated_four_metre_walk", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var action=$group('Admin.Action.stage','4mWalk','Admin.Action.actionType').asSequence()\nvar res=$group('Admin.Action.stage','4mWalk','Admin.Action.eventReason').asSequence().filter(function(v,i){\n  return action.indexOf('SKIP')==i\n  }).last()\nif(res.isNull().not().value()) {\n  res=newValue(res.value().slice(14),'text')  \n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_skip_four_metre_walk", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$this('data_qac_four_metre_walk').isNull().and(\n  $this('stage_contraindicated_four_metre_walk').eq(0),\n  $this('stage_skip_four_metre_walk').isNull()\n).value() ? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_missing_four_metre_walk", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var wt=$('clsa-dcs-f1.4mWalk:WLK_TIME').whenNull($('clsa-dcs-f1.4mWalk:WLK_TIME_2'))\nvar res=null\nif(wt.isNull().not().value()) {\n  var tt=$('clsa-dcs-f1.TUG:TUG_TIME').whenNull($('clsa-dcs-f1.TUG:TUG_TIME_2'))\n  var ct=$('clsa-dcs-f1.ChairRise:CR_TIME').whenNull($('clsa-dcs-f1.ChairRise:CR_TIME_2'))  \n  var str = '0'\n  if(tt.isNull().not().and(ct.isNull().not()).value()) {\n    var cv=ct.div($('clsa-dcs-f1.ChairRise:CR_NB').whenNull(1))\n    str=Math.round(tt.minus(wt.multiply(1.5).plus(cv)).abs().value())\n  }  \n  res=newValue(\n    '{time:'+wt.round(3).value()+\n    ',congruency:'+str+\n    '}','text')\n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_qac_four_metre_walk", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$('clsa-dcs-f1.VisionAcuity:QuestionnaireRun.user').whenNull(\n  $group('Admin.Action.stage','VisionAcuity','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_technician_vision_acuity", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$group('clsa-dcs-f1.Participants:Admin.StageInstance.stage','VisionAcuity',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value() \n? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_contraindicated_vision_acuity", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var action=$group('Admin.Action.stage','VisionAcuity','Admin.Action.actionType').asSequence()\nvar res=$group('Admin.Action.stage','VisionAcuity','Admin.Action.eventReason').asSequence().filter(function(v,i){\n  return action.indexOf('SKIP')==i\n  }).last()\nif(res.isNull().not().value()) {\n  res=newValue(res.value().slice(14),'text')  \n} else {\n  var tests=['DONE_VA','DONE_BOTH_VA','DONE_LEFT_VA','DONE_RIGHT_VA','DONE_LEFT_PO_VA','DONE_RIGHT_PO_VA']\n  var reasons=['DONE_RSN_VA','DONE_RSN_BOTH_VA','DONE_RSN_LEFT_VA','DONE_RSN_RIGHT_VA','DONE_RSN_LEFT_PO_VA','DONE_RSN_RIGHT_PO_VA']\n  for(var i=0;i<tests.length;i++) {\n    var t=$('clsa-dcs-f1.VisionAcuity:'+tests[i])\n    if(t.any('NO').value()) {\n      var r=$('clsa-dcs-f1.VisionAcuity:'+reasons[i]).map({\n      'TECHNICAL-PROBLEM':'TechnicalProblem',\n      'PARTICIPANT-DECISION':'ParticipantDecision',\n      'INTERVIEWER-DECISION':'InterviewerDecision',\n      'OTHER':'SeeComment'},null)\n      if(r.isNull().not().value()) {\n        res=r\n        break\n      }\n    }\n  }  \n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_skip_vision_acuity", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$this('data_qac_vision_acuity').isNull().and(\n  $this('stage_contraindicated_vision_acuity').eq(0),\n  $this('stage_skip_vision_acuity').isNull()\n).value() ? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_missing_vision_acuity", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var count = {RIGHT:0,LEFT:0}\nvar rtests=['DONE_RIGHT_VA','DONE_RIGHT_PO_VA']\nvar ltests=['DONE_LEFT_VA','DONE_LEFT_PO_VA']\nvar n=0\nfor(var i=0;i<2;i++) {\n  var t=$('clsa-dcs-f1.VisionAcuity:'+rtests[i])\n  if(t.isNull().value()) {\n    n++\n  } else if(t.any('YES').value()) {\n    count['RIGHT']++\n  }\n  t=$('clsa-dcs-f1.VisionAcuity:'+ltests[i])\n  if(t.isNull().value()) {\n    n++\n  } else if(t.any('YES').value()) {\n    count['LEFT']++\n  }\n}\nvar res=null\nif(4!=n) {\n  res=newValue(\n    '{left_test:'+count['LEFT']+\n    ',right_test:'+count['RIGHT']+\n    '}','text')\n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_qac_vision_acuity", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$('clsa-dcs-f1.EventPMT:QuestionnaireRun.user').whenNull(\n  $group('Admin.Action.stage','EventPMT','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_technician_event_pmt", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var action=$group('Admin.Action.stage','EventPMT','Admin.Action.actionType').asSequence()\nvar res=$group('Admin.Action.stage','EventPMT','Admin.Action.eventReason').asSequence().filter(function(v,i){\n  return action.indexOf('SKIP')==i\n  }).last()\nif(res.isNull().not().value()) {\n  res=newValue(res.value().slice(14),'text')  \n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_skip_event_pmt", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$group('clsa-dcs-f1.Participants:Admin.StageInstance.stage','EventPMT',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value() \n? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_contraindicated_event_pmt", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var stage='clsa-dcs-f1.EventPMT:'\nvar p=$(stage+'QuestionnaireMetric.missingCount').asSequence()\nvar q=$(stage+'QuestionnaireMetric.questionCount').asSequence()\nvar res=null\nif(p.isNull().and(q.isNull()).not().value() && 0!=q.sum()) {\n  var str=[]\n  str.push(\n    'complete:'+\n    Math.round(q.sum().minus(p.sum()).multiply(100).div(q.sum()).value()))\n\nvar sections={\n'PMT':[\n'PMT_ABLE_COF1',\n'PMT_FCT_COF1',\n'PMT_TIM_COF1',\n'PMT_NOCUE_COF1',\n'PMT_ENV_COF1',\n'PMT_ENV_OBS_COF1',\n'PMT_MONEY_COF1',\n'PMT_MONEY_OBS_COF1',\n'PMT_ITP_COF1',\n'PMT_ACR_COF1',\n'PMT_REM_COF1']\n}\n\n  for(var key in sections) {\n    var rcount=0\n    var qcount=0\n    var arr=sections[key]\n    for(var i=0; i<arr.length; i++ ) {\n      var j=$(stage+arr[i])\n      if(j.isNull().value()) continue\n      qcount++      \n      rcount+=j.any('REFUSED').value()?1:0\n    }\n    if(0==qcount) {\n      str.push(key+':100')\n    } else {\n      var perc=100.0*rcount/qcount      \n      if(0<perc && 100>perc && 0!=(perc-Math.floor(perc))) {        \n        perc=perc.toFixed(3)\n      }\n      str.push(key+':'+perc)\n    }  \n  }\n\n  res=newValue('{'+str.join(',')+'}','text')\n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_qac_event_pmt", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$this('data_qac_event_pmt').isNull().and(\n  $this('stage_contraindicated_event_pmt').eq(0),\n  $this('stage_skip_event_pmt').isNull()\n).value() ? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_missing_event_pmt", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$('clsa-dcs-f1.DiseaseSymptoms:QuestionnaireRun.user').whenNull(\n  $group('Admin.Action.stage','DiseaseSymptoms','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_technician_disease_symptoms", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var action=$group('Admin.Action.stage','DiseaseSymptoms','Admin.Action.actionType').asSequence()\nvar res=$group('Admin.Action.stage','DiseaseSymptoms','Admin.Action.eventReason').asSequence().filter(function(v,i){\n  return action.indexOf('SKIP')==i\n  }).last()\nif(res.isNull().not().value()) {\n  res=newValue(res.value().slice(14),'text')  \n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_skip_disease_symptoms", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$group('clsa-dcs-f1.Participants:Admin.StageInstance.stage','DiseaseSymptoms',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value() \n? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_contraindicated_disease_symptoms", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var stage='clsa-dcs-f1.DiseaseSymptoms:'\nvar p=$(stage+'QuestionnaireMetric.missingCount').asSequence()\nvar q=$(stage+'QuestionnaireMetric.questionCount').asSequence()\nvar res=null\nif(p.isNull().and(q.isNull()).not().value() && 0!=q.sum()) {\n  var str=[]\n  str.push(\n    'complete:'+\n    Math.round(q.sum().minus(p.sum()).multiply(100).div(q.sum()).value()))\n\nvar sections={\n'CAO':[\n'CCC_ASTHM_COF1',\n'CCC_ASTHM_CHANGE_COF1',\n'CAO_ASTHMAGE_COF1',\n'CAO_WHEZ_COF1',\n'CAO_SOBFLAT_COF1',\n'CAO_EXERT_COF1',\n'CAO_SOBUP_COF1',\n'CAO_SOBPM_COF1',\n'CAO_WKWHEZ_COF1',\n'CAO_WKCOF_COF1',\n'CAO_WKSOB_COF1',\n'CCC_COPD_COF1',\n'CCC_COPD_CHANGE_COF1',\n'CAO_COPDAGE_COF1',\n'CAO_COLD_COF1',\n'CAO_COFPY_COF1',\n'CAO_COFAM_COF1',\n'CAO_COFMAM_COF1',\n'CAO_PHLEGMPY_COF1',\n'CAO_MED_COF1',\n'CAO_MEDNAME_COF1',\n'CAO_MED_1_COF1',\n'CAO_MED_2_COF1',\n'CAO_MED_3_COF1',\n'CAO_MED_4_COF1',\n'CAO_MED_5_COF1',\n'CAO_MED_6_COF1',\n'CAO_MED_7_COF1',\n'CAO_MED_8_COF1',\n'CAO_MED_9_COF1',\n'CAO_MED_10_COF1',\n'CAO_MED_11_COF1',\n'CAO_MED_12_COF1',\n'CAO_MED_13_COF1',\n'CAO_MED_14_COF1',\n'CAO_MED_15_COF1',\n'CAO_MED_16_COF1',\n'CAO_MED_17_COF1',\n'CAO_MED_18_COF1',\n'CAO_MED_19_COF1',\n'CAO_MED_20_COF1',\n'CAO_MED_21_COF1',\n'CAO_MED_22_COF1',\n'CAO_MED_23_COF1',\n'CAO_MED_24_COF1',\n'CAO_MED_25_COF1',\n'CAO_MED_26_COF1',\n'CAO_MED_27_COF1',\n'CAO_MED_28_COF1',\n'CAO_MED_29_COF1',\n'CAO_MED_30_COF1',\n'CAO_MED_31_COF1',\n'CAO_MED_32_COF1',\n'CAO_MED_33_COF1',\n'CAO_MED_34_COF1',\n'CAO_MED_35_COF1',\n'CAO_MED_36_COF1',\n'CAO_MED_37_COF1',\n'CAO_MED_38_COF1',\n'CAO_MED_39_COF1',\n'CAO_MED_40_COF1'],\n'CCC_CANCER':[\n'CCC_CANC_COF1',\n'CCC_CANCAGE_COF1',\n'CCC_CANC_CHANGE_COF1',\n'CCC_CANTP_COF1'],\n'CCC_CARDIAC':[\n'CCC_HEART_COF1',\n'CCC_HEARTAGE_COF1',\n'CCC_HEARTCHANGE_COF1',\n'CCC_PVD_COF1',\n'CCC_PVDAGE_COF1',\n'CCC_PVD_CHANGE_COF1'],\n'CCC_GASTRO':[\n'CCC_ULCR_COF1',\n'CCC_ULCRAGE_COF1',\n'CCC_ULCR_CHANGE_COF1',\n'CCC_IBDIBS_COF1',\n'CCC_IBDIBSAGE_COF1',\n'CCC_IBDIBS_CHANGE_COF1',\n'CCC_BOWINC_COF1',\n'CCC_BOWINCAGE_COF1',\n'CCC_URIINC_COF1',\n'CCC_URIINCAGE_COF1'],\n'CCC_INFECTION':[\n'CCC_DRPNEU_COF1',\n'CCC_DRFLU_COF1',\n'CCC_DRUTI_COF1',\n'CCC_DROT_COF1',\n'CCC_DROTSP_COF1'],\n'CCC_MENTAL':[\n'CCC_ANXI_COF1',\n'CCC_ANXIAGE_COF1',\n'CCC_ANXI_CHANGE_COF1',\n'CCC_MOOD_COF1',\n'CCC_MOODAGE_COF1',\n'CCC_MOOD_CHANGE_COF1'],\n'CCC_NEURO':[\n'CCC_MEMPB_COF1',\n'CCC_MEMPBAGE_COF1',\n'CCC_MEMPB_CHANGE_COF1',\n'CCC_ALZH_COF1',\n'CCC_ALZHAGE_COF1',\n'CCC_ALZH_CHANGE_COF1',\n'CCC_MS_COF1',\n'CCC_MSAGE_COF1',\n'CCC_MS_CHANGE_COF1',\n'CCC_EPIL_COF1',\n'CCC_EPILAGE_COF1',\n'CCC_EPIL_CHANGE_COF1',\n'CCC_MGRN_COF1',\n'CCC_MGRNAGE_COF1',\n'CCC_MGRN_CHANGE_COF1'],\n'CCC_OTHER':[\n'CCC_ALLRG_COF1',\n'CCC_ALLRGAGE_COF1',\n'CCC_ALLRG_CHANGE_COF1',\n'CCC_BCKP_COF1',\n'CCC_BCKPAGE_COF1',\n'CCC_BCKP_CHANGE_COF1',\n'CCC_KIDN_COF1',\n'CCC_KIDNAGE_COF1',\n'CCC_KIDN_CHANGE_COF1',\n'CCC_DITYP_COF1',\n'CCC_DITIM_COF1',\n'CCC_HCV_COF1',\n'CCC_HCVAGE_COF1',\n'CCC_HCV_TRT_COF1',\n'CCC_HCV_TXS_COF1',\n'CCC_HCV_CURR_COF1',\n'CCC_OTCCC_COF1'],\n'CCC_VISION':[\n'CCC_MACDEG_COF1',\n'CCC_MACDEGAGE_COF1',\n'CCC_MACDEG_CHANGE_COF1'],\n'DEP':[\n'DEP_BOTR_COF1',\n'DEP_MIND_COF1',\n'DEP_FLDP_COF1',\n'DEP_FFRT_COF1',\n'DEP_HPFL_COF1',\n'DEP_FRFL_COF1',\n'DEP_RSTLS_COF1',\n'DEP_HAPP_COF1',\n'DEP_LONLY_COF1',\n'DEP_GTGO_COF1'],\n'DIA':[\n'DIA_DIAB_COF1',\n'DIA_DIAB_CHANGE_COF1',\n'DIA_TYPE_COF1',\n'DIA_AGE_COF1',\n'DIA_DIABRT_COF1',\n'DIA_DIABRTAGE_COF1',\n'DIA_EVPRG_COF1',\n'DIA_PRGDIA_COF1',\n'DIA_MED_COF1',\n'DIA_MEDNAME_COF1',\n'DIA_MEDINSNAME_COF1',\n'DIA_MED_1_COF1',\n'DIA_MED_2_COF1',\n'DIA_MED_3_COF1',\n'DIA_MED_4_COF1',\n'DIA_MED_5_COF1',\n'DIA_MED_6_COF1',\n'DIA_MED_7_COF1',\n'DIA_MED_8_COF1',\n'DIA_MED_9_COF1',\n'DIA_MED_10_COF1',\n'DIA_MED_11_COF1',\n'DIA_MED_12_COF1',\n'DIA_MED_13_COF1',\n'DIA_MED_14_COF1',\n'DIA_MED_15_COF1',\n'DIA_MED_16_COF1',\n'DIA_MED_17_COF1',\n'DIA_MED_18_COF1',\n'DIA_MED_19_COF1',\n'DIA_MED_20_COF1',\n'DIA_MED_21_COF1',\n'DIA_MED_22_COF1',\n'DIA_MED_23_COF1',\n'DIA_MED_24_COF1',\n'DIA_MED_25_COF1',\n'DIA_MED_26_COF1',\n'DIA_MED_27_COF1',\n'DIA_MED_28_COF1',\n'DIA_MED_29_COF1',\n'DIA_MED_30_COF1',\n'DIA_MED_31_COF1',\n'DIA_MED_32_COF1',\n'DIA_MED_33_COF1',\n'DIA_MED_34_COF1',\n'DIA_MED_35_COF1',\n'DIA_MED_36_COF1',\n'DIA_MED_37_COF1',\n'DIA_MED_38_COF1',\n'DIA_MED_39_COF1',\n'DIA_MED_40_COF1',\n'DIA_MEDAGE_COF1'],\n'DPR':[\n'DPR_CLINDEP_COF1',\n'DPR_CLINDEP_CHANGE_COF1',\n'DPR_AGE_COF1',\n'DPR_MED_COF1',\n'DPR_MEDNAME_COF1',\n'DPR_MED_1_COF1',\n'DPR_MED_2_COF1',\n'DPR_MED_3_COF1',\n'DPR_MED_4_COF1',\n'DPR_MED_5_COF1',\n'DPR_MED_6_COF1',\n'DPR_MED_7_COF1',\n'DPR_MED_8_COF1',\n'DPR_MED_9_COF1',\n'DPR_MED_10_COF1',\n'DPR_MED_11_COF1',\n'DPR_MED_12_COF1',\n'DPR_MED_13_COF1',\n'DPR_MED_14_COF1',\n'DPR_MED_15_COF1',\n'DPR_MED_16_COF1',\n'DPR_MED_17_COF1',\n'DPR_MED_18_COF1',\n'DPR_MED_19_COF1',\n'DPR_MED_20_COF1',\n'DPR_MED_21_COF1',\n'DPR_MED_22_COF1',\n'DPR_MED_23_COF1',\n'DPR_MED_24_COF1',\n'DPR_MED_25_COF1',\n'DPR_MED_26_COF1',\n'DPR_MED_27_COF1',\n'DPR_MED_28_COF1',\n'DPR_MED_29_COF1',\n'DPR_MED_30_COF1',\n'DPR_MED_31_COF1',\n'DPR_MED_32_COF1',\n'DPR_MED_33_COF1',\n'DPR_MED_34_COF1',\n'DPR_MED_35_COF1',\n'DPR_MED_36_COF1',\n'DPR_MED_37_COF1',\n'DPR_MED_38_COF1',\n'DPR_MED_39_COF1',\n'DPR_MED_40_COF1',\n'DPR_OTHMD_COF1',\n'DPR_EVRMED_COF1'],\n'EPI':[\n'EPI_EVER_COF1',\n'EPI_MED_COF1',\n'EPI_CAUS_FEV_COF1',\n'EPI_CAUS_SEIZ_COF1',\n'EPI_CAUS_TWIT_COF1',\n'EPI_CAUS_MENT_COF1',\n'EPI_CAUS_DREM_COF1',\n'EPI_CAUS_BDMV_COF1',\n'EPI_CAUS_JERK_COF1',\n'EPI_CAUS_SPEL_COF1',\n'EPI_EPILSZ_COF1',\n'EPI_CURRMED_COF1'],\n'HBP':[\n'CCC_HBP_COF1',\n'CCC_HBP_CHANGE_COF1',\n'HBP_AGE_COF1',\n'HBP_PRG_COF1',\n'HBP_OTPRG_COF1',\n'HBP_MED_COF1',\n'HBP_MEDNAME_COF1',\n'HBP_MED_1_COF1',\n'HBP_MED_2_COF1',\n'HBP_MED_3_COF1',\n'HBP_MED_4_COF1',\n'HBP_MED_5_COF1',\n'HBP_MED_6_COF1',\n'HBP_MED_7_COF1',\n'HBP_MED_8_COF1',\n'HBP_MED_9_COF1',\n'HBP_MED_10_COF1',\n'HBP_MED_11_COF1',\n'HBP_MED_12_COF1',\n'HBP_MED_13_COF1',\n'HBP_MED_14_COF1',\n'HBP_MED_15_COF1',\n'HBP_MED_16_COF1',\n'HBP_MED_17_COF1',\n'HBP_MED_18_COF1',\n'HBP_MED_19_COF1',\n'HBP_MED_20_COF1',\n'HBP_MED_21_COF1',\n'HBP_MED_22_COF1',\n'HBP_MED_23_COF1',\n'HBP_MED_24_COF1',\n'HBP_MED_25_COF1',\n'HBP_MED_26_COF1',\n'HBP_MED_27_COF1',\n'HBP_MED_28_COF1',\n'HBP_MED_29_COF1',\n'HBP_MED_30_COF1',\n'HBP_MED_31_COF1',\n'HBP_MED_32_COF1',\n'HBP_MED_33_COF1',\n'HBP_MED_34_COF1',\n'HBP_MED_35_COF1',\n'HBP_MED_36_COF1',\n'HBP_MED_37_COF1',\n'HBP_MED_38_COF1',\n'HBP_MED_39_COF1',\n'HBP_MED_40_COF1',\n'HBP_EVRMED_COF1',\n'HBP_TRT_COF1',\n'HBP_EVTRT_COF1'],\n'HYP':[\n'CCC_UTHYR_COF1',\n'CCC_UTHYR_CHANGE_COF1',\n'HYP_UTHYRAGE_COF1',\n'HYP_UTHYRMED_COF1',\n'HYP_UTHYRMEDNAME_COF1',\n'HYP_UTHYRMED_1_COF1',\n'HYP_UTHYRMED_2_COF1',\n'HYP_UTHYRMED_3_COF1',\n'HYP_UTHYRMED_4_COF1',\n'HYP_UTHYRMED_5_COF1',\n'HYP_UTHYRMED_6_COF1',\n'HYP_UTHYRMED_7_COF1',\n'HYP_UTHYRMED_8_COF1',\n'HYP_UTHYRMED_9_COF1',\n'HYP_UTHYRMED_10_COF1',\n'HYP_UTHYRMED_11_COF1',\n'HYP_UTHYRMED_12_COF1',\n'HYP_UTHYRMED_13_COF1',\n'HYP_UTHYRMED_14_COF1',\n'HYP_UTHYRMED_15_COF1',\n'HYP_UTHYRMED_16_COF1',\n'HYP_UTHYRMED_17_COF1',\n'HYP_UTHYRMED_18_COF1',\n'HYP_UTHYRMED_19_COF1',\n'HYP_UTHYRMED_20_COF1',\n'HYP_UTHYRMED_21_COF1',\n'HYP_UTHYRMED_22_COF1',\n'HYP_UTHYRMED_23_COF1',\n'HYP_UTHYRMED_24_COF1',\n'HYP_UTHYRMED_25_COF1',\n'HYP_UTHYRMED_26_COF1',\n'HYP_UTHYRMED_27_COF1',\n'HYP_UTHYRMED_28_COF1',\n'HYP_UTHYRMED_29_COF1',\n'HYP_UTHYRMED_30_COF1',\n'HYP_UTHYRMED_31_COF1',\n'HYP_UTHYRMED_32_COF1',\n'HYP_UTHYRMED_33_COF1',\n'HYP_UTHYRMED_34_COF1',\n'HYP_UTHYRMED_35_COF1',\n'HYP_UTHYRMED_36_COF1',\n'HYP_UTHYRMED_37_COF1',\n'HYP_UTHYRMED_38_COF1',\n'HYP_UTHYRMED_39_COF1',\n'HYP_UTHYRMED_40_COF1',\n'HYP_UTHYREVRMED_COF1',\n'CCC_OTHYR_COF1',\n'CCC_OTHYR_CHANGE_COF1',\n'HYP_OTHYRAGE_COF1',\n'HYP_OTHYRMED_COF1',\n'HYP_OTHYRMEDNAME_COF1',\n'HYP_OTHYRMED_1_COF1',\n'HYP_OTHYRMED_2_COF1',\n'HYP_OTHYRMED_3_COF1',\n'HYP_OTHYRMED_4_COF1',\n'HYP_OTHYRMED_5_COF1',\n'HYP_OTHYRMED_6_COF1',\n'HYP_OTHYRMED_7_COF1',\n'HYP_OTHYRMED_8_COF1',\n'HYP_OTHYRMED_9_COF1',\n'HYP_OTHYRMED_10_COF1',\n'HYP_OTHYRMED_11_COF1',\n'HYP_OTHYRMED_12_COF1',\n'HYP_OTHYRMED_13_COF1',\n'HYP_OTHYRMED_14_COF1',\n'HYP_OTHYRMED_15_COF1',\n'HYP_OTHYRMED_16_COF1',\n'HYP_OTHYRMED_17_COF1',\n'HYP_OTHYRMED_18_COF1',\n'HYP_OTHYRMED_19_COF1',\n'HYP_OTHYRMED_20_COF1',\n'HYP_OTHYRMED_21_COF1',\n'HYP_OTHYRMED_22_COF1',\n'HYP_OTHYRMED_23_COF1',\n'HYP_OTHYRMED_24_COF1',\n'HYP_OTHYRMED_25_COF1',\n'HYP_OTHYRMED_26_COF1',\n'HYP_OTHYRMED_27_COF1',\n'HYP_OTHYRMED_28_COF1',\n'HYP_OTHYRMED_29_COF1',\n'HYP_OTHYRMED_30_COF1',\n'HYP_OTHYRMED_31_COF1',\n'HYP_OTHYRMED_32_COF1',\n'HYP_OTHYRMED_33_COF1',\n'HYP_OTHYRMED_34_COF1',\n'HYP_OTHYRMED_35_COF1',\n'HYP_OTHYRMED_36_COF1',\n'HYP_OTHYRMED_37_COF1',\n'HYP_OTHYRMED_38_COF1',\n'HYP_OTHYRMED_39_COF1',\n'HYP_OTHYRMED_40_COF1',\n'HYP_OTHYREVRMD_COF1'],\n'IHD':[\n'CCC_ANGI_COF1',\n'CCC_ANGI_CHANGE_COF1',\n'IHD_ANGIAGE_COF1',\n'CCC_AMI_COF1',\n'CCC_AMI_CHANGE_COF1',\n'IHD_AMIAGE_COF1',\n'IHD_CAB_COF1',\n'IHD_ANGIO_COF1',\n'IHD_BLOCK_COF1',\n'IHD_BLOCK_CHANGE_COF1',\n'IHD_MED_COF1',\n'IHD_MEDNAME_COF1',\n'IHD_MED_1_COF1',\n'IHD_MED_2_COF1',\n'IHD_MED_3_COF1',\n'IHD_MED_4_COF1',\n'IHD_MED_5_COF1',\n'IHD_MED_6_COF1',\n'IHD_MED_7_COF1',\n'IHD_MED_8_COF1',\n'IHD_MED_9_COF1',\n'IHD_MED_10_COF1',\n'IHD_MED_11_COF1',\n'IHD_MED_12_COF1',\n'IHD_MED_13_COF1',\n'IHD_MED_14_COF1',\n'IHD_MED_15_COF1',\n'IHD_MED_16_COF1',\n'IHD_MED_17_COF1',\n'IHD_MED_18_COF1',\n'IHD_MED_19_COF1',\n'IHD_MED_20_COF1',\n'IHD_MED_21_COF1',\n'IHD_MED_22_COF1',\n'IHD_MED_23_COF1',\n'IHD_MED_24_COF1',\n'IHD_MED_25_COF1',\n'IHD_MED_26_COF1',\n'IHD_MED_27_COF1',\n'IHD_MED_28_COF1',\n'IHD_MED_29_COF1',\n'IHD_MED_30_COF1',\n'IHD_MED_31_COF1',\n'IHD_MED_32_COF1',\n'IHD_MED_33_COF1',\n'IHD_MED_34_COF1',\n'IHD_MED_35_COF1',\n'IHD_MED_36_COF1',\n'IHD_MED_37_COF1',\n'IHD_MED_38_COF1',\n'IHD_MED_39_COF1',\n'IHD_MED_40_COF1',\n'IHD_EVRMED_COF1'],\n'OAR':[\n'CCC_RA_COF1',\n'CCC_RA_CHANGE_COF1',\n'CCC_ARTOT_COF1',\n'CCC_ARTOT_CHANGE_COF1',\n'OAR_AGE_COF1',\n'OAR_MED_COF1',\n'OAR_MEDOT_COF1'],\n'OSA':[\n'CCC_OAHAND_COF1',\n'CCC_OAHAND_CHANGE_COF1',\n'OSA_AGE_COF1',\n'OSA_LGJNT_COF1',\n'OSA_NBFNG_COF1',\n'OSA_PAINJNT_COF1',\n'OSA_LGTMB_COF1',\n'OSA_PAINTMB_COF1'],\n'OSH':[\n'CCC_OAHIP_COF1',\n'CCC_OAHIP_CHANGE_COF1',\n'OSH_AGE_COF1',\n'OSH_HIPRPL_COF1',\n'OSH_FRAC_COF1',\n'OSH_PAIN_COF1',\n'OSH_PAINSL_COF1',\n'OSH_LOM_COF1'],\n'OSK':[\n'CCC_OAKNEE_COF1',\n'CCC_OAKNEE_CHANGE_COF1',\n'OSK_AGE_COF1',\n'OSK_KNERPL_COF1',\n'OSK_PAIN_COF1',\n'OSK_PAINSL_COF1',\n'OSK_SWELL_COF1'],\n'OST':[\n'CCC_OSTPO_COF1',\n'CCC_OSTPO_CHANGE_COF1',\n'OST_AGE_COF1',\n'OST_MED_COF1',\n'OST_MEDNAME_COF1',\n'OST_MED_1_COF1',\n'OST_MED_2_COF1',\n'OST_MED_3_COF1',\n'OST_MED_4_COF1',\n'OST_MED_5_COF1',\n'OST_MED_6_COF1',\n'OST_MED_7_COF1',\n'OST_MED_8_COF1',\n'OST_MED_9_COF1',\n'OST_MED_10_COF1',\n'OST_MED_11_COF1',\n'OST_MED_12_COF1',\n'OST_MED_13_COF1',\n'OST_MED_14_COF1',\n'OST_MED_15_COF1',\n'OST_MED_16_COF1',\n'OST_MED_17_COF1',\n'OST_MED_18_COF1',\n'OST_MED_19_COF1',\n'OST_MED_20_COF1',\n'OST_MED_21_COF1',\n'OST_MED_22_COF1',\n'OST_MED_23_COF1',\n'OST_MED_24_COF1',\n'OST_MED_25_COF1',\n'OST_MED_26_COF1',\n'OST_MED_27_COF1',\n'OST_MED_28_COF1',\n'OST_MED_29_COF1',\n'OST_MED_30_COF1',\n'OST_MED_31_COF1',\n'OST_MED_32_COF1',\n'OST_MED_33_COF1',\n'OST_MED_34_COF1',\n'OST_MED_35_COF1',\n'OST_MED_36_COF1',\n'OST_MED_37_COF1',\n'OST_MED_38_COF1',\n'OST_MED_39_COF1',\n'OST_MED_40_COF1',\n'OST_EVRMD_COF1',\n'OST_BONE_COF1',\n'OST_FRAC_COF1',\n'OST_MOM_COF1',\n'OST_DAD_COF1',\n'OST_HGT_COF1',\n'OST_CST_COF1',\n'OST_CSTAGE_COF1',\n'OST_CST_MT_COF1',\n'OST_BP_COF1',\n'OST_BP_DUR_COF1',\n'OST_BCKPPM_COF1',\n'OST_BCKPLOC_COF1'],\n'PKD':[\n'CCC_PARK_COF1',\n'CCC_PARK_CHANGE_COF1',\n'PKD_AGE_COF1',\n'PKD_MED_COF1',\n'PKD_MEDNAME_COF1',\n'PKD_MED_1_COF1',\n'PKD_MED_2_COF1',\n'PKD_MED_3_COF1',\n'PKD_MED_4_COF1',\n'PKD_MED_5_COF1',\n'PKD_MED_6_COF1',\n'PKD_MED_7_COF1',\n'PKD_MED_8_COF1',\n'PKD_MED_9_COF1',\n'PKD_MED_10_COF1',\n'PKD_MED_11_COF1',\n'PKD_MED_12_COF1',\n'PKD_MED_13_COF1',\n'PKD_MED_14_COF1',\n'PKD_MED_15_COF1',\n'PKD_MED_16_COF1',\n'PKD_MED_17_COF1',\n'PKD_MED_18_COF1',\n'PKD_MED_19_COF1',\n'PKD_MED_20_COF1',\n'PKD_MED_21_COF1',\n'PKD_MED_22_COF1',\n'PKD_MED_23_COF1',\n'PKD_MED_24_COF1',\n'PKD_MED_25_COF1',\n'PKD_MED_26_COF1',\n'PKD_MED_27_COF1',\n'PKD_MED_28_COF1',\n'PKD_MED_29_COF1',\n'PKD_MED_30_COF1',\n'PKD_MED_31_COF1',\n'PKD_MED_32_COF1',\n'PKD_MED_33_COF1',\n'PKD_MED_34_COF1',\n'PKD_MED_35_COF1',\n'PKD_MED_36_COF1',\n'PKD_MED_37_COF1',\n'PKD_MED_38_COF1',\n'PKD_MED_39_COF1',\n'PKD_MED_40_COF1',\n'PKD_OTHMD_COF1',\n'PKD_EVRMED_COF1',\n'PKD_SHKE_COF1',\n'PKD_SHKSEV_COF1',\n'PKD_SMWRT_COF1',\n'PKD_BUTON_COF1',\n'PKD_VOICE_COF1',\n'PKD_FEET_COF1',\n'PKD_WALK_COF1',\n'PKD_BAL_COF1',\n'PKD_FACE_COF1',\n'PKD_RISE_COF1'],\n'ROS':[\n'ROS_PAIN_COF1',\n'ROS_HILL_COF1',\n'ROS_LEVEL_COF1',\n'ROS_BLOCK_COF1',\n'ROS_DOWLK_COF1',\n'ROS_STILL_COF1',\n'ROS_SOON_COF1',\n'ROS_LOC_COF1',\n'ROS_SEVPAIN_COF1'],\n'STR':[\n'CCC_CVA_COF1',\n'CCC_CVA_CHANGE_COF1',\n'STR_CVAAGE_COF1',\n'STR_MED_COF1',\n'STR_MEDNAME_COF1',\n'STR_MED_1_COF1',\n'STR_MED_2_COF1',\n'STR_MED_3_COF1',\n'STR_MED_4_COF1',\n'STR_MED_5_COF1',\n'STR_MED_6_COF1',\n'STR_MED_7_COF1',\n'STR_MED_8_COF1',\n'STR_MED_9_COF1',\n'STR_MED_10_COF1',\n'STR_MED_11_COF1',\n'STR_MED_12_COF1',\n'STR_MED_13_COF1',\n'STR_MED_14_COF1',\n'STR_MED_15_COF1',\n'STR_MED_16_COF1',\n'STR_MED_17_COF1',\n'STR_MED_18_COF1',\n'STR_MED_19_COF1',\n'STR_MED_20_COF1',\n'STR_MED_21_COF1',\n'STR_MED_22_COF1',\n'STR_MED_23_COF1',\n'STR_MED_24_COF1',\n'STR_MED_25_COF1',\n'STR_MED_26_COF1',\n'STR_MED_27_COF1',\n'STR_MED_28_COF1',\n'STR_MED_29_COF1',\n'STR_MED_30_COF1',\n'STR_MED_31_COF1',\n'STR_MED_32_COF1',\n'STR_MED_33_COF1',\n'STR_MED_34_COF1',\n'STR_MED_35_COF1',\n'STR_MED_36_COF1',\n'STR_MED_37_COF1',\n'STR_MED_38_COF1',\n'STR_MED_39_COF1',\n'STR_MED_40_COF1',\n'STR_OTHMD_COF1',\n'STR_EVRMD_COF1',\n'CCC_TIA_COF1',\n'CCC_TIA_CHANGE_COF1',\n'STR_TIAAGE_COF1',\n'STR_TIAMED_COF1',\n'STR_TIAMEDNAME_COF1',\n'STR_TIAMED_1_COF1',\n'STR_TIAMED_2_COF1',\n'STR_TIAMED_3_COF1',\n'STR_TIAMED_4_COF1',\n'STR_TIAMED_5_COF1',\n'STR_TIAMED_6_COF1',\n'STR_TIAMED_7_COF1',\n'STR_TIAMED_8_COF1',\n'STR_TIAMED_9_COF1',\n'STR_TIAMED_10_COF1',\n'STR_TIAMED_11_COF1',\n'STR_TIAMED_12_COF1',\n'STR_TIAMED_13_COF1',\n'STR_TIAMED_14_COF1',\n'STR_TIAMED_15_COF1',\n'STR_TIAMED_16_COF1',\n'STR_TIAMED_17_COF1',\n'STR_TIAMED_18_COF1',\n'STR_TIAMED_19_COF1',\n'STR_TIAMED_20_COF1',\n'STR_TIAMED_21_COF1',\n'STR_TIAMED_22_COF1',\n'STR_TIAMED_23_COF1',\n'STR_TIAMED_24_COF1',\n'STR_TIAMED_25_COF1',\n'STR_TIAMED_26_COF1',\n'STR_TIAMED_27_COF1',\n'STR_TIAMED_28_COF1',\n'STR_TIAMED_29_COF1',\n'STR_TIAMED_30_COF1',\n'STR_TIAMED_31_COF1',\n'STR_TIAMED_32_COF1',\n'STR_TIAMED_33_COF1',\n'STR_TIAMED_34_COF1',\n'STR_TIAMED_35_COF1',\n'STR_TIAMED_36_COF1',\n'STR_TIAMED_37_COF1',\n'STR_TIAMED_38_COF1',\n'STR_TIAMED_39_COF1',\n'STR_TIAMED_40_COF1',\n'STR_TIAOTHMD_COF1',\n'STR_TIAEVMD_COF1',\n'CCC_CVAFX_COF1',\n'STR_WEAK_COF1',\n'STR_WEAK_DUR_COF1',\n'STR_NUMB_COF1',\n'STR_NUMB_DUR_COF1',\n'STR_VIS_COF1',\n'STR_VIS_DUR_COF1',\n'STR_NOVIS_COF1',\n'STR_NOVIS_DUR_COF1',\n'STR_NOUND_COF1',\n'STR_NOUND_DUR_COF1',\n'STR_NOEXP_COF1',\n'STR_NOEXP_DUR_COF1'],\n'TBI':[\n'TBI_TYP_COF1',\n'TBI_NMBR_COF1',\n'TBI_RSLT_COF1',\n'TBI_MCR_COF1',\n'TBI_PROB_COF1']\n}\n\n  for(var key in sections) {\n    var rcount=0\n    var qcount=0\n    var arr=sections[key]\n    for(var i=0; i<arr.length; i++ ) {\n      var j=$(stage+arr[i])\n      if(j.isNull().value()) continue\n      qcount++      \n      rcount+=j.any('REFUSED').value()?1:0\n    }\n    if(0==qcount) {\n      str.push(key+':100')\n    } else {\n      var perc=100.0*rcount/qcount      \n      if(0<perc && 100>perc && 0!=(perc-Math.floor(perc))) {        \n        perc=perc.toFixed(3)\n      }\n      str.push(key+':'+perc)\n    }  \n  }\n\n  res=newValue('{'+str.join(',')+'}','text')\n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_qac_disease_symptoms", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$this('data_qac_disease_symptoms').isNull().and(\n  $this('stage_contraindicated_disease_symptoms').eq(0),\n  $this('stage_skip_disease_symptoms').isNull()\n).value() ? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_missing_disease_symptoms", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$('clsa-dcs-f1.ConclusionQuestionnaire:QuestionnaireRun.user').whenNull(\n  $group('Admin.Action.stage','ConclusionQuestionnaire','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_technician_conclusion_questionnaire", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var action=$group('Admin.Action.stage','ConclusionQuestionnaire','Admin.Action.actionType').asSequence()\nvar res=$group('Admin.Action.stage','ConclusionQuestionnaire','Admin.Action.eventReason').asSequence().filter(function(v,i){\n  return action.indexOf('SKIP')==i\n  }).last()\nif(res.isNull().not().value()) {\n  res=newValue(res.value().slice(14),'text')  \n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_skip_conclusion_questionnaire", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$group('clsa-dcs-f1.Participants:Admin.StageInstance.stage','ConclusionQuestionnaire',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value() \n? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_contraindicated_conclusion_questionnaire", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var res=$('clsa-dcs-f1.ConclusionQuestionnaire:PARTICIPANT_OFFERED_DOCUMENT').lowerCase()\nif(res.isNull().not().value()) {\n  var n=0\n  if(res.any('consent_form').value()) n++\n  if(res.any('physical_measures_report').value()) n++  \n  res=newValue('{documents:'+n+'}','text')\n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_qac_conclusion_questionnaire", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$this('data_qac_conclusion_questionnaire').isNull().and(\n  $this('stage_contraindicated_conclusion_questionnaire').eq(0),\n  $this('stage_skip_conclusion_questionnaire').isNull()\n).value() ? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_missing_conclusion_questionnaire", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$('clsa-dcs-f1.QuestionnaireBoneDensity:QuestionnaireRun.user').whenNull(\n  $group('Admin.Action.stage','QuestionnaireBoneDensity','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_technician_bone_density_questionnaire", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var action=$group('Admin.Action.stage','QuestionnaireBoneDensity','Admin.Action.actionType').asSequence()\nvar res=$group('Admin.Action.stage','QuestionnaireBoneDensity','Admin.Action.eventReason').asSequence().filter(function(v,i){\n  return action.indexOf('SKIP')==i\n  }).last()\nif(res.isNull().not().value()) {\n  res=newValue(res.value().slice(14),'text')  \n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_skip_bone_density_questionnaire", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$group('clsa-dcs-f1.Participants:Admin.StageInstance.stage','QuestionnaireBoneDensity',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value() \n? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_contraindicated_bone_density_questionnaire", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var p=$('clsa-dcs-f1.QuestionnaireBoneDensity:QuestionnaireMetric.missingCount').asSequence()\nvar q=$('clsa-dcs-f1.QuestionnaireBoneDensity:QuestionnaireMetric.questionCount').asSequence()\nvar res=null\nif(p.isNull().and(q.isNull()).not().value() && 0!=q.sum()){\n  res=newValue(\n    '{complete:'+\n    Math.round(q.sum().minus(p.sum()).multiply(100).div(q.sum()).value())\n    +'}','text')\n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_qac_bone_density_questionnaire", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$this('data_qac_bone_density_questionnaire').isNull().and(\n  $this('stage_contraindicated_bone_density_questionnaire').eq(0),\n  $this('stage_skip_bone_density_questionnaire').isNull()\n).value() ? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_missing_bone_density_questionnaire", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$('clsa-dcs-f1.HearingQuestionnaire:QuestionnaireRun.user').whenNull(\n  $group('Admin.Action.stage','HearingQuestionnaire','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_technician_hearing_questionnaire", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var action=$group('Admin.Action.stage','HearingQuestionnaire','Admin.Action.actionType').asSequence()\nvar res=$group('Admin.Action.stage','HearingQuestionnaire','Admin.Action.eventReason').asSequence().filter(function(v,i){\n  return action.indexOf('SKIP')==i\n  }).last()\nif(res.isNull().not().value()) {\n  res=newValue(res.value().slice(14),'text')  \n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_skip_hearing_questionnaire", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$group('clsa-dcs-f1.Participants:Admin.StageInstance.stage','HearingQuestionnaire',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value() \n? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_contraindicated_hearing_questionnaire", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var l=$('clsa-dcs-f1.HearingQuestionnaire:STATUS_EAR.LEFT_EAR_2').lowerCase()\nvar r=$('clsa-dcs-f1.HearingQuestionnaire:STATUS_EAR.RIGHT_EAR_2').lowerCase()\nvar res=null\nif(l.isNull().and(r.isNull()).not().value()){\n  res=newValue(\n    '{status_left:'+\n     (l.isNull().value()?'missing':l.value()) +\n    ',status_right:'+\n     (r.isNull().value()?'missing':r.value()) +\n    '}','text')\n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_qac_hearing_questionnaire", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$this('data_qac_hearing_questionnaire').isNull().and(\n  $this('stage_contraindicated_hearing_questionnaire').eq(0),\n  $this('stage_skip_hearing_questionnaire').isNull()\n).value() ? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_missing_hearing_questionnaire", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$('clsa-dcs-f1.FunctionalStatus:QuestionnaireRun.user').whenNull(\n  $group('Admin.Action.stage','FunctionalStatus','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_technician_functional_status", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var action=$group('Admin.Action.stage','FunctionalStatus','Admin.Action.actionType').asSequence()\nvar res=$group('Admin.Action.stage','FunctionalStatus','Admin.Action.eventReason').asSequence().filter(function(v,i){\n  return action.indexOf('SKIP')==i\n  }).last()\nif(res.isNull().not().value()) {\n  res=newValue(res.value().slice(14),'text')\n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_skip_functional_status", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$group('clsa-dcs-f1.Participants:Admin.StageInstance.stage','FunctionalStatus',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value() \n? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_contraindicated_functional_status", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var stage='clsa-dcs-f1.FunctionalStatus:'\nvar p=$(stage+'QuestionnaireMetric.missingCount').asSequence()\nvar q=$(stage+'QuestionnaireMetric.questionCount').asSequence()\nvar res=null\nif(p.isNull().and(q.isNull()).not().value() && 0!=q.sum()) {\n  var str=[]\n  str.push(\n    'complete:'+\n    Math.round(q.sum().minus(p.sum()).multiply(100).div(q.sum()).value()))\n\nvar sections={\n'Fun':[\n'FUL_SHLD_COF1',\n'FUL_SHLDDG_COF1',\n'FUL_STOOP_COF1',\n'FUL_STOOPDG_COF1',\n'FUL_PUSH_COF1',\n'FUL_PUSHDG_COF1',\n'FUL_LFT10_COF1',\n'FUL_LFT1ODG_COF1',\n'FUL_HDLG_COF1',\n'FUL_HDLGDG_COF1',\n'FUL_ST15_COF1',\n'FUL_ST15DG_COF1',\n'FUL_SIT1H_COF1',\n'FUL_SIT1HDG_COF1',\n'FUL_STDUP_COF1',\n'FUL_STDUPDG_COF1',\n'FUL_FSTR_COF1',\n'FUL_FSTRDG_COF1',\n'FUL_WK23B_COF1',\n'FUL_WK23BDG_COF1',\n'FUL_MKBED_COF1',\n'FUL_MKBEDDG_COF1',\n'FUL_WSHBK_COF1',\n'FUL_WSHBKDG_COF1',\n'FUL_KNCUT_COF1',\n'FUL_KNCUTDG_COF1',\n'FUL_FORC_COF1',\n'FUL_FORCDG_COF1']\n}\n\n  for(var key in sections) {\n    var rcount=0\n    var qcount=0\n    var arr=sections[key]\n    for(var i=0; i<arr.length; i++ ) {\n      var j=$(stage+arr[i])\n      if(j.isNull().value()) continue\n      qcount++      \n      rcount+=j.any('REFUSED').value()?1:0\n    }\n    if(0==qcount) {\n      str.push(key+':100')\n    } else {\n      var perc=100.0*rcount/qcount      \n      if(0<perc && 100>perc && 0!=(perc-Math.floor(perc))) {        \n        perc=perc.toFixed(3)\n      }\n      str.push(key+':'+perc)\n    }  \n  }\n\n  res=newValue('{'+str.join(',')+'}','text')\n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_qac_functional_status", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$this('data_qac_functional_status').isNull().and(\n  $this('stage_contraindicated_functional_status').eq(0),\n  $this('stage_skip_functional_status').isNull()\n).value() ? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_missing_functional_status", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$('clsa-dcs-f1.TimeBasedProspectiveMemoryTask:QuestionnaireRun.user').whenNull(\n  $group('Admin.Action.stage','TimeBasedProspectiveMemoryTask','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_technician_time_based_pmt", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var action=$group('Admin.Action.stage','TimeBasedProspectiveMemoryTask','Admin.Action.actionType').asSequence()\nvar res=$group('Admin.Action.stage','TimeBasedProspectiveMemoryTask','Admin.Action.eventReason').asSequence().filter(function(v,i){\n  return action.indexOf('SKIP')==i\n  }).last()\nif(res.isNull().not().value()) {\n  res=newValue(res.value().slice(14),'text')  \n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_skip_time_based_pmt", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$group('clsa-dcs-f1.Participants:Admin.StageInstance.stage','TimeBasedProspectiveMemoryTask',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value() \n? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_contraindicated_time_based_pmt", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var stage='clsa-dcs-f1.TimeBasedProspectiveMemoryTask:'\nvar p=$(stage+'QuestionnaireMetric.missingCount').asSequence()\nvar q=$(stage+'QuestionnaireMetric.questionCount').asSequence()\nvar res=null\nif(p.isNull().and(q.isNull()).not().value() && 0!=q.sum()) {\n  var str=[]\n  str.push(\n    'complete:'+\n    Math.round(q.sum().minus(p.sum()).multiply(100).div(q.sum()).value()))\n\nvar sections={\n'TMT':[\n'TMT_PASS_COF1',\n'TMT_TST_COF1',\n'TMT_FCT_COF1',\n'TMT_DOTIM_COF1',\n'TMT_DOTIM_REP_COF1',\n'TMT_DOTIM_OBS_COF1',\n'TMT_DOENV_COF1',\n'TMT_DOENV_OBS_COF1',\n'TMT_DOCARD_COF1',\n'TMT_DOCARD_OBS_COF1',\n'TMT_ITPEXACT_COF1',\n'TMT_ACC_COF1',\n'TMT_RMD_COF1']\n}\n\n  for(var key in sections) {\n    var rcount=0\n    var qcount=0\n    var arr=sections[key]\n    for(var i=0; i<arr.length; i++ ) {\n      var j=$(stage+arr[i])\n      if(j.isNull().value()) continue\n      qcount++      \n      rcount+=j.any('REFUSED').value()?1:0\n    }\n    if(0==qcount) {\n      str.push(key+':100')\n    } else {\n      var perc=100.0*rcount/qcount      \n      if(0<perc && 100>perc && 0!=(perc-Math.floor(perc))) {        \n        perc=perc.toFixed(3)\n      }\n      str.push(key+':'+perc)\n    }  \n  }\n\n  res=newValue('{'+str.join(',')+'}','text')\n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_qac_time_based_pmt", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$this('data_qac_time_based_pmt').isNull().and(\n  $this('stage_contraindicated_time_based_pmt').eq(0),\n  $this('stage_skip_time_based_pmt').isNull()\n).value() ? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_missing_time_based_pmt", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$group('clsa-dcs-f1.Participants:Admin.StageInstance.stage','Consent',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value() \n? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_contraindicated_consent", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$this('data_qac_consent').isNull().and(\n  $this('stage_contraindicated_consent').eq(0),\n  $this('stage_skip_consent').isNull()\n).value() ? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_missing_consent", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var m=$('clsa-dcs-f1.Consent:mode')\nvar a=$('clsa-dcs-f1.Consent:accepted')\nvar res=null\nif(m.isNull().and(a.isNull()).not().value()) {\n  res=newValue(\n    '{mode:'+m.lowerCase().value()+\n    ',accepted:'+(a.value()?1:0)+\n    '}','text')\n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_qac_consent", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$group('Admin.Action.stage','Consent','Admin.Action.user').asSequence().last().lowerCase()"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_technician_consent", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var action=$group('Admin.Action.stage','Consent','Admin.Action.actionType').asSequence()\nvar res=$group('Admin.Action.stage','Consent','Admin.Action.eventReason').asSequence().filter(function(v,i){\n  return action.indexOf('SKIP')==i\n  }).last()\nif(res.isNull().not().value()) {\n  res=newValue(res.value().slice(14),'text')  \n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_skip_consent", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$('clsa-dcs-f1.ContraIndications:QuestionnaireRun.user').whenNull(\n  $group('Admin.Action.stage','ContraIndications','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_technician_contraindications", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var action=$group('Admin.Action.stage','ContraIndications','Admin.Action.actionType').asSequence()\nvar res=$group('Admin.Action.stage','ContraIndications','Admin.Action.eventReason').asSequence().filter(function(v,i){\n  return action.indexOf('SKIP')==i\n  }).last()\nif(res.isNull().not().value()) {\n  res=newValue(res.value().slice(14),'text')  \n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_skip_contraindications", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$group('clsa-dcs-f1.Participants:Admin.StageInstance.stage','ContraIndications',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value() \n? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_contraindicated_contraindications", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var stage='clsa-dcs-f1.ContraIndications:'\nvar p=$(stage+'QuestionnaireMetric.missingCount').asSequence()\nvar q=$(stage+'QuestionnaireMetric.questionCount').asSequence()\nvar res=null\nif(p.isNull().and(q.isNull()).not().value() && 0!=q.sum()) {\n  var str=[]\n  str.push(\n    'complete:'+\n    Math.round(q.sum().minus(p.sum()).multiply(100).div(q.sum()).value()))\n\nvar sections={\n'ICQ_COF1':[\n'ICQ_DOMHAND_COF1',\n'ICQ_HNDSWL_COF1',\n'ICQ_HNDCST_COF1',\n'ICQ_HNDHMT_COF1',\n'ICQ_ARMSWL_COF1',\n'ICQ_ARMCST_COF1',\n'ICQ_LEGSWL_COF1',\n'ICQ_LEGCST_COF1',\n'ICQ_SRG3MO_COF1',\n'ICQ_SRGYARM_COF1',\n'ICQ_SRGYCHT_COF1',\n'ICQ_SRGYHND_COF1',\n'ICQ_SRGYART_COF1',\n'ICQ_SRGYEYE_COF1',\n'ICQ_SRGYABD_COF1',\n'ICQ_SRGYHRT_COF1',\n'ICQ_SRGYOT_COF1',\n'ICQ_SRGYOTSPE_COF1',\n'ICQ_PAINHND_COF1',\n'ICQ_RISEASSI_COF1',\n'ICQ_RISECANE_COF1',\n'ICQ_ABLESTND_COF1',\n'ICQ_ABLEWLK_COF1',\n'ICQ_PREGNT_COF1',\n'ICQ_PREGNTWK_COF1',\n'ICQ_ILLLUNG_COF1',\n'ICQ_HRTCOND_COF1',\n'ICQ_EMB6WK_COF1',\n'ICQ_EMBMED_COF1',\n'ICQ_DERET3MO_COF1',\n'ICQ_EYEINF_COF1',\n'ICQ_EARINF_COF1',\n'ICQ_CATRCT_COF1',\n'ICQ_CATRCT2_COF1',\n'ICQ_CATRCTS_COF1',\n'ICQ_CATIME_COF1',\n'ICQ_GLAUC_COF1',\n'ICQ_HRAID_COF1',\n'ICQ_HRAID2_COF1',\n'ICQ_HRWORKING_COF1',\n'ICQ_GLASSES2_COF1',\n'ICQ_CTLENS2_COF1',\n'ICQ_GLASSES_COF1',\n'ICQ_CTLENS_COF1',\n'ICQ_PROSLIM_COF1',\n'ICQ_PROSARM_COF1',\n'ICQ_JOINTARM_COF1',\n'ICQ_PROSLEG_COF1',\n'ICQ_PROSHND_COF1',\n'ICQ_PROSFT_COF1',\n'ICQ_PROSHIP_COF1',\n'ICQ_PROSKNEE_COF1',\n'ICQ_PROEYE_COF1',\n'ICQ_FX_COF1',\n'ICQ_FXARM_COF1',\n'ICQ_FXSHLD_COF1',\n'ICQ_FXHND_COF1',\n'ICQ_FXWRST_COF1',\n'ICQ_FXRIB_COF1',\n'ICQ_FXLEG_COF1',\n'ICQ_FXANK_COF1',\n'ICQ_FXFT_COF1',\n'ICQ_FXHIP_COF1',\n'ICQ_FXKNEE_COF1',\n'ICQ_FXCHK_COF1',\n'ICQ_FXJAW_COF1',\n'ICQ_FXNOSE_COF1',\n'ICQ_FXSKL_COF1',\n'ICQ_FXNECK_COF1',\n'ICQ_FXBACK_COF1',\n'ICQ_FXCOLLR_COF1',\n'ICQ_FXPELV_COF1',\n'ICQ_LAMIN_COF1',\n'ICQ_POLIO_COF1',\n'ICQ_BLDSP3MO_COF1',\n'ICQ_ANEURY_COF1',\n'ICQ_PACEMKR_COF1',\n'ICQ_DEFIBR_COF1',\n'ICQ_COCHLIMP_COF1',\n'ICQ_NGTUBE_COF1',\n'ICQ_ABDTUBE_COF1',\n'ICQ_CHEMO4WK_COF1',\n'ICQ_HAEMO_COF1',\n'ICQ_BLDTR24H_COF1',\n'ICQ_NUCLMED_COF1',\n'ICQ_NUCLMED_48H_COF1',\n'ICQ_NUCLMED_TEST_Q_COF1',\n'ICQ_NUCLMED_IV24H_COF1',\n'ICQ_BARSWAL_COF1',\n'ICQ_TINNIT_COF1',\n'ICQ_SMOKE_COF1',\n'ICQ_SMOKETIME_COF1',\n'ICQ_SMOKETIMEH_COF1',\n'ICQ_INHALERLONG_COF1',\n'ICQ_INHALERSHORT_COF1']\n}\n\n  for(var key in sections) {\n    var rcount=0\n    var qcount=0\n    var arr=sections[key]\n    for(var i=0; i<arr.length; i++ ) {\n      var j=$(stage+arr[i])\n      if(j.isNull().value()) continue\n      qcount++      \n      rcount+=j.any('REFUSED').value()?1:0\n    }\n    if(0==qcount) {\n      str.push(key+':100')\n    } else {\n      var perc=100.0*rcount/qcount      \n      if(0<perc && 100>perc && 0!=(perc-Math.floor(perc))) {        \n        perc=perc.toFixed(3)\n      }\n      str.push(key+':'+perc)\n    }  \n  }\n\n  res=newValue('{'+str.join(',')+'}','text')\n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_qac_contraindications", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$this('data_qac_contraindications').isNull().and(\n  $this('stage_contraindicated_contraindications').eq(0),\n  $this('stage_skip_contraindications').isNull()\n).value() ? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_missing_contraindications", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$('clsa-dcs-f1.Frax:InstrumentRun.user').whenNull(\n  $group('Admin.Action.stage','Frax','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_technician_frax", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$group('clsa-dcs-f1.Participants:Admin.StageInstance.stage','Frax',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value() \n? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_contraindicated_frax", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var res=$('clsa-dcs-f1.Frax:RES_RESULT_FILE')\nif(res.isNull().not().value()) {\n  res=newValue('{filesize:'+res.length()+'}','text')\n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_qac_frax", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$this('data_qac_frax').isNull().and(\n  $this('stage_contraindicated_frax').eq(0),\n  $this('stage_skip_frax').isNull()\n).value() ? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_missing_frax", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var action=$group('Admin.Action.stage','Frax','Admin.Action.actionType').asSequence()\nvar res=$group('Admin.Action.stage','Frax','Admin.Action.eventReason').asSequence().filter(function(v,i){\n  return action.indexOf('SKIP')==i\n  }).last()\nif(res.isNull().not().value()) {\n  res=newValue(res.value().slice(14),'text')  \n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_skip_frax", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$('clsa-dcs-f1.GenHealth:QuestionnaireRun.user').whenNull(\n  $group('Admin.Action.stage','GenHealth','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_technician_general_health", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var action=$group('Admin.Action.stage','GenHealth','Admin.Action.actionType').asSequence()\nvar res=$group('Admin.Action.stage','GenHealth','Admin.Action.eventReason').asSequence().filter(function(v,i){\n  return action.indexOf('SKIP')==i\n  }).last()\nif(res.isNull().not().value()) {\n  res=newValue(res.value().slice(14),'text')  \n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_skip_general_health", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$group('clsa-dcs-f1.Participants:Admin.StageInstance.stage','GenHealth',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value() \n? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_contraindicated_general_health", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var stage='clsa-dcs-f1.GenHealth:'\nvar p=$(stage+'QuestionnaireMetric.missingCount').asSequence()\nvar q=$(stage+'QuestionnaireMetric.questionCount').asSequence()\nvar res=null\nif(p.isNull().and(q.isNull()).not().value() && 0!=q.sum()) {\n  var str=[]\n  str.push(\n    'complete:'+\n    Math.round(q.sum().minus(p.sum()).multiply(100).div(q.sum()).value()))\n\nvar sections={\n'HRG':[\n'HRG_HRG_COF1',\n'HRG_NOIS_COF1',\n'HRG_AID_COF1',\n'HRG_USE_COF1',\n'HRG_PROB_EMBA_COF1',\n'HRG_PROB_FRST_COF1',\n'HRG_PROB_DIFF_COF1',\n'HRG_PROB_HACP_COF1',\n'HRG_PROB_VIST_COF1',\n'HRG_PROB_MEET_COF1',\n'HRG_PROB_ARGU_COF1',\n'HRG_PROB_LSTN_COF1',\n'HRG_PROB_LIFE_COF1',\n'HRG_PROB_FRND_COF1'],\n'HUP':[\n'HUP_FREE_COF1',\n'HUP_INTNSTY_COF1',\n'HUP_PRVACT_COF1'],\n'NUR':[\n'NUR_GLSWT_COF1',\n'NUR_WTGL_COF1',\n'NUR_WTL_COF1',\n'NUR_WTG_COF1',\n'NUR_SKPMLS_COF1',\n'NUR_APPTT_COF1',\n'NUR_SWLLFD_COF1',\n'NUR_FRTVEG_COF1',\n'NUR_DRKFLD_COF1',\n'NUR_MLSMN_COF1',\n'NUR_CKMEALS_COF1',\n'NUR_MLPREP_COF1',\n'NUR_MLPREP_OTH_COF1',\n'NUR_FASTFD_NB_COF1',\n'NUR_NOTENFD_COF1',\n'NUR_RCOFF_COF1',\n'NUR_DCOFF_COF1',\n'NUR_BTEA_COF1',\n'NUR_GTEA_COF1',\n'NUR_OTEA_COF1'],\n'VIS':[\n'VIS_SGHT_COF1',\n'VIS_AID_COF1',\n'VIS_USE_COF1']\n}\n\n  for(var key in sections) {\n    var rcount=0\n    var qcount=0\n    var arr=sections[key]\n    for(var i=0; i<arr.length; i++ ) {\n      var j=$(stage+arr[i])\n      if(j.isNull().value()) continue\n      qcount++      \n      rcount+=j.any('REFUSED').value()?1:0\n    }\n    if(0==qcount) {\n      str.push(key+':100')\n    } else {\n      var perc=100.0*rcount/qcount      \n      if(0<perc && 100>perc && 0!=(perc-Math.floor(perc))) {        \n        perc=perc.toFixed(3)\n      }\n      str.push(key+':'+perc)\n    }  \n  }\n\n  res=newValue('{'+str.join(',')+'}','text')\n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_qac_general_health", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$this('data_qac_general_health').isNull().and(\n  $this('stage_contraindicated_general_health').eq(0),\n  $this('stage_skip_general_health').isNull()\n).value() ? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_missing_general_health", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$('clsa-dcs-f1.Urine:QuestionnaireRun.user').whenNull(\n  $group('Admin.Action.stage','Urine','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_technician_urine", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var action=$group('Admin.Action.stage','Urine','Admin.Action.actionType').asSequence()\nvar res=$group('Admin.Action.stage','Urine','Admin.Action.eventReason').asSequence().filter(function(v,i){\n  return action.indexOf('SKIP')==i\n  }).last()\nif(res.isNull().not().value()) {\n  res=newValue(res.value().slice(14),'text')  \n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_skip_urine", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$group('clsa-dcs-f1.Participants:Admin.StageInstance.stage','Urine',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value() \n? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_contraindicated_urine", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var stage='clsa-dcs-f1.Urine:'\nvar p=$(stage+'QuestionnaireMetric.missingCount').asSequence()\nvar q=$(stage+'QuestionnaireMetric.questionCount').asSequence()\nvar res=null\nif(p.isNull().and(q.isNull()).not().value() && 0!=q.sum()) {\n  var str=[]\n  str.push(\n    'complete:'+\n    Math.round(q.sum().minus(p.sum()).multiply(100).div(q.sum()).value()))\n\nvar sections={\n'URINE':[\n'FOOD_DRINK_24_U',\n'CAFFEINE_24_U',\n'TOBACCO_24_U',\n'ALCOHOL_24_U',\n'CURRENTLY_MENSTRUAL_U',\n'AGREE_URINE_U',\n'WHY_NOT_AGREE_URINE_U',\n'PART_DECLINED_URINE_U',\n'TECH_REASON_URINE_U']\n}\n\n  for(var key in sections) {\n    var rcount=0\n    var qcount=0\n    var arr=sections[key]\n    for(var i=0; i<arr.length; i++ ) {\n      var j=$(stage+arr[i])\n      if(j.isNull().value()) continue\n      qcount++      \n      rcount+=j.any('REFUSED').value()?1:0\n    }\n    if(0==qcount) {\n      str.push(key+':100')\n    } else {\n      var perc=100.0*rcount/qcount      \n      if(0<perc && 100>perc && 0!=(perc-Math.floor(perc))) {        \n        perc=perc.toFixed(3)\n      }\n      str.push(key+':'+perc)\n    }  \n  }\n\n  res=newValue('{'+str.join(',')+'}','text')\n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_qac_urine", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$this('data_qac_urine').isNull().and(\n  $this('stage_contraindicated_urine').eq(0),\n  $this('stage_skip_urine').isNull()\n).value() ? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_missing_urine", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var stage=$this('group_blood')\nvar res=null\nif(stage.isNull().not().value()) {\n  stage=stage.value()\n  res=$('clsa-dcs-f1.'+stage+':QuestionnaireRun.user').whenNull(\n    $group('Admin.Action.stage',stage,'Admin.Action.user').asSequence().last()).lowerCase()\n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_technician_blood", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var stage=$this('group_blood')\nvar res=null\nif(stage.isNull().not().value()) {\n  stage=stage.value()\n  var action=$group('Admin.Action.stage',stage,'Admin.Action.actionType').asSequence()\n  var res=$group('Admin.Action.stage',stage,'Admin.Action.eventReason').asSequence().filter(function(v,i){\n    return action.indexOf('SKIP')==i\n    }).last()\n  if(res.isNull().not().value()) {\n    res=newValue(res.value().slice(14),'text')\n  }\n}  \nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_skip_blood", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var stage=$this('group_blood')\nvar res=null\nif(stage.isNull().not().value()) {\n  stage='clsa-dcs-f1.'+stage.value()+':'\n  var p=$(stage+'QuestionnaireMetric.missingCount').asSequence()\n  var q=$(stage+'QuestionnaireMetric.questionCount').asSequence()\n  if(p.isNull().and(q.isNull()).not().value() && 0!=q.sum()) {\n    var str=[]\n    str.push(\n      'complete:'+\n      Math.round(q.sum().minus(p.sum()).multiply(100).div(q.sum()).value()))\n\nvar sections={\n'BLOOD':[\n'AGREE_BS_B',\n'ALCOHOL_24_B',\n'BLOOD_COLLECTED_B',\n'CAFFEINE_24_B',\n'CURRENTLY_MENSTRUAL_B',\n'DECLINE_POST_B',\n'FIRST_ATTEMPT_B',\n'FOOD_DRINK_24_B',\n'NEEDLE_B',\n'NOTE_DRAW_SITE_B.FIBROSED_INFLAMED',\n'NOTE_DRAW_SITE_B.HEMATOMA',\n'NOTE_DRAW_SITE_B.PARALYZED',\n'NOTE_DRAW_SITE_B.PETECHIAE',\n'NOTE_DRAW_SITE_B.PICC_LINE',\n'NOTE_DRAW_SITE_B.RED_SWOLLEN',\n'NOTE_DRAW_SITE_B.SCARRING',\n'NOTE_DRAW_SITE_B.SCLEROTIC_HARDVEINS',\n'NOTE_DRAW_SITE_B.SEVERE_PROBLEM',\n'NOTE_DRAW_SITE_B.TATTOOS',\n'NOTE_DRAW_SITE_B.VASCULAR_GRAFT',\n'NOTE_OTHER_B.OTHER',\n'PART_DECLINED_B',\n'PART_POSTPONED_B',\n'SIT_RECLIN_B',\n'TECH_REASON_B',\n'TOBACCO_24_B',\n'WHICH_ARM_CHOSEN_2_B',\n'WHY_NOT_AGREE_BLOOD_B',\n'WHY_NO_BLOOD_B']\n}\n\n    for(var key in sections) {\n      var rcount=0\n      var qcount=0\n      var arr=sections[key]\n      for(var i=0; i<arr.length; i++ ) {\n        var j=$(stage+arr[i])\n        if(j.isNull().value()) continue\n        qcount++      \n        rcount+=j.any('REFUSED').value()?1:0\n      }\n      if(0==qcount) {\n        str.push(key+':100')\n      } else {\n        var perc=100.0*rcount/qcount      \n        if(0<perc && 100>perc && 0!=(perc-Math.floor(perc))) {        \n          perc=perc.toFixed(3)\n        }\n        str.push(key+':'+perc)\n      }\n    }\n    res=newValue('{'+str.join(',')+'}','text')\n  }\n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_qac_blood", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$this('data_qac_blood').isNull().and(\n  $this('stage_contraindicated_blood').eq(0),\n  $this('stage_skip_blood').isNull()\n).value() ? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_missing_blood", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var stage=$this('group_blood')\nvar res=null\nif(stage.isNull().not().value()) {\n  stage=stage.value()\n  res=$group('clsa-dcs-f1.Participants:Admin.StageInstance.stage',stage,'Admin.StageInstance.lastState').whenNull(\n      $group('clsa-dcs-f1.Participants:Admin.StageInstance.stage',stage,'Admin.StageInstance.lastState')).any(\n        'Contraindicated','NotApplicable').value() ? 1 : 0\n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_contraindicated_blood", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var res=null\nvar u=$group('Admin.StageInstance.stage','Blood','Admin.StageInstance.lastState').asSequence().last()\nvar v=$group('Admin.StageInstance.stage','Blood2','Admin.StageInstance.lastState').asSequence().last()\nvar p=$('Admin.StageInstance.stage').any('Blood').and(u.isNull().not()).value()\nvar q=$('Admin.StageInstance.stage').any('Blood2').and(v.isNull().not()).value()\nif(p && !q) {\n  res=newValue( 'Blood', 'text') \n} else if(q && !p) {\n  res=newValue( 'Blood2', 'text') \n} else if(p && q) {\n  if(v.any('NotApplicable').or(u.any('Completed')).value()) {\n    res=newValue('Blood', 'text')\n  } else { \n    res=newValue('Blood2', 'text')\n  }\n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "group_blood", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$('clsa-dcs-f1.Deviation_AE_CRF:QuestionnaireRun.user').whenNull(\n  $group('Admin.Action.stage','Deviation_AE_CRF','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_technician_deviation_aecrf", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var action=$group('Admin.Action.stage','Deviation_AE_CRF','Admin.Action.actionType').asSequence()\nvar res=$group('Admin.Action.stage','Deviation_AE_CRF','Admin.Action.eventReason').asSequence().filter(function(v,i){\n  return action.indexOf('SKIP')==i\n  }).last()\nif(res.isNull().not().value()) {\n  res=newValue(res.value().slice(14),'text')  \n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_skip_deviation_aecrf", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$group('clsa-dcs-f1.Participants:Admin.StageInstance.stage','Deviation_AE_CRF',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value() \n? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_contraindicated_deviation_aecrf", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var stage='clsa-dcs-f1.Deviation_AE_CRF:'\nvar p=$(stage+'QuestionnaireMetric.missingCount').asSequence()\nvar q=$(stage+'QuestionnaireMetric.questionCount').asSequence()\nvar res=null\nif(p.isNull().and(q.isNull()).not().value() && 0!=q.sum()) {\n  var str=[]\n  str.push(\n    'complete:'+\n    Math.round(q.sum().minus(p.sum()).multiply(100).div(q.sum()).value()))\n\nvar sections={\n'Deviation':[\n'DEV_DCS_COF1',\n'DEV_WHAT_COF1',\n'DEV_REAS_COF1',\n'DEV_ORDR_COF1',\n'DEV_ORDR2_COF1',\n'DEV_ORDR3_COF1',\n'DEV_ORDR4_COF1',\n'DEV_ORDR5_COF1',\n'DEV_BLWHEN_COF1',\n'DAE_DCS_COF1',\n'DAE_WHAT_COF1',\n'DAE_FLWUP_COF1',\n'DAE_COMM_COF1',\n'CRF_DCS_COF1',\n'CRF_NCC_COF1',\n'CRF-REAS_COF1']\n}\n\n  for(var key in sections) {\n    var rcount=0\n    var qcount=0\n    var arr=sections[key]\n    for(var i=0; i<arr.length; i++ ) {\n      var j=$(stage+arr[i])\n      if(j.isNull().value()) continue\n      qcount++      \n      rcount+=j.any('REFUSED').value()?1:0\n    }\n    if(0==qcount) {\n      str.push(key+':100')\n    } else {\n      var perc=100.0*rcount/qcount      \n      if(0<perc && 100>perc && 0!=(perc-Math.floor(perc))) {        \n        perc=perc.toFixed(3)\n      }\n      str.push(key+':'+perc)\n    }  \n  }\n\n  res=newValue('{'+str.join(',')+'}','text')\n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_qac_deviation_aecrf", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$this('data_qac_deviation_aecrf').isNull().and(\n  $this('stage_contraindicated_deviation_aecrf').eq(0),\n  $this('stage_skip_deviation_aecrf').isNull()\n).value() ? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_missing_deviation_aecrf", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$('clsa-dcs-f1.BodyCompositionWeight:QuestionnaireRun.user').whenNull(\n  $group('Admin.Action.stage','BodyCompositionWeight','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_technician_body_composition_weight", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var action=$group('Admin.Action.stage','BodyCompositionWeight','Admin.Action.actionType').asSequence()\nvar res=$group('Admin.Action.stage','BodyCompositionWeight','Admin.Action.eventReason').asSequence().filter(function(v,i){\n  return action.indexOf('SKIP')==i\n  }).last()\nif(res.isNull().not().value()) {\n  res=newValue(res.value().slice(14),'text')  \n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_skip_body_composition_weight", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$group('clsa-dcs-f1.Participants:Admin.StageInstance.stage','BodyCompositionWeight',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value() \n? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_contraindicated_body_composition_weight", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var stage='clsa-dcs-f1.BodyCompositionWeight:'\nvar p=$(stage+'QuestionnaireMetric.missingCount').asSequence()\nvar q=$(stage+'QuestionnaireMetric.questionCount').asSequence()\nvar res=null\nif(p.isNull().and(q.isNull()).not().value() && 0!=q.sum()) {\n  var str=[]\n  str.push(\n    'complete:'+\n    Math.round(q.sum().minus(p.sum()).multiply(100).div(q.sum()).value()))\n\nvar sections={\n'S1':[\n'TN_FOOD_COF1',\n'TN_CAFF_COF1',\n'TN_ALCO_COF1',\n'TN_INEX_COF1',\n'TN_DIUR_COF1',\n'TN_WKTM_COF1',\n'BODY_COMPOSITION']\n}\n\n  for(var key in sections) {\n    var rcount=0\n    var qcount=0\n    var arr=sections[key]\n    for(var i=0; i<arr.length; i++ ) {\n      var j=$(stage+arr[i])\n      if(j.isNull().value()) continue\n      qcount++      \n      rcount+=j.any('REFUSED').value()?1:0\n    }\n    if(0==qcount) {\n      str.push(key+':100')\n    } else {\n      var perc=100.0*rcount/qcount      \n      if(0<perc && 100>perc && 0!=(perc-Math.floor(perc))) {        \n        perc=perc.toFixed(3)\n      }\n      str.push(key+':'+perc)\n    }  \n  }\n\n  res=newValue('{'+str.join(',')+'}','text')\n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_qac_body_composition_weight", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$this('data_qac_body_composition_weight').isNull().and(\n  $this('stage_contraindicated_body_composition_weight').eq(0),\n  $this('stage_skip_body_composition_weight').isNull(),\n  $('clsa-dcs-f1.Participants:DCSatHOME').isNull().not()\n).value() ? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_missing_body_composition_weight", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$('clsa-dcs-f1.Deviation_AE_CRF:QuestionnaireRun.user').whenNull(\n  $group('Admin.Action.stage','Deviation_AE_CRF','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_technician_quality_assurance_inhome", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var action=$group('Admin.Action.stage','Deviation_AE_CRF','Admin.Action.actionType').asSequence()\nvar res=$group('Admin.Action.stage','Deviation_AE_CRF','Admin.Action.eventReason').asSequence().filter(function(v,i){\n  return action.indexOf('SKIP')==i\n  }).last()\nif(res.isNull().not().value()) {\n  res=newValue(res.value().slice(14),'text')  \n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_skip_quality_assurance_inhome", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$group('clsa-dcs-f1.Participants:Admin.StageInstance.stage','QualityAssuranceIH',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value() \n? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_contraindicated_quality_assurance_inhome", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var stage='clsa-dcs-f1.QualityAssuranceIH:'\nvar p=$(stage+'QuestionnaireMetric.missingCount').asSequence()\nvar q=$(stage+'QuestionnaireMetric.questionCount').asSequence()\nvar res=null\nif(p.isNull().and(q.isNull()).not().value() && 0!=q.sum()) {\n  var str=[]\n  str.push(\n    'complete:'+\n    Math.round(q.sum().minus(p.sum()).multiply(100).div(q.sum()).value()))\n\nvar sections={\n'QAH_COF1':[\n'QAH_INT1_COF1',\n'QAH_INTIME_COF1',\n'QAH_TWOVIS_COF1',\n'QAH_18mo_COF1',\n'QAH_INSAS_COF1',\n'QAH_INKNO_COF1',\n'QAH_FRIEND_COF1',\n'QAH_INMED_COF1',\n'QAH_HIN_COF1',\n'QAH_INMEM_COF1',\n'QAH_COM_COF1',\n'QAH_FRIEND2_COF1',\n'QAH_ININFO_COF1',\n'QAH_INANY_COF1',\n'QAH_EXPER_COF1',\n'QAH_IMPRV_COF1',\n'QAH_INTIME2_COF1',\n'QAH_INACC_COF1']\n}\n\n  for(var key in sections) {\n    var rcount=0\n    var qcount=0\n    var arr=sections[key]\n    for(var i=0; i<arr.length; i++ ) {\n      var j=$(stage+arr[i])\n      if(j.isNull().value()) continue\n      qcount++      \n      rcount+=j.any('REFUSED').value()?1:0\n    }\n    if(0==qcount) {\n      str.push(key+':100')\n    } else {\n      var perc=100.0*rcount/qcount      \n      if(0<perc && 100>perc && 0!=(perc-Math.floor(perc))) {        \n        perc=perc.toFixed(3)\n      }\n      str.push(key+':'+perc)\n    }  \n  }\n\n  res=newValue('{'+str.join(',')+'}','text')\n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_qac_quality_assurance_inhome", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$this('data_qac_quality_assurance_inhome').isNull().and(\n  $this('stage_contraindicated_quality_assurance_inhome').eq(0),\n  $this('stage_skip_quality_assurance_inhome').isNull()\n).value() ? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_missing_quality_assurance_inhome", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$group('clsa-dcs-f1.Participants:Admin.StageInstance.stage','HeightWeight',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value() \n? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_contraindicated_height_weight", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var p=$('clsa-dcs-f1.HeightWeight:QuestionnaireMetric.missingCount').asSequence()\nvar q=$('clsa-dcs-f1.HeightWeight:QuestionnaireMetric.questionCount').asSequence()\nvar res=null\nif(p.isNull().and(q.isNull()).not().value() && 0!=q.sum()){\n  res=newValue(\n    '{complete:'+\n    Math.round(q.sum().minus(p.sum()).multiply(100).div(q.sum()).value())\n    +'}','text')\n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_qac_height_weight", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$this('data_qac_height_weight').isNull().and(\n  $this('stage_contraindicated_height_weight').eq(0),\n  $this('stage_skip_height_weight').isNull()\n).value() ? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_missing_height_weight", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$('clsa-dcs-f1.NeuropsychologicalBatteryScoring:QuestionnaireRun.user').whenNull(\n  $group('Admin.Action.stage','NeuropsychologicalBatteryScoring','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_technician_neuropsychological_battery_scoring", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var action=$group('Admin.Action.stage','NeuropsychologicalBatteryScoring','Admin.Action.actionType').asSequence()\nvar res=$group('Admin.Action.stage','NeuropsychologicalBatteryScoring','Admin.Action.eventReason').asSequence().filter(function(v,i){\n  return action.indexOf('SKIP')==i\n  }).last()\nif(res.isNull().not().value()) {\n  res=newValue(res.value().slice(14),'text')  \n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_skip_neuropsychological_battery_scoring", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$group('clsa-dcs-f1.Participants:Admin.StageInstance.stage','NeuropsychologicalBatteryScoring',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value() \n? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_contraindicated_neuropsychological_battery_scoring", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var p=$('clsa-dcs-f1.NeuropsychologicalBatteryScoring:QuestionnaireMetric.missingCount').asSequence()\nvar q=$('clsa-dcs-f1.NeuropsychologicalBatteryScoring:QuestionnaireMetric.questionCount').asSequence()\nvar res=null\nif(p.isNull().and(q.isNull()).not().value() && 0!=q.sum()){\n  res=newValue(\n    '{complete:'+\n    Math.round(q.sum().minus(p.sum()).multiply(100).div(q.sum()).value())\n    +'}','text')\n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_qac_neuropsychological_battery_scoring", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$this('data_qac_neuropsychological_battery_scoring').isNull().and(\n  $this('stage_contraindicated_neuropsychological_battery_scoring').eq(0),\n  $this('stage_skip_neuropsychological_battery_scoring').isNull()\n).value() ? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_missing_neuropsychological_battery_scoring", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$('clsa-dcs-f1.OSEA:QuestionnaireRun.user').whenNull(\n  $group('Admin.Action.stage','OSEA','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_technician_osea", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var action=$group('Admin.Action.stage','OSEA','Admin.Action.actionType').asSequence()\nvar res=$group('Admin.Action.stage','OSEA','Admin.Action.eventReason').asSequence().filter(function(v,i){\n  return action.indexOf('SKIP')==i\n  }).last()\nif(res.isNull().not().value()) {\n  res=newValue(res.value().slice(14),'text')  \n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_skip_osea", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$group('clsa-dcs-f1.Participants:Admin.StageInstance.stage','OSEA',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value() \n? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_contraindicated_osea", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var stage='clsa-dcs-f1.OSEA:'\nvar p=$(stage+'QuestionnaireMetric.missingCount').asSequence()\nvar q=$(stage+'QuestionnaireMetric.questionCount').asSequence()\nvar res=null\nif(p.isNull().and(q.isNull()).not().value() && 0!=q.sum()) {\n  var str=[]\n  str.push(\n    'complete:'+\n    Math.round(q.sum().minus(p.sum()).multiply(100).div(q.sum()).value()))\n\nvar sections={\n'ORH':[\n'ORH_HLTH_COF1',\n'ORH_TEETH_COF1',\n'ORH_TETH20_COF1',\n'ORH_DENT_COF1',\n'ORH_DNUSE_COF1',\n'ORH_UNCEAT_COF1',\n'ORH_EXP_DNB_COF1',\n'ORH_DNVST_COF1',\n'ORH_WYNDN_COF1',\n'ORH_TYPINS_COF1',\n'ORH_COST_COF1',\n'ORH_PRBHT_COF1',\n'ORH_BRUSDN_COF1',\n'ORH_WHO_COF1',\n'ORH_OFTN_COF1'],\n'PSY_PHY_FIN':[\n'PSY_CRT_COF1',\n'PSY_OFTNCRT_COF1',\n'PSY_WHOCRT_COF1',\n'PSY_SEXCRT_COF1',\n'PSY_LIVCRT_COF1',\n'PSY_ISU_COF1',\n'PSY_OFTNISU_COF1',\n'PSY_WHOISU_COF1',\n'PSY_SEXISU_COF1',\n'PSY_LIVISU_COF1',\n'PSY_THR_COF1',\n'PSY_OFTNTHR_COF1',\n'PSY_WHOTHR_COF1',\n'PSY_SEXTHR_COF1',\n'PSY_LIVTHR_COF1',\n'PSY_IGN_COF1',\n'PSY_OFTNIGN_COF1',\n'PSY_WHOIGN_COF1',\n'PSY_SEXIGN_COF1',\n'PSY_LIVNIGN_COF1',\n'PHY_PUSH_COF1',\n'PHY_OFTNPUSH_COF1',\n'PHY_WHOPUSH_COF1',\n'PHY_SEXPUSH_COF1',\n'PHY_LIVPUSH_COF1',\n'PHY_THRN_COF1',\n'PHY_OFTNTHRN_COF1',\n'PHY_WHOTHRN_COF1',\n'PHY_SEXTHRN_COF1',\n'PHY_LIVTHRN_COF1',\n'PHY_HIT_COF1',\n'PHY_OFTNHIT_COF1',\n'PHY_WHOHIT_COF1',\n'PHY_SEXHIT_COF1',\n'PHY_LIVHIT_COF1',\n'PHY_THT_COF1',\n'PHY_OFTNTHT_COF1',\n'PHY_WHOTHT_COF1',\n'PHY_SEXTHT_COF1',\n'PHY_LIVTHT_COF1',\n'PHY_CHK_COF1',\n'PHY_OFTNCHK_COF1',\n'PHY_WHOCHK_COF1',\n'PHY_SEXCHK_COF1',\n'PHY_LIVCHK_COF1',\n'PHY_WPN_COF1',\n'PHY_OFTNWPN_COF1',\n'PHY_WHOWPN_COF1',\n'PHY_SEXWPN_COF1',\n'PHY_LIVWPN_COF1',\n'FIN_MNY_COF1',\n'FIN_OFTN_COF1',\n'FIN_WHOMNY_COF1',\n'FIN_SEXMNY_COF1',\n'FIN_LIVMNY_COF1',\n'FIN_POS_COF1',\n'FIN_OFTNPOS_COF1',\n'FIN_WHOPOS_COF1',\n'FIN_SEXPOS_COF1',\n'FIN_LIVPOS_COF1',\n'FIN_PRV_COF1',\n'FIN_OFTNPRV_COF1',\n'FIN_WHOPRV_COF1',\n'FIN_SEXPRV_COF1',\n'FIN_LIVPRV_COF1',\n'PSY_SEXCRT2_PRT_COF1',\n'PSY_SEXCRT2_SIB_COF1',\n'PSY_SEXCRT2_CHD_COF1',\n'PSY_SEXCRT2_GRC_COF1',\n'PSY_SEXCRT2_FML_COF1',\n'PSY_SEXCRT2_FRD_COF1',\n'PSY_SEXCRT2_CGV_COF1',\n'PSY_SEXCRT2_OT_COF1',\n'PSY_LIVCRT2_PRT_COF1',\n'PSY_LIVCRT2_SIB_COF1',\n'PSY_LIVCRT2_CHD_COF1',\n'PSY_LIVCRT2_GRC_COF1',\n'PSY_LIVCRT2_FML_COF1',\n'PSY_LIVCRT2_FRD_COF1',\n'PSY_LIVCRT2_CGV_COF1',\n'PSY_LIVCRT2_OT_COF1',\n'PSY_SEXISU2_PAR_COF1',\n'PSY_SEXISU2_SIB_COF1',\n'PSY_SEXISU2_CHILD_COF1',\n'PSY_SEXISU2_GRAN_COF1',\n'PSY_SEXISU2_FAM_COF1',\n'PSY_SEXISU2_FRI_COF1',\n'PSY_SEXISU2_PAID_COF1',\n'PSY_SEXISU2_OTSP_COF1',\n'PSY_LIVISU2_PAR_COF1',\n'PSY_LIVISU2_SIB_COF1',\n'PSY_LIVISU2_CHILD_COF1',\n'PSY_LIVISU2_GRAND_COF1',\n'PSY_LIVISU2_FAM_COF1',\n'PSY_LIVISU2_FRI_COF1',\n'PSY_LIVISU2_PAID_COF1',\n'PSY_LIVISU2_OTSP_COF1',\n'PSY_SEXTHR2_PAR_COF1',\n'PSY_SEXTHR2_SIB_COF1',\n'PSY_SEXTHR2_CHILD_COF1',\n'PSY_SEXTHR2_GRAND_COF1',\n'PSY_SEXTHR2_FAM_COF1',\n'PSY_SEXTHR2_FRI_COF1',\n'PSY_SEXTHR2_PAID_COF1',\n'PSY_SEXTHR2_OTSP_COF1',\n'PSY_LIVTHR2_PAR_COF1',\n'PSY_LIVTHR2_SIB_COF1',\n'PSY_LIVTHR2_CHILD_COF1',\n'PSY_LIVTHR2_GRAN_COF1',\n'PSY_LIVTHR2_FAM_COF1',\n'PSY_LIVTHR2_FRI_COF1',\n'PSY_LIVTHR2_PAID_COF1',\n'PSY_LIVTHR2_OTSP_COF1',\n'PSY_SEXIGN2_PAR_COF1',\n'PSY_SEXIGN2_SIB_COF1',\n'PSY_SEXIGN2_CHILD_COF1',\n'PSY_SEXIGN2_GRAN_COF1',\n'PSY_SEXIGN2_FAM_COF1',\n'PSY_SEXIGN2_FRI_COF1',\n'PSY_SEXIGN2_PAID_COF1',\n'PSY_SEXIGN2_OTSP_COF1',\n'PSY_LIVIGN2_PAR_COF1',\n'PSY_LIVNIGN2_SIB_COF1',\n'PSY_LIVNIGN2_CHILD_COF1',\n'PSY_LIVNIGN2_GRAN_COF1',\n'PSY_LIVNIGN2_FAM_COF1',\n'PSY_LIVNIGN2_FRI_COF1',\n'PSY_LIVNIGN2_PAID_COF1',\n'PSY_LIVNIGN2_OTSP_COF1',\n'PHY_SEXPUSH2_PAR_COF1',\n'PHY_SEXPUSH2_SIB_COF1',\n'PHY_SEXPUSH2_CHILD_COF1',\n'PHY_SEXPUSH2_GRAN_COF1',\n'PHY_SEXPUSH2_FAM_COF1',\n'PHY_SEXPUSH2_FRI_COF1',\n'PHY_SEXPUSH2_PAID_COF1',\n'PHY_SEXPUSH2_OTSP_COF1',\n'PHY_LIVPUSH2_PAR_COF1',\n'PHY_LIVPUSH2_SIB_COF1',\n'PHY_LIVPUSH2_CHILD_COF1',\n'PHY_LIVPUSH2_GRAN_COF1',\n'PHY_LIVPUSH2_FAM_COF1',\n'PHY_LIVPUSH2_FRI_COF1',\n'PHY_LIVPUSH2_PAID_COF1',\n'PHY_LIVPUSH2_OTSP_COF1',\n'PHY_SEXTHRN2_PAR_COF1',\n'PHY_SEXTHRN2_SIB_COF1',\n'PHY_SEXTHRN2_CHILD_COF1',\n'PHY_SEXTHRN2_GRAN_COF1',\n'PHY_SEXTHRN2_FAM_COF1',\n'PHY_SEXTHRN2_FRI_COF1',\n'PHY_SEXTHRN2_PAID_COF1',\n'PHY_SEXTHRN2_OTSP_COF1',\n'PHY_LIVTHRN2_PAR_COF1',\n'PHY_LIVTHRN2_SIB_COF1',\n'PHY_LIVTHRN2_CHILD_COF1',\n'PHY_LIVTHRN2_GRAN_COF1',\n'PHY_LIVTHRN2_FAM_COF1',\n'PHY_LIVTHRN2_FRI_COF1',\n'PHY_LIVTHRN2_PAID_COF1',\n'PHY_LIVTHRN2_OTHSP_COF1',\n'PHY_SEXHIT2_PAR_COF1',\n'PHY_SEXHIT2_SIB_COF1',\n'PHY_SEXHIT2_CHILD_COF1',\n'PHY_SEXHIT2_GRAN_COF1',\n'PHY_SEXHIT2_FAM_COF1',\n'PHY_SEXHIT2_FRI_COF1',\n'PHY_SEXHIT2_PAID_COF1',\n'PHY_SEXHIT2_OTSP_COF1',\n'PHY_LIVHIT2_PAR_COF1',\n'PHY_LIVHIT2_SIB_COF1',\n'PHY_LIVHIT2_CHILD_COF1',\n'PHY_LIVHIT2_GRAN_COF1',\n'PHY_LIVHIT2_FAM_COF1',\n'PHY_LIVHIT2_FRI_COF1',\n'PHY_LIVHIT2_PAID_COF1',\n'PHY_LIVHIT2_OTSP_COF1',\n'PHY_SEXTHT2_PAR_COF1',\n'PHY_SEXTHT2_SIB_COF1',\n'PHY_SEXTHT2_CHILD_COF1',\n'PHY_SEXTHT2_GRAN_COF1',\n'PHY_SEXTHT2_FAM_COF1',\n'PHY_SEXTHT2_FRI_COF1',\n'PHY_SEXTHT2_PAID_COF1',\n'PHY_SEXTHT2_OTSP_COF1',\n'PHY_LIVTHT2_PAR_COF1',\n'PHY_LIVTHT2_SIB_COF1',\n'PHY_LIVTHT2_CHILD_COF1',\n'PHY_LIVTHT2_GRAN_COF1',\n'PHY_LIVTHT2_FAM_COF1',\n'PHY_LIVTHT2_FRI_COF1',\n'PHY_LIVTHT2_PAID_COF1',\n'PHY_LIVTHT2_OTSP_COF1',\n'PHY_SEXCHK2_PAR_COF1',\n'PHY_SEXCHK2_SIB_COF1',\n'PHY_SEXCHK2_CHILD_COF1',\n'PHY_SEXCHK2_GRAN_COF1',\n'PHY_SEXCHK2_FAM_COF1',\n'PHY_SEXCHK2_FRI_COF1',\n'PHY_SEXCHK2_PAID_COF1',\n'PHY_SEXCHK2_OTSP_COF1',\n'PHY_LIVCHK2_PAR_COF1',\n'PHY_LIVCHK2_SIB_COF1',\n'PHY_LIVCHK2_CHILD_COF1',\n'PHY_LIVCHK2_GRAN_COF1',\n'PHY_LIVCHK2_FAM_COF1',\n'PHY_LIVCHK2_FRI_COF1',\n'PHY_LIVCHK2_PAID_COF1',\n'PHY_LIVCHK2_OTSP_COF1',\n'PHY_SEXWPN2_PAR_COF1',\n'PHY_SEXWPN2_SIB_COF1',\n'PHY_SEXWPN2_CHILD_COF1',\n'PHY_SEXWPN2_GRAN_COF1',\n'PHY_SEXWPN2_FAM_COF1',\n'PHY_SEXWPN2_FRI_COF1',\n'PHY_SEXWPN2_PAID_COF1',\n'PHY_SEXWPN2_OTSP_COF1',\n'PHY_LIVWPN2_PAR_COF1',\n'PHY_LIVWPN2_SIB_COF1',\n'PHY_LIVWPN2_CHILD_COF1',\n'PHY_LIVWPN2_GRAN_COF1',\n'PHY_LIVWPN2_FAM_COF1',\n'PHY_LIVWPN2_FRI_COF1',\n'PHY_LIVWPN2_PAID_COF1',\n'PHY_LIVWPN2_OTSP_COF1',\n'FIN_SEXMNY2_PAR_COF1',\n'FIN_SEXMNY2_SIB_COF1',\n'FIN_SEXMNY2_CHILD_COF1',\n'FIN_SEXMNY2_GRAN_COF1',\n'FIN_SEXMNY2_FAM_COF1',\n'FIN_SEXMNY2_FRI_COF1',\n'FIN_SEXMNY2_PAID_COF1',\n'FIN_SEXMNY2_OTSP_COF1',\n'FIN_LIVMNY2_PAR_COF1',\n'FIN_LIVMNY2_SIB_COF1',\n'FIN_LIVMNY2_CHILD_COF1',\n'FIN_LIVMNY2_GRAN_COF1',\n'FIN_LIVMNY2_FAM_COF1',\n'FIN_LIVMNY2_FRI_COF1',\n'FIN_LIVMNY2_PAID_COF1',\n'FIN_LIVMNY2_OTSP_COF1',\n'FIN_SEXPOS2_PAR_COF1',\n'FIN_SEXPOS2_SIB_COF1',\n'FIN_SEXPOS2_CHILD_COF1',\n'FIN_SEXPOS2_GRAN_COF1',\n'FIN_SEXPOS2_FAM_COF1',\n'FIN_SEXPOS2_FRI_COF1',\n'FIN_SEXPOS2_PAID_COF1',\n'FIN_SEXPOS2_OTSP_COF1',\n'FIN_LIVPOS2_PAR_COF1',\n'FIN_LIVPOS2_SIB_COF1',\n'FIN_LIVPOS2_CHILD_COF1',\n'FIN_LIVPOS2_GRAN_COF1',\n'FIN_LIVPOS2_FAM_COF1',\n'FIN_LIVPOS2_FRI_COF1',\n'FIN_LIVPOS2_PAID_COF1',\n'FIN_LIVPOS2_OTSP_COF1',\n'FIN_SEXPRV2_PAR_COF1',\n'FIN_SEXPRV2_SIB_COF1',\n'FIN_SEXPRV2_CHILD_COF1',\n'FIN_SEXPRV2_GRAN_COF1',\n'FIN_SEXPRV2_FAM_COF1',\n'FIN_SEXPRV2_FRI_COF1',\n'FIN_SEXPRV2_PAID_COF1',\n'FIN_SEXPRV2_OTSP_COF1',\n'FIN_LIVPRV2_PAR_COF1',\n'FIN_LIVPRV2_SIB_COF1',\n'FIN_LIVPRV2_CHILD_COF1',\n'FIN_LIVPRV2_GRAN_COF1',\n'FIN_LIVPRV2_FAM_COF1',\n'FIN_LIVPRV2_FRI_COF1',\n'FIN_LIVPRV2_PAID_COF1',\n'FIN_LIVPRV2_OTSP_COF1',\n'INTRO_2_COFI',\n'INTRO_3_COF1',\n'INTRO_4_COF1',\n'CODE_WORD_COF1'],\n'SLE':[\n'SLE_QLTY_COF1',\n'SLS_HOUR_COF1',\n'SLE_30MIN_COF1',\n'SLE_30DUR_COF1',\n'SLE_30INTRF_COF1',\n'SLE_MIDFQ_COF1',\n'SLE_MIDDUR_COF1',\n'SLE_MIDINTRF_COF1',\n'SLE_STAYFQ_COF1',\n'SLE_STAYDUR_COF1',\n'SLE_STAYINTRF_COF1',\n'SLE_DREAM_COF1',\n'SLE_DRMDUR_COF1',\n'SLE_LEGS_COF1',\n'SLE_LGURG_COF1',\n'SLE_LGDUR_COF1',\n'SLE_LGFQ_COF1',\n'SLE_LGIMPR_COF1',\n'SLE_LGEVE_COF1',\n'SNO_SNORE_COF1',\n'SNO_STOPBREATH_COF1']\n}\n\n  for(var key in sections) {\n    var rcount=0\n    var qcount=0\n    var arr=sections[key]\n    for(var i=0; i<arr.length; i++ ) {\n      var j=$(stage+arr[i])\n      if(j.isNull().value()) continue\n      qcount++      \n      rcount+=j.any('REFUSED').value()?1:0\n    }\n    if(0==qcount) {\n      str.push(key+':100')\n    } else {\n      var perc=100.0*rcount/qcount      \n      if(0<perc && 100>perc && 0!=(perc-Math.floor(perc))) {        \n        perc=perc.toFixed(3)\n      }\n      str.push(key+':'+perc)\n    }  \n  }\n\n  res=newValue('{'+str.join(',')+'}','text')\n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_qac_osea", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$this('data_qac_osea').isNull().and(\n  $this('stage_contraindicated_osea').eq(0),\n  $this('stage_skip_osea').isNull()\n).value() ? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_missing_osea", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$('clsa-dcs-f1.OSOnly:QuestionnaireRun.user').whenNull(\n  $group('Admin.Action.stage','OSOnly','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_technician_osonly", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var action=$group('Admin.Action.stage','OSOnly','Admin.Action.actionType').asSequence()\nvar res=$group('Admin.Action.stage','OSOnly','Admin.Action.eventReason').asSequence().filter(function(v,i){\n  return action.indexOf('SKIP')==i\n  }).last()\nif(res.isNull().not().value()) {\n  res=newValue(res.value().slice(14),'text')  \n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_skip_osonly", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$group('clsa-dcs-f1.Participants:Admin.StageInstance.stage','OSOnly',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value() \n? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_contraindicated_osonly", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var stage='clsa-dcs-f1.OSOnly:'\nvar p=$(stage+'QuestionnaireMetric.missingCount').asSequence()\nvar q=$(stage+'QuestionnaireMetric.questionCount').asSequence()\nvar res=null\nif(p.isNull().and(q.isNull()).not().value() && 0!=q.sum()) {\n  var str=[]\n  str.push(\n    'complete:'+\n    Math.round(q.sum().minus(p.sum()).multiply(100).div(q.sum()).value()))\n\nvar sections={\n'ORH':[\n'ORH_HLTH_COF1',\n'ORH_TEETH_COF1',\n'ORH_TETH20_COF1',\n'ORH_DENT_COF1',\n'ORH_DNUSE_COF1',\n'ORH_UNCEAT_COF1',\n'ORH_EXP_DNB_COF1',\n'ORH_DNVST_COF1',\n'ORH_WYNDN_COF1',\n'ORH_TYPINS_COF1',\n'ORH_COST_COF1',\n'ORH_PRBHT_COF1',\n'ORH_BRUSDN_COF1',\n'ORH_WHO_COF1',\n'ORH_OFTN_COF1'],\n'SLE':[\n'SLE_QLTY_COF1',\n'SLS_HOUR_COF1',\n'SLE_30MIN_COF1',\n'SLE_30DUR_COF1',\n'SLE_30INTRF_COF1',\n'SLE_MIDFQ_COF1',\n'SLE_MIDDUR_COF1',\n'SLE_MIDINTRF_COF1',\n'SLE_STAYFQ_COF1',\n'SLE_STAYDUR_COF1',\n'SLE_STAYINTRF_COF1',\n'SLE_DREAM_COF1',\n'SLE_DRMDUR_COF1',\n'SLE_LEGS_COF1',\n'SLE_LGURG_COF1',\n'SLE_LGDUR_COF1',\n'SLE_LGFQ_COF1',\n'SLE_LGIMPR_COF1',\n'SLE_LGEVE_COF1',\n'SNO_SNORE_COF1',\n'SNO_STOPBREATH_COF1']\n}\n\n  for(var key in sections) {\n    var rcount=0\n    var qcount=0\n    var arr=sections[key]\n    for(var i=0; i<arr.length; i++ ) {\n      var j=$(stage+arr[i])\n      if(j.isNull().value()) continue\n      qcount++      \n      rcount+=j.any('REFUSED').value()?1:0\n    }\n    if(0==qcount) {\n      str.push(key+':100')\n    } else {\n      var perc=100.0*rcount/qcount      \n      if(0<perc && 100>perc && 0!=(perc-Math.floor(perc))) {        \n        perc=perc.toFixed(3)\n      }\n      str.push(key+':'+perc)\n    }  \n  }\n\n  res=newValue('{'+str.join(',')+'}','text')\n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_qac_osonly", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$this('data_qac_osonly').isNull().and(\n  $this('stage_contraindicated_osonly').eq(0),\n  $this('stage_skip_osonly').isNull()\n).value() ? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_missing_osonly", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$('clsa-dcs-f1.HeightWeight:QuestionnaireRun.user').whenNull(\n  $group('Admin.Action.stage','HeightWeight','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_technician_height_weight", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var action=$group('Admin.Action.stage','HeightWeight','Admin.Action.actionType').asSequence()\nvar res=$group('Admin.Action.stage','HeightWeight','Admin.Action.eventReason').asSequence().filter(function(v,i){\n  return action.indexOf('SKIP')==i\n  }).last()\nif(res.isNull().not().value()) {\n  res=newValue(res.value().slice(14),'text')  \n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_skip_height_weight", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var res=null\nvar d=$('clsa-dcs-f1.NeuropsychologicalBattery:STP_DOTREC_COF1')\nvar w=$('clsa-dcs-f1.NeuropsychologicalBattery:STP_WORREC_COF1')\nvar c=$('clsa-dcs-f1.NeuropsychologicalBattery:STP_COLREC_COF1')\nvar f=$('clsa-dcs-f1.NeuropsychologicalBattery:FAS_FREC_COF1')\nvar a=$('clsa-dcs-f1.NeuropsychologicalBattery:FAS_AREC_COF1')\nvar s=$('clsa-dcs-f1.NeuropsychologicalBattery:FAS_SREC_COF1')\nif(!d.isNull().and(w.isNull(),c.isNull,f.isNull(),a.isNull(),s.isNull()).value()) {\n  var str=[]\n  str.push('filesize_dot:'+(d.isNull().value()?'0':d.length().value()))\n  str.push('filesize_wor:'+(w.isNull().value()?'0':w.length().value()))\n  str.push('filesize_col:'+(c.isNull().value()?'0':c.length().value()))\n  str.push('filesize_f:'+(f.isNull().value()?'0':f.length().value()))\n  str.push('filesize_a:'+(a.isNull().value()?'0':a.length().value()))\n  str.push('filesize_s:'+(s.isNull().value()?'0':s.length().value()))    \n  res=newValue('{'+str.join(',')+'}','text')\n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_qac_cognition_recording", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$this('data_qac_cognition_recording').isNull().and(\n  $this('stage_contraindicated_cognition_recording').eq(0),\n  $this('stage_skip_cognition_recording').isNull()\n).value() ? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_missing_cognition_recording", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$this('stage_technician_neuropsychological_battery')"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_technician_cognition_recording", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$this('stage_contraindicated_neuropsychological_battery')"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_contraindicated_cognition_recording", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$this('stage_skip_neuropsychological_battery')"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_skip_cognition_recording", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }
    ]
  }, 
  "datasourceName": "Quality_Control", 
  "from": [
    "clsa-dcs-f1.Participants", 
    "clsa-dcs-f1.BloodPressure", 
    "clsa-dcs-f1.CognitiveTest", 
    "clsa-dcs-images-f1.CarotidIntima", 
    "clsa-dcs-images-f1.DualHipBoneDensity", 
    "clsa-dcs-f1.ECG", 
    "clsa-dcs-images-f1.ForearmBoneDensity", 
    "clsa-dcs-f1.GripStrength", 
    "clsa-dcs-f1.Hearing", 
    "clsa-dcs-images-f1.LateralBoneDensity", 
    "clsa-dcs-images-f1.RetinalScanLeft", 
    "clsa-dcs-images-f1.RetinalScanRight", 
    "clsa-dcs-f1.Spirometry", 
    "clsa-dcs-f1.Tonometer", 
    "clsa-dcs-f1.Weight", 
    "clsa-dcs-images-f1.WholeBodyBoneDensity", 
    "clsa-dcs-f1.StandingHeight", 
    "clsa-dcs-images-f1.SpineBoneDensity", 
    "clsa-dcs-f1.ChairRise", 
    "clsa-dcs-f1.HipsWaist", 
    "clsa-dcs-f1.TUG", 
    "clsa-dcs-f1.StandingBalance", 
    "clsa-dcs-f1.NeuropsychologicalBattery", 
    "clsa-dcs-f1.VisionAcuity", 
    "clsa-dcs-f1.4mWalk", 
    "clsa-dcs-f1.HearingQuestionnaire", 
    "clsa-dcs-f1.FunctionalStatus", 
    "clsa-dcs-f1.DiseaseSymptoms", 
    "clsa-dcs-f1.Consent", 
    "clsa-dcs-f1.ContraIndications", 
    "clsa-dcs-f1.GenHealth", 
    "clsa-dcs-f1.Urine", 
    "clsa-dcs-f1.QuestionnaireBoneDensity", 
    "clsa-dcs-f1.Blood", 
    "clsa-dcs-f1.Blood2", 
    "clsa-dcs-f1.Deviation_AE_CRF", 
    "clsa-dcs-f1.BodyCompositionWeight", 
    "clsa-dcs-f1.OSEA", 
    "clsa-dcs-f1.OSOnly", 
    "clsa-dcs-f1.QualityAssuranceIH", 
    "clsa-dcs-f1.NeuropsychologicalBatteryScoring", 
    "clsa-dcs-f1.HeightWeight"
  ], 
  "name": "QC_F1"
}
