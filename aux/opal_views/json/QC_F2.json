{
  "Magma.VariableListViewDto.view": {
    "variables": [
      {
        "attributes": [
          {
            "name": "stage", 
            "value": "Spirometry"
          }, 
          {
            "name": "derivedFrom", 
            "namespace": "opal", 
            "value": "/datasource/clsa-dcs/table/Spirometry/variable/InstrumentRun.user"
          }, 
          {
            "name": "script", 
            "value": "$('clsa-dcs-f2.Spirometry:InstrumentRun.user').whenNull(\n  $group('Admin.Action.stage','Spirometry','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_technician_spirometry", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$('Admin.ApplicationConfiguration.siteName').map({\n  'BritishColumbia':'University of BC DCS',\n  'British Columbia':'University of BC DCS',\n  'Calgary':'Calgary DCS',\n  'Dalhousie':'Dalhousie DCS',\n  'Hamilton':'Hamilton DCS',\n  'Manitoba':'Manitoba DCS',\n  'McGill':'McGill DCS',\n  'McMaster':'Hamilton DCS',\n  'Memorial':'Memorial DCS',\n  'Memorial University':'Memorial DCS',\n  'Ottawa':'Ottawa DCS',\n  'Sherbrooke':'Sherbrooke DCS',\n  'Simon Fraser':'Simon Fraser DCS',\n  'SimonFraser':'Simon Fraser DCS',\n  'UniversityofBC':'University of BC DCS',\n  'University of Manitoba':'Manitoba DCS',\n  'University of Victoria':'Victoria DCS',\n  'Victoria':'Victoria DCS'},null) "
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "interview_site", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var stage=newValue($group('clsa-dcs-f2.Participants:Admin.StageInstance.stage','Spirometry','Admin.StageInstance.lastState').asSequence().last(),'text')\n$this('data_qac_spirometry').isNull().and(stage.any('Skipped','NotApplicable').not()).value() ? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_missing_spirometry", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var v1=$group('Admin.Action.stage','Spirometry','Admin.Action.actionType').asSequence()\nvar v2=$group('Admin.Action.stage','Spirometry','Admin.Action.eventReason').asSequence()\nvar res=null\nvar arr=[]  // string array of events\nfor(var i=0; i<v1.size(); i++) {\n  if(v1.valueAt(i).any('SKIP').not().value() ||\n     v2.valueAt(i).isNull().value()) continue\n  var key=v2.valueAt(i).value().slice(14)\n  if(-1==arr.indexOf(key))\n    arr.push(key)\n}\nif(undefined!==arr && 0<arr.length) {\n  res=newValue(arr.pop(),'text')  \n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_skip_spirometry", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$group('clsa-dcs-f2.Participants:Admin.StageInstance.stage','Spirometry',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value() \n? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_contraindicated_spirometry", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "derivedFrom", 
            "namespace": "opal", 
            "value": "/datasource/clsa-dcs/table/Participants/variable/Admin.Interview.startDate"
          }, 
          {
            "name": "script", 
            "value": "$('Admin.Interview.startDate')"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "interview_start_date", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "date"
      }, 
      {
        "attributes": [
          {
            "name": "identifier", 
            "value": "true"
          }, 
          {
            "name": "derivedFrom", 
            "namespace": "opal", 
            "value": "/datasource/clsa-dcs/table/Participants/variable/Admin.Participant.barcode"
          }, 
          {
            "name": "script", 
            "value": "$('Admin.Participant.barcode')"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "interview_barcode", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var res=null\nif( $group(\n  'clsa-dcs-f2.Participants:Admin.StageInstance.stage',\n  'Spirometry',\n  'Admin.StageInstance.lastState').asSequence().last().any('Skipped','NotApplicable').not().value() ) {\n  res=$group(\n    'clsa-dcs-f2.Participants:Admin.StageInstance.stage',\n    'Spirometry',\n    'Admin.StageInstance.duration').asSequence().last()\n  if(res.isNull().not().value()) {\n    res=Math.round(res.div(60.0).multiply(10.0).value()) / 10.0\n  }\n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_duration_spirometry", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "decimal"
      }, 
      {
        "attributes": [
          {
            "name": "stage", 
            "value": "Spirometry"
          }, 
          {
            "name": "validation", 
            "value": "[IntegrityCheck-ERROR]"
          }, 
          {
            "name": "captureMethod", 
            "value": "AUTOMATIC"
          }, 
          {
            "name": "isManualCaptureAllowed", 
            "value": "true"
          }, 
          {
            "name": "vendorName", 
            "value": "QUALITY_GRADE"
          }, 
          {
            "name": "derivedFrom", 
            "namespace": "opal", 
            "value": "/datasource/clsa-dcs/table/Spirometry/variable/OUTPUT_QUALITY_GRADE"
          }, 
          {
            "name": "script", 
            "value": "var res=$('clsa-dcs-f2.Spirometry:OUTPUT_QUALITY_GRADE')\nif(!res.isNull().value()) {\n  res=newValue('{grade:'+res.value()+'}','text')\n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_qac_spirometry", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$('clsa-dcs-f2.GripStrength:InstrumentRun.user').whenNull(\n  $group('Admin.Action.stage','GripStrength','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_technician_grip_strength", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$group('clsa-dcs-f2.Participants:Admin.StageInstance.stage','GripStrength',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value() \n? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_contraindicated_grip_strength", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var v1=$group('Admin.Action.stage','GripStrength','Admin.Action.actionType').asSequence()\nvar v2=$group('Admin.Action.stage','GripStrength','Admin.Action.eventReason').asSequence()\nvar res=null\nvar arr=[]  // string array of events\nfor(var i=0; i<v1.size(); i++) {\n  if(v1.valueAt(i).any('SKIP').not().value() ||\n     v2.valueAt(i).isNull().value()) continue\n  var key=v2.valueAt(i).value().slice(14)\n  if(-1==arr.indexOf(key))\n    arr.push(key)\n}\nif(undefined!==arr && 0<arr.length) {\n  res=newValue(arr.pop(),'text')  \n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_skip_grip_strength", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var stage=newValue($group('clsa-dcs-f2.Participants:Admin.StageInstance.stage','GripStrength','Admin.StageInstance.lastState').asSequence().last(),'text')\n$this('data_qac_grip_strength').isNull().and(stage.any('Skipped','NotApplicable').not()).value() ? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_missing_grip_strength", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var res=null\nif($('clsa-dcs-f2.GripStrength:Measure.RES_TRIAL_MAX').isNull().not().value()) {\n  res=newValue('{trial_count:'+$('clsa-dcs-f2.GripStrength:Measure.RES_TRIAL_MAX').size()+'}','text')\n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_qac_grip_strength", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var res=null\nif( $group(\n  'clsa-dcs-f2.Participants:Admin.StageInstance.stage',\n  'GripStrength',\n  'Admin.StageInstance.lastState').asSequence().last().any('Skipped','NotApplicable').not().value() ) {\n  res=$group(\n    'clsa-dcs-f2.Participants:Admin.StageInstance.stage',\n    'GripStrength',\n    'Admin.StageInstance.duration').asSequence().last()\n  if(res.isNull().not().value()) {\n    res=Math.round(res.div(60.0).multiply(10.0).value()) / 10.0\n  }\n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_duration_grip_strength", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "decimal"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$('clsa-dcs-f2.BloodPressure:InstrumentRun.user').whenNull(\n  $group('Admin.Action.stage','BloodPressure','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_technician_blood_pressure", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$group('clsa-dcs-f2.Participants:Admin.StageInstance.stage','BloodPressure',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value() \n? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_contraindicated_blood_pressure", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var v1=$group('Admin.Action.stage','BloodPressure','Admin.Action.actionType').asSequence()\nvar v2=$group('Admin.Action.stage','BloodPressure','Admin.Action.eventReason').asSequence()\nvar res=null\nvar arr=[]  // string array of events\nfor(var i=0; i<v1.size(); i++) {\n  if(v1.valueAt(i).any('SKIP').not().value() ||\n     v2.valueAt(i).isNull().value()) continue\n  var key=v2.valueAt(i).value().slice(14)\n  if(-1==arr.indexOf(key))\n    arr.push(key)\n}\nif(undefined!==arr && 0<arr.length) {\n  res=newValue(arr.pop(),'text')  \n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_skip_blood_pressure", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var stage=newValue($group('clsa-dcs-f2.Participants:Admin.StageInstance.stage','BloodPressure','Admin.StageInstance.lastState').asSequence().last(),'text')\n$this('data_qac_blood_pressure').isNull().and(stage.any('Skipped','NotApplicable').not()).value() ? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_missing_blood_pressure", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var res=null\nif($('clsa-dcs-f2.BloodPressure:RES_AVG_COUNT').isNull().not().value()) {\n  res=newValue('{trial_count:'+$('clsa-dcs-f2.BloodPressure:RES_AVG_COUNT')+'}','text')\n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_qac_blood_pressure", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var res=null\nif( $group(\n  'clsa-dcs-f2.Participants:Admin.StageInstance.stage',\n  'BloodPressure',\n  'Admin.StageInstance.lastState').asSequence().last().any('Skipped','NotApplicable').not().value() ) {\n  res=$group(\n    'clsa-dcs-f2.Participants:Admin.StageInstance.stage',\n    'BloodPressure',\n    'Admin.StageInstance.duration').asSequence().last()\n  if(res.isNull().not().value()) {\n    res=Math.round(res.div(60.0).multiply(10.0).value()) / 10.0\n  }\n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_duration_blood_pressure", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "decimal"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$('clsa-dcs-f2.ECG:InstrumentRun.user').whenNull(\n  $group('Admin.Action.stage','ECG','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_technician_ecg", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$group('clsa-dcs-f2.Participants:Admin.StageInstance.stage','ECG',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value() \n? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_contraindicated_ecg", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var v1=$group('Admin.Action.stage','ECG','Admin.Action.actionType').asSequence()\nvar v2=$group('Admin.Action.stage','ECG','Admin.Action.eventReason').asSequence()\nvar res=null\nvar arr=[]  // string array of events\nfor(var i=0; i<v1.size(); i++) {\n  if(v1.valueAt(i).any('SKIP').not().value() ||\n     v2.valueAt(i).isNull().value()) continue\n  var key=v2.valueAt(i).value().slice(14)\n  if(-1==arr.indexOf(key))\n    arr.push(key)\n}\nif(undefined!==arr && 0<arr.length) {\n  res=newValue(arr.pop(),'text')  \n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_skip_ecg", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var stage=newValue($group('clsa-dcs-f2.Participants:Admin.StageInstance.stage','ECG','Admin.StageInstance.lastState').asSequence().last(),'text')\n$this('data_qac_ecg').isNull().and(stage.any('Skipped','NotApplicable').not()).value() ? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_missing_ecg", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var f=$('clsa-dcs-f2.ECG:RES_XML_FILE')\nvar q=$('clsa-dcs-f2.ECG:RES_DIAGNOSIS')\nvar res=null\nif(f.isNull().not().value()) {\n  var str='{file_size:'+f.length()+',quality:'\n  if(q.lowerCase().matches(/poor data quality/).value()) {\n    str += '0}'\n  } else {\n    str += '1}'  \n  }\n  res = newValue(str,'text')\n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_qac_ecg", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var res=null\nif( $group(\n  'clsa-dcs-f2.Participants:Admin.StageInstance.stage',\n  'ECG',\n  'Admin.StageInstance.lastState').asSequence().last().any('Skipped','NotApplicable').not().value() ) {\n  res=$group(\n    'clsa-dcs-f2.Participants:Admin.StageInstance.stage',\n    'ECG',\n    'Admin.StageInstance.duration').asSequence().last()\n  if(res.isNull().not().value()) {\n    res=Math.round(res.div(60.0).multiply(10.0).value()) / 10.0\n  }\n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_duration_ecg", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "decimal"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$('clsa-dcs-f2.CognitiveTest:InstrumentRun.user').whenNull(\n  $group('Admin.Action.stage','CognitiveTest','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_technician_cognitive_test", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$group('clsa-dcs-f2.Participants:Admin.StageInstance.stage','CognitiveTest',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value() \n? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_contraindicated_cognitive_test", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var v1=$group('Admin.Action.stage','CognitiveTest','Admin.Action.actionType').asSequence()\nvar v2=$group('Admin.Action.stage','CognitiveTest','Admin.Action.eventReason').asSequence()\nvar res=null\nvar arr=[]  // string array of events\nfor(var i=0; i<v1.size(); i++) {\n  if(v1.valueAt(i).any('SKIP').not().value() ||\n     v2.valueAt(i).isNull().value()) continue\n  var key=v2.valueAt(i).value().slice(14)\n  if(-1==arr.indexOf(key))\n    arr.push(key)\n}\nif(undefined!==arr && 0<arr.length) {\n  res=newValue(arr.pop(),'text')  \n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_skip_cognitive_test", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var stage=newValue($group('clsa-dcs-f2.Participants:Admin.StageInstance.stage','CognitiveTest','Admin.StageInstance.lastState').asSequence().last(),'text')\n$this('data_qac_cognitive_test').isNull().and(stage.any('Skipped','NotApplicable').not()).value() ? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_missing_cognitive_test", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var res=$('clsa-dcs-f2.CognitiveTest:RES_RESULT_FILE')\nif(res.isNull().not().value()) {\n  res = newValue('{filesize:'+res.length()+'}','text')\n}  \nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_qac_cognitive_test", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var res=null\nif( $group(\n  'clsa-dcs-f2.Participants:Admin.StageInstance.stage',\n  'CognitiveTest',\n  'Admin.StageInstance.lastState').asSequence().last().any('Skipped','NotApplicable').not().value() ) {\n  res=$group(\n    'clsa-dcs-f2.Participants:Admin.StageInstance.stage',\n    'CognitiveTest',\n    'Admin.StageInstance.duration').asSequence().last()\n  if(res.isNull().not().value()) {\n    res=Math.round(res.div(60.0).multiply(10.0).value()) / 10.0\n  }\n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_duration_cognitive_test", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "decimal"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$('clsa-dcs-f2.Hearing:InstrumentRun.user').whenNull(\n  $group('Admin.Action.stage','Hearing','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_technician_hearing", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$group('clsa-dcs-f2.Participants:Admin.StageInstance.stage','Hearing',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value() \n? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_contraindicated_hearing", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var v1=$group('Admin.Action.stage','Hearing','Admin.Action.actionType').asSequence()\nvar v2=$group('Admin.Action.stage','Hearing','Admin.Action.eventReason').asSequence()\nvar res=null\nvar arr=[]  // string array of events\nfor(var i=0; i<v1.size(); i++) {\n  if(v1.valueAt(i).any('SKIP').not().value() ||\n     v2.valueAt(i).isNull().value()) continue\n  var key=v2.valueAt(i).value().slice(14)\n  if(-1==arr.indexOf(key))\n    arr.push(key)\n}\nif(undefined!==arr && 0<arr.length) {\n  res=newValue(arr.pop(),'text')  \n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_skip_hearing", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var stage=newValue($group('clsa-dcs-f2.Participants:Admin.StageInstance.stage','Hearing','Admin.StageInstance.lastState').asSequence().last(),'text')\n$this('data_qac_hearing').isNull().and(stage.any('Skipped','NotApplicable').not()).value() ? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_missing_hearing", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var side = ['RIGHT','LEFT']\nvar freq = ['1KT','500','1K','2K','3K','4K','6K','8K']\nvar count = {RIGHT:0,LEFT:0}\nfor(var i=0;i<side.length;i++) {\n  var s = side[i]\n  var v = 'clsa-dcs.Hearing:RES_' + s + '_'\n  for(var j=0;j<freq.length;j++) {\n    var f = v + freq[j]\n    if ($(f).isNull().not().or($(f + '_ERR').isNull().not()).value()) count[s]++;\n  }\n}\nres = (0 == count.RIGHT && 0 == count.LEFT && \n  $('clsa-dcs.Hearing:RES_TEST_ID').isNull().and(\n    $('clsa-dcs.Hearing:RES_TEST_DATETIME').isNull()).value()) ?\n      null : newValue('{freq_left:'+count.LEFT+',freq_right:'+count.RIGHT+'}','text')"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_qac_hearing", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var res=null\nif( $group(\n  'clsa-dcs-f2.Participants:Admin.StageInstance.stage',\n  'Hearing',\n  'Admin.StageInstance.lastState').asSequence().last().any('Skipped','NotApplicable').not().value() ) {\n  res=$group(\n    'clsa-dcs-f2.Participants:Admin.StageInstance.stage',\n    'Hearing',\n    'Admin.StageInstance.duration').asSequence().last()\n  if(res.isNull().not().value()) {\n    res=Math.round(res.div(60.0).multiply(10.0).value()) / 10.0\n  }\n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_duration_hearing", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "decimal"
      }
    ]
  }, 
  "datasourceName": "Quality_Control", 
  "from": [
    "clsa-dcs-f2.Participants", 
    "clsa-dcs-f2.BloodPressure", 
    "clsa-dcs-f2.CognitiveTest", 
    "clsa-dcs-images-f2.CarotidIntima", 
    "clsa-dcs-images-f2.DualHipBoneDensity", 
    "clsa-dcs-f2.ECG", 
    "clsa-dcs-images-f2.ForearmBoneDensity", 
    "clsa-dcs-f2.GripStrength", 
    "clsa-dcs-f2.Hearing", 
    "clsa-dcs-images-f2.LateralBoneDensity", 
    "clsa-dcs-images-f2.RetinalScanLeft", 
    "clsa-dcs-images-f2.RetinalScanRight", 
    "clsa-dcs-f2.Spirometry", 
    "clsa-dcs-f2.Tonometer", 
    "clsa-dcs-f2.Weight", 
    "clsa-dcs-images-f2.WholeBodyBoneDensity", 
    "clsa-dcs-f2.StandingHeight", 
    "clsa-dcs-images-f2.SpineBoneDensity"
  ], 
  "name": "QC_F2", 
  "where": "$lastupdate().before(newValue('BEFORE_DATE','date')).and($lastupdate().after(newValue('AFTER_DATE','date')))"
}
