{
  "Magma.VariableListViewDto.view": {
    "variables": [
      {
        "attributes": [
          {
            "name": "stage", 
            "value": "Spirometry"
          }, 
          {
            "name": "derivedFrom", 
            "namespace": "opal", 
            "value": "/datasource/clsa-dcs/table/Spirometry/variable/InstrumentRun.user"
          }, 
          {
            "name": "script", 
            "value": "$('clsa-dcs-f2.Spirometry:InstrumentRun.user').whenNull(\n  $group('Admin.Action.stage','Spirometry','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_technician_spirometry", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$('Admin.ApplicationConfiguration.siteName').map({\n  'BritishColumbia':'University of BC DCS',\n  'British Columbia':'University of BC DCS',\n  'Calgary':'Calgary DCS',\n  'Dalhousie':'Dalhousie DCS',\n  'Hamilton':'Hamilton DCS',\n  'Manitoba':'Manitoba DCS',\n  'McGill':'McGill DCS',\n  'McMaster':'Hamilton DCS',\n  'Memorial':'Memorial DCS',\n  'Memorial University':'Memorial DCS',\n  'Ottawa':'Ottawa DCS',\n  'Sherbrooke':'Sherbrooke DCS',\n  'Simon Fraser':'Simon Fraser DCS',\n  'SimonFraser':'Simon Fraser DCS',\n  'UniversityofBC':'University of BC DCS',\n  'University of Manitoba':'Manitoba DCS',\n  'University of Victoria':'Victoria DCS',\n  'Victoria':'Victoria DCS'},null) "
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "interview_site", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var stage=newValue($group('clsa-dcs-f2.Participants:Admin.StageInstance.stage','Spirometry','Admin.StageInstance.lastState').asSequence().last(),'text')\n$this('data_qac_spirometry').isNull().and(stage.any('Skipped','NotApplicable').not()).value() ? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_missing_spirometry", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "// if a dcs by phone visit, then the skip will be \"ModifiedVisit\"\nvar res=null\nif($('clsa-dcs-f2.Participants:DCS_PHONE').isNull().not().value()){\n  res=newValue('ModifiedVisit','text')\n} else {\n  var v1=$group('Admin.Action.stage','Spirometry','Admin.Action.actionType').asSequence()\n  var v2=$group('Admin.Action.stage','Spirometry','Admin.Action.eventReason').asSequence()\n\n  var arr=[]  // string array of events\n  for(var i=0; i<v1.size(); i++) {\n    if(v1.valueAt(i).any('SKIP').not().value() ||\n       v2.valueAt(i).isNull().value()) continue\n    var key=v2.valueAt(i).value().slice(14)\n    if(-1==arr.indexOf(key))\n      arr.push(key)\n  }\n  if(undefined!==arr && 0<arr.length) {\n    res=newValue(arr.pop(),'text')  \n  }\n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_skip_spirometry", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$('clsa-dcs-f2.Participants:DCS_PHONE').isNull().and(\n  $group('clsa-dcs-f2.Participants:Admin.StageInstance.stage','Spirometry',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable')).value() \n? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_contraindicated_spirometry", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "derivedFrom", 
            "namespace": "opal", 
            "value": "/datasource/clsa-dcs/table/Participants/variable/Admin.Interview.startDate"
          }, 
          {
            "name": "script", 
            "value": "$('Admin.Interview.startDate')"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "interview_start_date", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "date"
      }, 
      {
        "attributes": [
          {
            "name": "identifier", 
            "value": "true"
          }, 
          {
            "name": "derivedFrom", 
            "namespace": "opal", 
            "value": "/datasource/clsa-dcs/table/Participants/variable/Admin.Participant.barcode"
          }, 
          {
            "name": "script", 
            "value": "$('Admin.Participant.barcode')"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "interview_barcode", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "stage", 
            "value": "Spirometry"
          }, 
          {
            "name": "validation", 
            "value": "[IntegrityCheck-ERROR]"
          }, 
          {
            "name": "captureMethod", 
            "value": "AUTOMATIC"
          }, 
          {
            "name": "isManualCaptureAllowed", 
            "value": "true"
          }, 
          {
            "name": "vendorName", 
            "value": "QUALITY_GRADE"
          }, 
          {
            "name": "derivedFrom", 
            "namespace": "opal", 
            "value": "/datasource/clsa-dcs/table/Spirometry/variable/OUTPUT_QUALITY_GRADE"
          }, 
          {
            "name": "script", 
            "value": "var res=$('clsa-dcs-f2.Spirometry:OUTPUT_QUALITY_GRADE')\nif(!res.isNull().value()) {\n  res=newValue('{grade:'+res.value()+'}','text')\n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_qac_spirometry", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$('clsa-dcs-f2.GripStrength:InstrumentRun.user').whenNull(\n  $group('Admin.Action.stage','GripStrength','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_technician_grip_strength", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$('clsa-dcs-f2.Participants:DCS_PHONE').isNull().and(\n  $group('clsa-dcs-f2.Participants:Admin.StageInstance.stage','GripStrength',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable')).value() \n? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_contraindicated_grip_strength", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "// if a dcs by phone visit, then the skip will be \"ModifiedVisit\"\nvar res=null\nif($('clsa-dcs-f2.Participants:DCS_PHONE').isNull().not().value()){\n  res=newValue('ModifiedVisit','text')\n} else {\n  var v1=$group('Admin.Action.stage','GripStrength','Admin.Action.actionType').asSequence()\n  var v2=$group('Admin.Action.stage','GripStrength','Admin.Action.eventReason').asSequence()\n\n  var arr=[]  // string array of events\n  for(var i=0; i<v1.size(); i++) {\n    if(v1.valueAt(i).any('SKIP').not().value() ||\n       v2.valueAt(i).isNull().value()) continue\n    var key=v2.valueAt(i).value().slice(14)\n    if(-1==arr.indexOf(key))\n      arr.push(key)\n  }\n  if(undefined!==arr && 0<arr.length) {\n    res=newValue(arr.pop(),'text')  \n  }\n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_skip_grip_strength", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var stage=newValue($group('clsa-dcs-f2.Participants:Admin.StageInstance.stage','GripStrength','Admin.StageInstance.lastState').asSequence().last(),'text')\n$this('data_qac_grip_strength').isNull().and(stage.any('Skipped','NotApplicable').not()).value() ? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_missing_grip_strength", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var res=null\nif($('clsa-dcs-f2.GripStrength:Measure.RES_TRIAL_MAX').isNull().not().value()) {\n  res=newValue('{trial_count:'+$('clsa-dcs-f2.GripStrength:Measure.RES_TRIAL_MAX').size()+'}','text')\n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_qac_grip_strength", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$('clsa-dcs-f2.BloodPressure:InstrumentRun.user').whenNull(\n  $group('Admin.Action.stage','BloodPressure','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_technician_blood_pressure", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$('clsa-dcs-f2.Participants:DCS_PHONE').isNull().and(\n  $group('clsa-dcs-f2.Participants:Admin.StageInstance.stage','BloodPressure',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable')).value() \n? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_contraindicated_blood_pressure", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "// if a dcs by phone visit, then the skip will be \"ModifiedVisit\"\nvar res=null\nif($('clsa-dcs-f2.Participants:DCS_PHONE').isNull().not().value()){\n  res=newValue('ModifiedVisit','text')\n} else {\n  var v1=$group('Admin.Action.stage','BloodPressure','Admin.Action.actionType').asSequence()\n  var v2=$group('Admin.Action.stage','BloodPressure','Admin.Action.eventReason').asSequence()\n\n  var arr=[]  // string array of events\n  for(var i=0; i<v1.size(); i++) {\n    if(v1.valueAt(i).any('SKIP').not().value() ||\n       v2.valueAt(i).isNull().value()) continue\n    var key=v2.valueAt(i).value().slice(14)\n    if(-1==arr.indexOf(key))\n      arr.push(key)\n  }\n  if(undefined!==arr && 0<arr.length) {\n    res=newValue(arr.pop(),'text')  \n  }\n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_skip_blood_pressure", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var stage=newValue($group('clsa-dcs-f2.Participants:Admin.StageInstance.stage','BloodPressure','Admin.StageInstance.lastState').asSequence().last(),'text')\n$this('data_qac_blood_pressure').isNull().and(stage.any('Skipped','NotApplicable').not()).value() ? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_missing_blood_pressure", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var res=null\nif($('clsa-dcs-f2.BloodPressure:RES_AVG_COUNT').isNull().not().value()) {\n  res=newValue('{trial_count:'+$('clsa-dcs-f2.BloodPressure:RES_AVG_COUNT')+'}','text')\n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_qac_blood_pressure", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$('clsa-dcs-f2.ECG:InstrumentRun.user').whenNull(\n  $group('Admin.Action.stage','ECG','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_technician_ecg", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$('clsa-dcs-f2.Participants:DCSatHOME').isNull().and(\n  $('clsa-dcs-f2.Participants:DCS_PHONE').isNull(),\n  $group('clsa-dcs-f2.Participants:Admin.StageInstance.stage','ECG',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable')).value() \n? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_contraindicated_ecg", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "// if a dcs by phone visit, then the skip will be \"ModifiedVisit\"\nvar res=null\nif($('clsa-dcs-f2.Participants:DCS_PHONE').isNull().and(\n   $('clsa-dcs-f2.Participants:DCSatHOME').isNull()).not().value()){\n  res=newValue('ModifiedVisit','text')\n} else {\n  var v1=$group('Admin.Action.stage','ECG','Admin.Action.actionType').asSequence()\n  var v2=$group('Admin.Action.stage','ECG','Admin.Action.eventReason').asSequence()\n\n  var arr=[]  // string array of events\n  for(var i=0; i<v1.size(); i++) {\n    if(v1.valueAt(i).any('SKIP').not().value() ||\n       v2.valueAt(i).isNull().value()) continue\n    var key=v2.valueAt(i).value().slice(14)\n    if(-1==arr.indexOf(key))\n      arr.push(key)\n  }\n  if(undefined!==arr && 0<arr.length) {\n    res=newValue(arr.pop(),'text')  \n  }\n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_skip_ecg", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var stage=newValue($group('clsa-dcs-f2.Participants:Admin.StageInstance.stage','ECG','Admin.StageInstance.lastState').asSequence().last(),'text')\n$this('data_qac_ecg').isNull().and(stage.any('Skipped','NotApplicable').not()).value() ? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_missing_ecg", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var f=$('clsa-dcs-f2.ECG:RES_XML_FILE')\nvar q=$('clsa-dcs-f2.ECG:RES_DIAGNOSIS')\nvar res=null\nif(f.isNull().not().value()) {\n  var str='{file_size:'+f.length()+',quality:'\n  if(q.lowerCase().matches(/poor data quality/).value()) {\n    str += '0}'\n  } else {\n    str += '1}'  \n  }\n  res = newValue(str,'text')\n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_qac_ecg", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$('clsa-dcs-f2.CognitiveTest:InstrumentRun.user').whenNull(\n  $group('Admin.Action.stage','CognitiveTest','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_technician_cognitive_test", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$group('clsa-dcs-f2.Participants:Admin.StageInstance.stage','CognitiveTest',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value() \n? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_contraindicated_cognitive_test", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "// if a dcs by phone visit, then the skip will be \"ModifiedVisit\"\nvar res=null\nif($('clsa-dcs-f2.Participants:DCS_PHONE').isNull().and(\n   $('clsa-dcs-f2.Participants:DCSatHOME').isNull()).not().value()){\n  res=newValue('ModifiedVisit','text')\n} else {\n  var v1=$group('Admin.Action.stage','CognitiveTest','Admin.Action.actionType').asSequence()\n  var v2=$group('Admin.Action.stage','CognitiveTest','Admin.Action.eventReason').asSequence()\n\n  var arr=[]  // string array of events\n  for(var i=0; i<v1.size(); i++) {\n    if(v1.valueAt(i).any('SKIP').not().value() ||\n       v2.valueAt(i).isNull().value()) continue\n    var key=v2.valueAt(i).value().slice(14)\n    if(-1==arr.indexOf(key))\n      arr.push(key)\n  }\n  if(undefined!==arr && 0<arr.length) {\n    res=newValue(arr.pop(),'text')  \n  }\n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_skip_cognitive_test", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var stage=newValue($group('clsa-dcs-f2.Participants:Admin.StageInstance.stage','CognitiveTest','Admin.StageInstance.lastState').asSequence().last(),'text')\n$this('data_qac_cognitive_test').isNull().and(stage.any('Skipped','NotApplicable').not()).value() ? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_missing_cognitive_test", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var res=$('clsa-dcs-f2.CognitiveTest:RES_RESULT_FILE')\nif(res.isNull().not().value()) {\n  res = newValue('{filesize:'+res.length()+'}','text')\n}  \nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_qac_cognitive_test", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$('clsa-dcs-f2.Hearing:InstrumentRun.user').whenNull(\n  $group('Admin.Action.stage','Hearing','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_technician_hearing", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$('clsa-dcs-f2.Participants:DCSatHOME').isNull().and(\n  $('clsa-dcs-f2.Participants:DCS_PHONE').isNull(),\n  $group('clsa-dcs-f2.Participants:Admin.StageInstance.stage','Hearing',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable')).value() \n? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_contraindicated_hearing", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "// if a dcs by phone visit, then the skip will be \"ModifiedVisit\"\nvar res=null\nif($('clsa-dcs-f2.Participants:DCS_PHONE').isNull().and(\n   $('clsa-dcs-f2.Participants:DCSatHOME').isNull()).not().value()){\n  res=newValue('ModifiedVisit','text')\n} else {\n  var v1=$group('Admin.Action.stage','Hearing','Admin.Action.actionType').asSequence()\n  var v2=$group('Admin.Action.stage','Hearing','Admin.Action.eventReason').asSequence()\n\n  var arr=[]  // string array of events\n  for(var i=0; i<v1.size(); i++) {\n    if(v1.valueAt(i).any('SKIP').not().value() ||\n       v2.valueAt(i).isNull().value()) continue\n    var key=v2.valueAt(i).value().slice(14)\n    if(-1==arr.indexOf(key))\n      arr.push(key)\n  }\n  if(undefined!==arr && 0<arr.length) {\n    res=newValue(arr.pop(),'text')  \n  }\n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_skip_hearing", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var stage=newValue($group('clsa-dcs-f2.Participants:Admin.StageInstance.stage','Hearing','Admin.StageInstance.lastState').asSequence().last(),'text')\n$this('data_qac_hearing').isNull().and(stage.any('Skipped','NotApplicable').not()).value() ? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_missing_hearing", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var side = ['RIGHT','LEFT']\nvar freq = ['1KT','500','1K','2K','3K','4K','6K','8K']\nvar count = {RIGHT:0,LEFT:0}\nvar countfreq = {RIGHT:0,LEFT:0}\nvar counterr = {RIGHT:0,LEFT:0}\nfor(var i=0;i<side.length;i++) {\n  var s = side[i]\n  var v = 'clsa-dcs-f2.Hearing:RES_' + s + '_'\n  for(var j=0;j<freq.length;j++) {\n    var f = v + freq[j]\n    if ($(f).isNull().not().or($(f + '_ERR').isNull().not()).value()) count[s]++;\n    if ($(f).isNull().not().value()) countfreq[s]++;\n    if ($(f + '_ERR').isNull().not().value()) counterr[s]++;\n  }\n}\nres = (0 == count.RIGHT && 0 == count.LEFT && \n  $('clsa-dcs-f2.Hearing:RES_TEST_ID').isNull().and(\n    $('clsa-dcs-f2.Hearing:RES_TEST_DATETIME').isNull()).value()) ?\n      null : newValue(\n        '{response_left:'+count.LEFT+\n        ',response_right:'+count.RIGHT+\n        ',error_left:'+(counterr.LEFT>0 && countfreq.LEFT==0 ? '1' : '0')+\n        ',error_right:'+(counterr.RIGHT>0 && countfreq.RIGHT==0 ? '1' : '0')+\n        '}','text')"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_qac_hearing", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$('clsa-dcs-f2.Tonometer:InstrumentRun.user').whenNull(\n  $group('Admin.Action.stage','Tonometer','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_technician_tonometer", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$('clsa-dcs-f2.Participants:DCSatHOME').isNull().and(\n  $('clsa-dcs-f2.Participants:DCS_PHONE').isNull(),\n  $group('clsa-dcs-f2.Participants:Admin.StageInstance.stage','Tonometer',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable')).value() \n? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_contraindicated_tonometer", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "// if a dcs by phone visit, then the skip will be \"ModifiedVisit\"\nvar res=null\nif($('clsa-dcs-f2.Participants:DCS_PHONE').isNull().and(\n   $('clsa-dcs-f2.Participants:DCSatHOME').isNull()).not().value()){\n  res=newValue('ModifiedVisit','text')\n} else {\n  var v1=$group('Admin.Action.stage','Tonometer','Admin.Action.actionType').asSequence()\n  var v2=$group('Admin.Action.stage','Tonometer','Admin.Action.eventReason').asSequence()\n\n  var arr=[]  // string array of events\n  for(var i=0; i<v1.size(); i++) {\n    if(v1.valueAt(i).any('SKIP').not().value() ||\n       v2.valueAt(i).isNull().value()) continue\n    var key=v2.valueAt(i).value().slice(14)\n    if(-1==arr.indexOf(key))\n      arr.push(key)\n  }\n  if(undefined!==arr && 0<arr.length) {\n    res=newValue(arr.pop(),'text')  \n  }\n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_skip_tonometer", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var stage=newValue($group('clsa-dcs-f2.Participants:Admin.StageInstance.stage','Tonometer','Admin.StageInstance.lastState').asSequence().last(),'text')\n$this('data_qac_tonometer').isNull().and(stage.any('Skipped','NotApplicable').not()).value() ? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_missing_tonometer", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var eye=$('clsa-dcs-f2.Tonometer:Measure.TON_EYE').lowerCase().map({\n  'l':'L',\n  'r':'R',\n  'right':'R',\n  'left':'L',\n  'left eye':'L',\n  'right eye':'R',\n  'righr':'R',\n  'rigth':'R',\n  'rught':'R',\n  'lrft':'L',\n  '0':'L',\n  '1':'R',\n  'll':'L',\n  'rr':'R',\n  'le':'L',\n  'leeft':'L',\n  'gauche':'L',\n  'droit':'R',\n  'droite':'R'},null)\n\n// bare minimum useful data is IOPcc: Corneal Compensated Intraocular Pressure\nvar iopcc=$('clsa-dcs-f2.Tonometer:Measure.TON_IOPCC').asSequence() \n\n// if there is raw applanation and pressure data there will be a quality index\n// for each set of measurements\nvar qual=$('clsa-dcs-f2.Tonometer:Measure.TON_QUALITYINDEX').asSequence()\nvar appl=$('clsa-dcs-f2.Tonometer:Measure.TON_PRESSURE').asSequence()\nvar pres=$('clsa-dcs-f2.Tonometer:Measure.TON_APPLANATION').asSequence()\n\nvar has_iopcc=iopcc.size().eq(eye.size()).value()\nvar has_qual=qual.size().eq(eye.size()).value()\nvar has_appl=appl.size().eq(eye.size()).value()\nvar has_pres=pres.size().eq(eye.size()).value()\nvar res=null\nif(eye.isNull().not().value()) {\n  var side={L:{left_iopcc:'0',left_qi:'-1',left_appl:'0',left_pres:'0'},\n            R:{right_iopcc:'0',right_qi:'-1',right_appl:'0',right_pres:'0'}}\n  for(var i=0;i<eye.size();i++) {\n    var e=eye.valueAt(i).value()\n    if(has_iopcc) {\n      var q=newValue(iopcc.valueAt(i).value(),'text')\n      if(q.matches(/^(\\d*\\.)?\\d+$/)) {\n        if('L'==e) {\n          side[e].left_iopcc='1'\n        } else if('R'==e) {\n          side[e].right_iopcc='1'\n        }\n      }\n    }\n    if(has_qual) {\n      var q=newValue(qual.valueAt(i).round(2).value(),'text')\n      if(q.matches(/^(\\d*\\.)?\\d+$/)) {\n        if('L'==e) {\n          side[e].left_qi=q.value()\n        } else if('R'==e) {\n          side[e].right_qi=q.value()\n        }\n      }\n    }\n    if(has_appl) {\n      var q=appl.valueAt(i).value().split(',').length\n      if('L'==e) {\n        side[e].left_appl=q\n      } else if('R'==e) {\n        side[e].right_appl=q\n      }      \n    }        \n    if(has_pres) {\n      var q=pres.valueAt(i).value().split(',').length\n      if('L'==e) {\n        side[e].left_pres=q\n      } else if('R'==e) {\n        side[e].right_pres=q\n      }\n    }\n  }\n  res=newValue(\n    JSON.stringify(side.L).replace(/\"/g,'').replace(/}/g,',') +\n    JSON.stringify(side.R).replace(/\"/g,'').replace(/{/g,''), 'text')\n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_qac_tonometer", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$('clsa-dcs-f2.Weight:InstrumentRun.user').whenNull(\n  $group('Admin.Action.stage','Weight','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_technician_weight", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$group('clsa-dcs-f2.Participants:Admin.StageInstance.stage','Weight',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value() \n? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_contraindicated_weight", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "// if a dcs by phone visit, then the skip will be \"ModifiedVisit\"\nvar res=null\nif($('clsa-dcs-f2.Participants:DCS_PHONE').isNull().not().value()){\n  res=newValue('ModifiedVisit','text')\n} else {\n  var v1=$group('Admin.Action.stage','Weight','Admin.Action.actionType').asSequence()\n  var v2=$group('Admin.Action.stage','Weight','Admin.Action.eventReason').asSequence()\n\n  var arr=[]  // string array of events\n  for(var i=0; i<v1.size(); i++) {\n    if(v1.valueAt(i).any('SKIP').not().value() ||\n       v2.valueAt(i).isNull().value()) continue\n    var key=v2.valueAt(i).value().slice(14)\n    if(-1==arr.indexOf(key))\n      arr.push(key)\n  }\n  if(undefined!==arr && 0<arr.length) {\n    res=newValue(arr.pop(),'text')  \n  }\n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_skip_weight", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var stage=newValue($group('clsa-dcs-f2.Participants:Admin.StageInstance.stage','Weight','Admin.StageInstance.lastState').asSequence().last(),'text')\n$this('data_qac_weight').isNull().and(stage.any('Skipped','NotApplicable').not()).value() ? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_missing_weight", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var w=$('clsa-dcs-f2.Weight:Measure.RES_WEIGHT_MEASURE')\nvar res=null\nif(w.size().gt(1).value()){\n  res=newValue('{stddev:'+w.stddev().round(6).value()+',size:'+w.size().value()+'}','text')\n} else if(w.size().eq(1).value()) {\n  res=newValue('{stddev:0,size:1}','text')\n} \nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_qac_weight", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$('clsa-dcs-images-f2.RetinalScanLeft:InstrumentRun.user').whenNull(\n  $group('Admin.Action.stage','RetinalScanLeft','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_technician_retinal_scan_left", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$('clsa-dcs-f2.Participants:DCSatHOME').isNull().and(\n  $('clsa-dcs-f2.Participants:DCS_PHONE').isNull(),\n  $group('clsa-dcs-f2.Participants:Admin.StageInstance.stage','RetinalScanLeft',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable')).value() \n? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_contraindicated_retinal_scan_left", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "// if a dcs by phone visit, then the skip will be \"ModifiedVisit\"\nvar res=null\nif($('clsa-dcs-f2.Participants:DCS_PHONE').isNull().and(\n   $('clsa-dcs-f2.Participants:DCSatHOME').isNull()).not().value()){\n  res=newValue('ModifiedVisit','text')\n} else {\n  var v1=$group('Admin.Action.stage','RetinalScanLeft','Admin.Action.actionType').asSequence()\n  var v2=$group('Admin.Action.stage','RetinalScanLeft','Admin.Action.eventReason').asSequence()\n\n  var arr=[]  // string array of events\n  for(var i=0; i<v1.size(); i++) {\n    if(v1.valueAt(i).any('SKIP').not().value() ||\n       v2.valueAt(i).isNull().value()) continue\n    var key=v2.valueAt(i).value().slice(14)\n    if(-1==arr.indexOf(key))\n      arr.push(key)\n  }\n  if(undefined!==arr && 0<arr.length) {\n    res=newValue(arr.pop(),'text')  \n  }\n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_skip_retinal_scan_left", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var stage=newValue($group('clsa-dcs-f2.Participants:Admin.StageInstance.stage','RetinalScanLeft','Admin.StageInstance.lastState').asSequence().last(),'text')\n$this('data_qac_retinal_scan_left').isNull().and(stage.any('Skipped','NotApplicable').not()).value() ? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_missing_retinal_scan_left", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var e=$('clsa-dcs-images-f2.RetinalScanLeft:EYE')\nvar res=null\nif(e.isNull().not().value()) {\n  res=newValue('{filesize:'+e.length()+'}','text')\n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_qac_retinal_scan_left", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$('clsa-dcs-images-f2.RetinalScanRight:InstrumentRun.user').whenNull(\n  $group('Admin.Action.stage','RetinalScanRight','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_technician_retinal_scan_right", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$('clsa-dcs-f2.Participants:DCSatHOME').isNull().and(\n  $('clsa-dcs-f2.Participants:DCS_PHONE').isNull(),\n  $group('clsa-dcs-f2.Participants:Admin.StageInstance.stage','RetinalScanRight',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable')).value() \n? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_contraindicated_retinal_scan_right", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "// if a dcs by phone visit, then the skip will be \"ModifiedVisit\"\nvar res=null\nif($('clsa-dcs-f2.Participants:DCS_PHONE').isNull().and(\n   $('clsa-dcs-f2.Participants:DCSatHOME').isNull()).not().value()){\n  res=newValue('ModifiedVisit','text')\n} else {\n  var v1=$group('Admin.Action.stage','RetinalScanRight','Admin.Action.actionType').asSequence()\n  var v2=$group('Admin.Action.stage','RetinalScanRight','Admin.Action.eventReason').asSequence()\n\n  var arr=[]  // string array of events\n  for(var i=0; i<v1.size(); i++) {\n    if(v1.valueAt(i).any('SKIP').not().value() ||\n       v2.valueAt(i).isNull().value()) continue\n    var key=v2.valueAt(i).value().slice(14)\n    if(-1==arr.indexOf(key))\n      arr.push(key)\n  }\n  if(undefined!==arr && 0<arr.length) {\n    res=newValue(arr.pop(),'text')  \n  }\n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_skip_retinal_scan_right", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var stage=newValue($group('clsa-dcs-f2.Participants:Admin.StageInstance.stage','RetinalScanRight','Admin.StageInstance.lastState').asSequence().last(),'text')\n$this('data_qac_retinal_scan_right').isNull().and(stage.any('Skipped','NotApplicable').not()).value() ? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_missing_retinal_scan_right", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var e=$('clsa-dcs-images-f2.RetinalScanRight:EYE')\nvar res=null\nif(e.isNull().not().value()) {\n  res=newValue('{filesize:'+e.length()+'}','text')\n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_qac_retinal_scan_right", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$('clsa-dcs-images-f2.LateralBoneDensity:InstrumentRun.user').whenNull(\n  $group('Admin.Action.stage','LateralBoneDensity','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_technician_lateral_bone_density", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$('clsa-dcs-f2.Participants:DCSatHOME').isNull().and(\n  $('clsa-dcs-f2.Participants:DCS_PHONE').isNull(),\n  $group('clsa-dcs-f2.Participants:Admin.StageInstance.stage','LateralBoneDensity',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable')).value() \n? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_contraindicated_lateral_bone_density", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "// if a dcs by phone visit, then the skip will be \"ModifiedVisit\"\nvar res=null\nif($('clsa-dcs-f2.Participants:DCS_PHONE').isNull().and(\n   $('clsa-dcs-f2.Participants:DCSatHOME').isNull()).not().value()){\n  res=newValue('ModifiedVisit','text')\n} else {\n  var v1=$group('Admin.Action.stage','LateralBoneDensity','Admin.Action.actionType').asSequence()\n  var v2=$group('Admin.Action.stage','LateralBoneDensity','Admin.Action.eventReason').asSequence()\n\n  var arr=[]  // string array of events\n  for(var i=0; i<v1.size(); i++) {\n    if(v1.valueAt(i).any('SKIP').not().value() ||\n       v2.valueAt(i).isNull().value()) continue\n    var key=v2.valueAt(i).value().slice(14)\n    if(-1==arr.indexOf(key))\n      arr.push(key)\n  }\n  if(undefined!==arr && 0<arr.length) {\n    res=newValue(arr.pop(),'text')  \n  }\n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_skip_lateral_bone_density", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var stage=newValue($group('clsa-dcs-f2.Participants:Admin.StageInstance.stage','LateralBoneDensity','Admin.StageInstance.lastState').asSequence().last(),'text')\n$this('data_qac_lateral_bone_density').isNull().and(stage.any('Skipped','NotApplicable').not()).value() ? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_missing_lateral_bone_density", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var res=$('clsa-dcs-images-f2.LateralBoneDensity:RES_SEL_DICOM_MEASURE')\nif(res.isNull().not().value()) {\n  res = newValue('{filesize:'+res.length()+'}','text')\n}  \nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_qac_lateral_bone_density", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$('clsa-dcs-f2.StandingHeight:InstrumentRun.user').whenNull(\n  $group('Admin.Action.stage','StandingHeight','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_technician_standing_height", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$('clsa-dcs-f2.Participants:DCS_PHONE').isNull().and(\n  $group('clsa-dcs-f2.Participants:Admin.StageInstance.stage','StandingHeight',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable')).value() \n? 1 : null"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_contraindicated_standing_height", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "// if a dcs by phone visit, then the skip will be \"ModifiedVisit\"\nvar res=null\nif($('clsa-dcs-f2.Participants:DCS_PHONE').isNull().not().value()){\n  res=newValue('ModifiedVisit','text')\n} else {\n  var v1=$group('Admin.Action.stage','StandingHeight','Admin.Action.actionType').asSequence()\n  var v2=$group('Admin.Action.stage','StandingHeight','Admin.Action.eventReason').asSequence()\n\n  var arr=[]  // string array of events\n  for(var i=0; i<v1.size(); i++) {\n    if(v1.valueAt(i).any('SKIP').not().value() ||\n       v2.valueAt(i).isNull().value()) continue\n    var key=v2.valueAt(i).value().slice(14)\n    if(-1==arr.indexOf(key))\n      arr.push(key)\n  }\n  if(undefined!==arr && 0<arr.length) {\n    res=newValue(arr.pop(),'text')  \n  }\n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_skip_standing_height", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var stage=newValue($group('clsa-dcs-f2.Participants:Admin.StageInstance.stage','StandingHeight','Admin.StageInstance.lastState').asSequence().last(),'text')\n$this('data_qac_standing_height').isNull().and(stage.any('Skipped','NotApplicable').not()).value() ? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_missing_standing_height", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var w=$('clsa-dcs-f2.StandingHeight:Measure.RES_HEIGHT_MEASURE')\nvar res=null\nif(w.size().gt(1).value()){\n  res=newValue('{stddev:'+w.stddev().round(6).value()+',size:'+w.size().value()+'}','text')\n} else if(w.size().eq(1).value()) {\n  res=newValue('{stddev:0,size:1}','text')\n} \nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_qac_standing_height", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$('clsa-dcs-images-f2.SpineBoneDensity:InstrumentRun.user').whenNull(\n  $group('Admin.Action.stage','SpineBoneDensity','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_technician_spine_bone_density", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$('clsa-dcs-f2.Participants:DCSatHOME').isNull().and(\n  $('clsa-dcs-f2.Participants:DCS_PHONE').isNull(),\n  $group('clsa-dcs-f2.Participants:Admin.StageInstance.stage','SpineBoneDensity',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable')).value() \n? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_contraindicated_spine_bone_density", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "// if a dcs by phone visit, then the skip will be \"ModifiedVisit\"\nvar res=null\nif($('clsa-dcs-f2.Participants:DCS_PHONE').isNull().and(\n   $('clsa-dcs-f2.Participants:DCSatHOME').isNull()).not().value()){\n  res=newValue('ModifiedVisit','text')\n} else {\n  var v1=$group('Admin.Action.stage','SpineBoneDensity','Admin.Action.actionType').asSequence()\n  var v2=$group('Admin.Action.stage','SpineBoneDensity','Admin.Action.eventReason').asSequence()\n\n  var arr=[]  // string array of events\n  for(var i=0; i<v1.size(); i++) {\n    if(v1.valueAt(i).any('SKIP').not().value() ||\n       v2.valueAt(i).isNull().value()) continue\n    var key=v2.valueAt(i).value().slice(14)\n    if(-1==arr.indexOf(key))\n      arr.push(key)\n  }\n  if(undefined!==arr && 0<arr.length) {\n    res=newValue(arr.pop(),'text')  \n  }\n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_skip_spine_bone_density", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var stage=newValue($group('clsa-dcs-f2.Participants:Admin.StageInstance.stage','SpineBoneDensity','Admin.StageInstance.lastState').asSequence().last(),'text')\n$this('data_qac_spine_bone_density').isNull().and(stage.any('Skipped','NotApplicable').not()).value() ? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_missing_spine_bone_density", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var res=$('clsa-dcs-images-f2.SpineBoneDensity:RES_SP_DICOM')\nif(res.isNull().not().value()) {\n  res = newValue('{filesize:'+res.length()+'}','text')\n}  \nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_qac_spine_bone_density", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$('clsa-dcs-images-f2.ForearmBoneDensity:InstrumentRun.user').whenNull(\n  $group('Admin.Action.stage','ForearmBoneDensity','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_technician_forearm_bone_density", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$('clsa-dcs-f2.Participants:DCSatHOME').isNull().and(\n  $('clsa-dcs-f2.Participants:DCS_PHONE').isNull(),\n  $group('clsa-dcs-f2.Participants:Admin.StageInstance.stage','ForearmBoneDensity',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable')).value() \n? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_contraindicated_forearm_bone_density", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "// if a dcs by phone visit, then the skip will be \"ModifiedVisit\"\nvar res=null\nif($('clsa-dcs-f2.Participants:DCS_PHONE').isNull().and(\n   $('clsa-dcs-f2.Participants:DCSatHOME').isNull()).not().value()){\n  res=newValue('ModifiedVisit','text')\n} else {\n  var v1=$group('Admin.Action.stage','ForearmBoneDensity','Admin.Action.actionType').asSequence()\n  var v2=$group('Admin.Action.stage','ForearmBoneDensity','Admin.Action.eventReason').asSequence()\n\n  var arr=[]  // string array of events\n  for(var i=0; i<v1.size(); i++) {\n    if(v1.valueAt(i).any('SKIP').not().value() ||\n       v2.valueAt(i).isNull().value()) continue\n    var key=v2.valueAt(i).value().slice(14)\n    if(-1==arr.indexOf(key))\n      arr.push(key)\n  }\n  if(undefined!==arr && 0<arr.length) {\n    res=newValue(arr.pop(),'text')  \n  }\n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_skip_forearm_bone_density", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var stage=newValue($group('clsa-dcs-f2.Participants:Admin.StageInstance.stage','ForearmBoneDensity','Admin.StageInstance.lastState').asSequence().last(),'text')\n$this('data_qac_forearm_bone_density').isNull().and(stage.any('Skipped','NotApplicable').not()).value() ? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_missing_forearm_bone_density", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var l=$group('OUTPUT_FA_SIDE','LEFT','RES_FA_DICOM').asSequence().last()\nvar r=$group('OUTPUT_FA_SIDE','RIGHT','RES_FA_DICOM').asSequence().last()\nvar res=null\nif(l.isNull().not().value()) {\n  res=newValue('{filesize:'+ l.length().value() + '}', 'text')\n} else if(r.isNull().not().value()) {\n  res=newValue('{filesize:'+ r.length().value() + '}', 'text')\n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_qac_forearm_bone_density", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$('clsa-dcs-images-f2.WholeBodyBoneDensity:InstrumentRun.user').whenNull(\n  $group('Admin.Action.stage','WholeBodyBoneDensity','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_technician_whole_body_bone_density", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$('clsa-dcs-f2.Participants:DCSatHOME').isNull().and(\n  $('clsa-dcs-f2.Participants:DCS_PHONE').isNull(),\n  $group('clsa-dcs-f2.Participants:Admin.StageInstance.stage','WholeBodyBoneDensity',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable')).value() \n? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_contraindicated_whole_body_bone_density", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "// if a dcs by phone visit, then the skip will be \"ModifiedVisit\"\nvar res=null\nif($('clsa-dcs-f2.Participants:DCS_PHONE').isNull().and(\n   $('clsa-dcs-f2.Participants:DCSatHOME').isNull()).not().value()){\n  res=newValue('ModifiedVisit','text')\n} else {\n  var v1=$group('Admin.Action.stage','WholeBodyBoneDensity','Admin.Action.actionType').asSequence()\n  var v2=$group('Admin.Action.stage','WholeBodyBoneDensity','Admin.Action.eventReason').asSequence()\n\n  var arr=[]  // string array of events\n  for(var i=0; i<v1.size(); i++) {\n    if(v1.valueAt(i).any('SKIP').not().value() ||\n       v2.valueAt(i).isNull().value()) continue\n    var key=v2.valueAt(i).value().slice(14)\n    if(-1==arr.indexOf(key))\n      arr.push(key)\n  }\n  if(undefined!==arr && 0<arr.length) {\n    res=newValue(arr.pop(),'text')  \n  }\n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_skip_whole_body_bone_density", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var stage=newValue($group('clsa-dcs-f2.Participants:Admin.StageInstance.stage','WholeBodyBoneDensity','Admin.StageInstance.lastState').asSequence().last(),'text')\n$this('data_qac_whole_body_bone_density').isNull().and(stage.any('Skipped','NotApplicable').not()).value() ? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_missing_whole_body_bone_density", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var res=$('clsa-dcs-images-f2.WholeBodyBoneDensity:RES_WB_DICOM_1')\nif(res.isNull().not().value()) {\n  res = newValue('{filesize:'+res.length()+'}','text')\n}  \nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_qac_whole_body_bone_density", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$('clsa-dcs-images-f2.DualHipBoneDensity:InstrumentRun.user').whenNull(\n  $group('Admin.Action.stage','DualHipBoneDensity','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_technician_dual_hip_bone_density", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$('clsa-dcs-f2.Participants:DCSatHOME').isNull().and(\n  $('clsa-dcs-f2.Participants:DCS_PHONE').isNull(),\n  $group('clsa-dcs-f2.Participants:Admin.StageInstance.stage','DualHipBoneDensity',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable')).value() \n? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_contraindicated_dual_hip_bone_density", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "// if a dcs by phone visit, then the skip will be \"ModifiedVisit\"\nvar res=null\nif($('clsa-dcs-f2.Participants:DCS_PHONE').isNull().and(\n   $('clsa-dcs-f2.Participants:DCSatHOME').isNull()).not().value()){\n  res=newValue('ModifiedVisit','text')\n} else {\n  var v1=$group('Admin.Action.stage','DualHipBoneDensity','Admin.Action.actionType').asSequence()\n  var v2=$group('Admin.Action.stage','DualHipBoneDensity','Admin.Action.eventReason').asSequence()\n\n  var arr=[]  // string array of events\n  for(var i=0; i<v1.size(); i++) {\n    if(v1.valueAt(i).any('SKIP').not().value() ||\n       v2.valueAt(i).isNull().value()) continue\n    var key=v2.valueAt(i).value().slice(14)\n    if(-1==arr.indexOf(key))\n      arr.push(key)\n  }\n  if(undefined!==arr && 0<arr.length) {\n    res=newValue(arr.pop(),'text')  \n  }\n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_skip_dual_hip_bone_density", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var stage=newValue($group('clsa-dcs-f2.Participants:Admin.StageInstance.stage','DualHipBoneDensity','Admin.StageInstance.lastState').asSequence().last(),'text')\n$this('data_qac_dual_hip_bone_density').isNull().and(stage.any('Skipped','NotApplicable').not()).value() ? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_missing_dual_hip_bone_density", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var l=$group('Measure.OUTPUT_HIP_SIDE','LEFT','Measure.RES_HIP_DICOM').asSequence().last()\nvar r=$group('Measure.OUTPUT_HIP_SIDE','RIGHT','Measure.RES_HIP_DICOM').asSequence().last()\nvar res=null\nif(!l.isNull().and(r.isNull()).value()) {\n  res=newValue(\n    '{filesize_left:'+\n    (l.isNull().value()?'0':l.length().value())+\n    ',filesize_right:'+\n    (r.isNull().value()?'0':r.length().value())+\n    '}', 'text')\n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_qac_dual_hip_bone_density", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$('clsa-dcs-images-f2.CarotidIntima:InstrumentRun.user').whenNull(\n  $group('Admin.Action.stage','CarotidIntima','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_technician_carotid_intima", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$('clsa-dcs-f2.Participants:DCSatHOME').isNull().and(\n  $('clsa-dcs-f2.Participants:DCS_PHONE').isNull(),\n  $group('clsa-dcs-f2.Participants:Admin.StageInstance.stage','CarotidIntima',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable')).value() \n? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_contraindicated_carotid_intima", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "// if a dcs by phone visit, then the skip will be \"ModifiedVisit\"\nvar res=null\nif($('clsa-dcs-f2.Participants:DCS_PHONE').isNull().and(\n   $('clsa-dcs-f2.Participants:DCSatHOME').isNull()).not().value()){\n  res=newValue('ModifiedVisit','text')\n} else {\n  var v1=$group('Admin.Action.stage','CarotidIntima','Admin.Action.actionType').asSequence()\n  var v2=$group('Admin.Action.stage','CarotidIntima','Admin.Action.eventReason').asSequence()\n\n  var arr=[]  // string array of events\n  for(var i=0; i<v1.size(); i++) {\n    if(v1.valueAt(i).any('SKIP').not().value() ||\n       v2.valueAt(i).isNull().value()) continue\n    var key=v2.valueAt(i).value().slice(14)\n    if(-1==arr.indexOf(key))\n      arr.push(key)\n  }\n  if(undefined!==arr && 0<arr.length) {\n    res=newValue(arr.pop(),'text')  \n  }\n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_skip_carotid_intima", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var stage=newValue($group('clsa-dcs-f2.Participants:Admin.StageInstance.stage','CarotidIntima','Admin.StageInstance.lastState').asSequence().last(),'text')\n$this('data_qac_carotid_intima').isNull().and(stage.any('Skipped','NotApplicable').not()).value() ? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_missing_carotid_intima", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var rc=$group('clsa-dcs-images-f2.CarotidIntima:Measure.SIDE','Right','Measure.CINELOOP_1').asSequence().last()\nvar rsr=$group('clsa-dcs-images-f2.CarotidIntima:Measure.SIDE','Right','Measure.SR_1').asSequence().last()\nvar rs1=$group('clsa-dcs-images-f2.CarotidIntima:Measure.SIDE','Right','Measure.STILL_IMAGE_1').asSequence().last()\nvar rs2=$group('clsa-dcs-images-f2.CarotidIntima:Measure.SIDE','Right','Measure.STILL_IMAGE_2').asSequence().last()\nvar rs3=$group('clsa-dcs-images-f2.CarotidIntima:Measure.SIDE','Right','Measure.STILL_IMAGE_3').asSequence().last()\nvar lc=$group('clsa-dcs-images-f2.CarotidIntima:Measure.SIDE','Left','Measure.CINELOOP_1').asSequence().last()\nvar lsr=$group('clsa-dcs-images-f2.CarotidIntima:Measure.SIDE','Left','Measure.SR_1').asSequence().last()\nvar ls1=$group('clsa-dcs-images-f2.CarotidIntima:Measure.SIDE','Left','Measure.STILL_IMAGE_1').asSequence().last()\nvar ls2=$group('clsa-dcs-images-f2.CarotidIntima:Measure.SIDE','Left','Measure.STILL_IMAGE_2').asSequence().last()\nvar ls3=$group('clsa-dcs-images-f2.CarotidIntima:Measure.SIDE','Left','Measure.STILL_IMAGE_3').asSequence().last()\nvar res=null\nif(!rc.isNull().and(rsr.isNull(),rs1.isNull(),rs2.isNull(),rs3.isNull(),\n   lc.isNull(),lsr.isNull(),ls1.isNull(),ls2.isNull(),ls3.isNull()).value()) {\n  var str='{filesize_left_cine:'+(lc.isNull().value()?'0':lc.length().value())+','\n  str+='filesize_left_sr:'+(lsr.isNull().value()?'0':lsr.length().value())+','\n  str+='filesize_left_still_1:'+(ls1.isNull().value()?'0':ls1.length().value())+','\n  str+='filesize_left_still_2:'+(ls2.isNull().value()?'0':ls2.length().value())+','\n  str+='filesize_left_still_3:'+(ls3.isNull().value()?'0':ls3.length().value())+','\n  str+='filesize_right_cine:'+(rc.isNull().value()?'0':rc.length().value())+','\n  str+='filesize_right_sr:'+(rsr.isNull().value()?'0':rsr.length().value())+','\n  str+='filesize_right_still_1:'+(rs1.isNull().value()?'0':rs1.length().value())+','\n  str+='filesize_right_still_2:'+(rs2.isNull().value()?'0':rs2.length().value())+','\n  str+='filesize_right_still_3:'+(rs3.isNull().value()?'0':rs3.length().value())+'}'\n  res=newValue(str,'text')\n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_qac_carotid_intima", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$('clsa-dcs-f2.TUG:QuestionnaireRun.user').whenNull(\n  $group('Admin.Action.stage','TUG','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_technician_tug", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$('clsa-dcs-f2.Participants:DCSatHOME').isNull().and(\n  $('clsa-dcs-f2.Participants:DCS_PHONE').isNull(),\n  $group('clsa-dcs-f2.Participants:Admin.StageInstance.stage','TUG',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable')).value() \n? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_contraindicated_tug", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "// if a dcs by phone visit, then the skip will be \"ModifiedVisit\"\nvar res=null\nif($('clsa-dcs-f2.Participants:DCS_PHONE').isNull().and(\n   $('clsa-dcs-f2.Participants:DCSatHOME').isNull()).not().value()){\n  res=newValue('ModifiedVisit','text')\n} else {\n  var v1=$group('Admin.Action.stage','TUG','Admin.Action.actionType').asSequence()\n  var v2=$group('Admin.Action.stage','TUG','Admin.Action.eventReason').asSequence()\n\n  var arr=[]  // string array of events\n  for(var i=0; i<v1.size(); i++) {\n    if(v1.valueAt(i).any('SKIP').not().value() ||\n       v2.valueAt(i).isNull().value()) continue\n    var key=v2.valueAt(i).value().slice(14)\n    if(-1==arr.indexOf(key))\n      arr.push(key)\n  }\n  if(undefined!==arr && 0<arr.length) {\n    res=newValue(arr.pop(),'text')  \n  }\n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_skip_tug", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var stage=newValue($group('clsa-dcs-f2.Participants:Admin.StageInstance.stage','TUG','Admin.StageInstance.lastState').asSequence().last(),'text')\n$this('data_qac_tug').isNull().and(stage.any('Skipped','NotApplicable').not()).value() ? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_missing_tug", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var tt=$('clsa-dcs-f2.TUG:TUG_TIME').whenNull($('clsa-dcs-f2.TUG:TUG_TIME_2'))\nvar res=null\nif(tt.isNull().not().value()) {\n  var wt=$('clsa-dcs-f2.4mWalk:WLK_TIME').whenNull($('clsa-dcs-f2.4mWalk:WLK_TIME_2'))  \n  var ct=$('clsa-dcs-f2.ChairRise:CR_TIME').whenNull($('clsa-dcs-f2.ChairRise:CR_TIME_2'))\n  var str = '0'\n  if(tt.isNull().not().and(ct.isNull().not()).value()) {\n    var cv=ct.div($('clsa-dcs-f2.ChairRise:CR_NB').whenNull(1))\n    str=Math.round(tt.minus(wt.multiply(1.5).plus(cv)).abs().value(),0)\n  } \n  res=newValue(\n    '{time:'+tt.round(3).value()+\n    ',congruency:'+str+\n    '}','text')\n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_qac_tug", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$('clsa-dcs-f2.ChairRise:QuestionnaireRun.user').whenNull(\n  $group('Admin.Action.stage','ChairRise','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_technician_chair_rise", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$('clsa-dcs-f2.Participants:DCSatHOME').isNull().and(\n  $('clsa-dcs-f2.Participants:DCS_PHONE').isNull(),\n  $group('clsa-dcs-f2.Participants:Admin.StageInstance.stage','ChairRise',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable')).value() \n? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_contraindicated_chair_rise", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "// if a dcs by phone visit, then the skip will be \"ModifiedVisit\"\nvar res=null\nif($('clsa-dcs-f2.Participants:DCS_PHONE').isNull().and(\n   $('clsa-dcs-f2.Participants:DCSatHOME').isNull()).not().value()){\n  res=newValue('ModifiedVisit','text')\n} else {\n  var v1=$group('Admin.Action.stage','ChairRise','Admin.Action.actionType').asSequence()\n  var v2=$group('Admin.Action.stage','ChairRise','Admin.Action.eventReason').asSequence()\n\n  var arr=[]  // string array of events\n  for(var i=0; i<v1.size(); i++) {\n    if(v1.valueAt(i).any('SKIP').not().value() ||\n       v2.valueAt(i).isNull().value()) continue\n    var key=v2.valueAt(i).value().slice(14)\n    if(-1==arr.indexOf(key))\n      arr.push(key)\n  }\n  if(undefined!==arr && 0<arr.length) {\n    res=newValue(arr.pop(),'text')  \n  }\n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_skip_chair_rise", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var stage=newValue($group('clsa-dcs-f2.Participants:Admin.StageInstance.stage','ChairRise','Admin.StageInstance.lastState').asSequence().last(),'text')\n$this('data_qac_chair_rise').isNull().and(stage.any('Skipped','NotApplicable').not()).value() ? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_missing_chair_rise", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var ct=$('clsa-dcs-f2.ChairRise:CR_TIME').whenNull($('clsa-dcs-f2.ChairRise:CR_TIME_2'))  \nvar res=null\nif(ct.isNull().not().value()) {\n  var wt=$('clsa-dcs-f2.4mWalk:WLK_TIME').whenNull($('clsa-dcs-f2.4mWalk:WLK_TIME_2'))  \n  var tt=$('clsa-dcs-f2.TUG:TUG_TIME').whenNull($('clsa-dcs-f2.TUG:TUG_TIME_2'))\n  var str = '0'\n  if(tt.isNull().not().and(ct.isNull().not()).value()) {\n    var cv=ct.div($('clsa-dcs-f2.ChairRise:CR_NB').whenNull(1))\n    str=Math.round(tt.minus(wt.multiply(1.5).plus(cv)).abs().value(),0)\n  }  \n  res=newValue(\n    '{time:'+ct.round(3).value()+\n    ',congruency:'+str+\n    '}','text')\n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_qac_chair_rise", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$('clsa-dcs-f2.HipsWaist:InstrumentRun.user').whenNull(\n  $group('Admin.Action.stage','HipsWaist','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_technician_hips_waist", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$('clsa-dcs-f2.Participants:DCS_PHONE').isNull().and(\n  $group('clsa-dcs-f2.Participants:Admin.StageInstance.stage','HipsWaist',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable')).value() \n? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_contraindicated_hips_waist", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "// if a dcs by phone visit, then the skip will be \"ModifiedVisit\"\nvar res=null\nif($('clsa-dcs-f2.Participants:DCS_PHONE').isNull().not().value()){\n  res=newValue('ModifiedVisit','text')\n} else {\n  var v1=$group('Admin.Action.stage','HipsWaist','Admin.Action.actionType').asSequence()\n  var v2=$group('Admin.Action.stage','HipsWaist','Admin.Action.eventReason').asSequence()\n\n  var arr=[]  // string array of events\n  for(var i=0; i<v1.size(); i++) {\n    if(v1.valueAt(i).any('SKIP').not().value() ||\n       v2.valueAt(i).isNull().value()) continue\n    var key=v2.valueAt(i).value().slice(14)\n    if(-1==arr.indexOf(key))\n      arr.push(key)\n  }\n  if(undefined!==arr && 0<arr.length) {\n    res=newValue(arr.pop(),'text')  \n  }\n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_skip_hips_waist", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var stage=newValue($group('clsa-dcs-f2.Participants:Admin.StageInstance.stage','HipsWaist','Admin.StageInstance.lastState').asSequence().last(),'text')\n$this('data_qac_hips_waist').isNull().and(stage.any('Skipped','NotApplicable').not()).value() ? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_missing_hips_waist", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var i=$('clsa-dcs-f2.HipsWaist:IV_MEASURE_TAKEN')\nvar w=$('clsa-dcs-f2.HipsWaist:RES_WAIST_SIZE')\nvar h=$('clsa-dcs-f2.HipsWaist:RES_HIPS_SIZE')\nvar r=$('clsa-dcs-f2.HipsWaist:CALC_WAIST_TO_HIP_RATIO')\nvar res=null\nif(!i.isNull().and(w.isNull(),h.isNull(),r.isNull()).value()) {\n  var str='{iv_type:'+(i.isNull().value()?'NA':i.value())+','\n  str+='size_waist:'+(w.isNull().value()?'0':w.value())+','\n  str+='size_hips:'+(h.isNull().value()?'0':h.value())+','\n  str+='ratio:'+(r.isNull().value()?'0':r.round(3).value())+'}'\n  res=newValue(str,'text')\n}  \nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_qac_hips_waist", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$('clsa-dcs-f2.StandingBalance:QuestionnaireRun.user').whenNull(\n  $group('Admin.Action.stage','StandingBalance','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_technician_standing_balance", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$('clsa-dcs-f2.Participants:DCSatHOME').isNull().and(\n  $('clsa-dcs-f2.Participants:DCS_PHONE').isNull(),\n  $group('clsa-dcs-f2.Participants:Admin.StageInstance.stage','StandingBalance',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable')).value() \n? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_contraindicated_standing_balance", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "// if a dcs by phone visit, then the skip will be \"ModifiedVisit\"\nvar res=null\nif($('clsa-dcs-f2.Participants:DCS_PHONE').isNull().and(\n   $('clsa-dcs-f2.Participants:DCSatHOME').isNull()).not().value()){\n  res=newValue('ModifiedVisit','text')\n} else {\n  var v1=$group('Admin.Action.stage','StandingBalance','Admin.Action.actionType').asSequence()\n  var v2=$group('Admin.Action.stage','StandingBalance','Admin.Action.eventReason').asSequence()\n  var arr=[]  // string array of events\n  for(var i=0; i<v1.size(); i++) {\n    if(v1.valueAt(i).any('SKIP').not().value() ||\n       v2.valueAt(i).isNull().value()) continue\n    var key=v2.valueAt(i).value().slice(14)\n    if(-1==arr.indexOf(key))\n      arr.push(key)\n  }\n  if(undefined!==arr && 0<arr.length) {\n    res=newValue(arr.pop(),'text')  \n  }\n  if(null===res) {\n    var l1=$('clsa-dcs-f2.StandingBalance:STAND_COMPLETION_LEFT')  \n    var r1=$('clsa-dcs-f2.StandingBalance:STAND_COMPLETION_RIGHT')  \n    if(l1.any('NO').value()) {\n      var l2=$('clsa-dcs-f2.StandingBalance:STAND_UNCOMPLETE_LEFT').map({\n        'TECHNICAL':'TechnicalProblem',\n        'PARTICIPANT-DECISION':'ParticipantDecision',\n        'INTERVIEWER-DECISION':'InterviewerDecision',\n        'OTHER-SPEFICY':'SeeComment'},null)\n      if(l2.isNull().not().value()) {\n        res=l2\n      }  \n    } \n    if (null===res && r1.any('NO').value()) {\n      var r2=$('clsa-dcs-f2.StandingBalance:STAND_UNCOMPLETE_RIGHT').map({\n        'TECHNICAL':'TechnicalProblem',\n        'PARTICIPANT-DECISION':'ParticipantDecision',\n        'INTERVIEWER-DECISION':'InterviewerDecision',\n        'OTHER-SPEFICY':'SeeComment'},null)\n      if(r2.isNull().not().value()) {\n        res=r2\n      }\n    }\n  }\n}  \nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_skip_standing_balance", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var stage=newValue($group('clsa-dcs-f2.Participants:Admin.StageInstance.stage','StandingBalance','Admin.StageInstance.lastState').asSequence().last(),'text')\n$this('data_qac_standing_balance').isNull().and(stage.any('Skipped','NotApplicable').not()).value() ? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_missing_standing_balance", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var b=$('clsa-dcs-f2.StandingBalance:STAND_BEST').whenNull($('clsa-dcs-f2.StandingBalance:STAND_BEST_2'))\nvar lc =$('clsa-dcs-f2.StandingBalance:STAND_COMPLETION_LEFT')\nvar rc =$('clsa-dcs-f2.StandingBalance:STAND_COMPLETION_RIGHT')\nvar res=null\nif(!b.isNull().and(lc.isNull(),rc.isNull()).value()) {\n  var str = '{time_best:'\n  if(b.isNull().not().value()) {\n    str+=b.round(3).value()\n  } else  {\n    str+='-1'\n  }\n  var l=$('clsa-dcs-f2.StandingBalance:STAND_LEFT_TIME').whenNull($('clsa-dcs-f2.StandingBalance:STAND_LEFT_TIME_2'))\n  str+=',time_left:'\n  if(l.isNull().not().value()) {\n    str+=l.round(3).value()\n  } else  {\n    str+='-1'\n  }\n  var r=$('clsa-dcs-f2.StandingBalance:STAND_RIGHT_TIME').whenNull($('clsa-dcs-f2.StandingBalance:STAND_RIGHT_TIME_2'))\n  str+=',time_right:'\n  if(r.isNull().not().value()) {\n    str+=r.round(3).value()\n  } else  {\n    str+='-1'\n  }\n  str+='}'  \n  res=newValue(str,'text')\n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_qac_standing_balance", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$('clsa-dcs-f2.4mWalk:QuestionnaireRun.user').whenNull(\n  $group('Admin.Action.stage','4mWalk','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_technician_four_metre_walk", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$('clsa-dcs-f2.Participants:DCSatHOME').isNull().and(\n  $('clsa-dcs-f2.Participants:DCS_PHONE').isNull(),\n  $group('clsa-dcs-f2.Participants:Admin.StageInstance.stage','4mWalk',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable')).value() \n? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_contraindicated_four_metre_walk", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "// if a dcs by phone visit, then the skip will be \"ModifiedVisit\"\nvar res=null\nif($('clsa-dcs-f2.Participants:DCS_PHONE').isNull().and(\n   $('clsa-dcs-f2.Participants:DCSatHOME').isNull()).not().value()){\n  res=newValue('ModifiedVisit','text')\n} else {\n  var v1=$group('Admin.Action.stage','4mWalk','Admin.Action.actionType').asSequence()\n  var v2=$group('Admin.Action.stage','4mWalk','Admin.Action.eventReason').asSequence()\n\n  var arr=[]  // string array of events\n  for(var i=0; i<v1.size(); i++) {\n    if(v1.valueAt(i).any('SKIP').not().value() ||\n       v2.valueAt(i).isNull().value()) continue\n    var key=v2.valueAt(i).value().slice(14)\n    if(-1==arr.indexOf(key))\n      arr.push(key)\n  }\n  if(undefined!==arr && 0<arr.length) {\n    res=newValue(arr.pop(),'text')  \n  }\n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_skip_four_metre_walk", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var stage=newValue($group('clsa-dcs-f2.Participants:Admin.StageInstance.stage','4mWalk','Admin.StageInstance.lastState').asSequence().last(),'text')\n$this('data_qac_four_metre_walk').isNull().and(stage.any('Skipped','NotApplicable').not()).value() ? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_missing_four_metre_walk", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var wt=$('clsa-dcs-f2.4mWalk:WLK_TIME').whenNull($('clsa-dcs-f2.4mWalk:WLK_TIME_2'))\nvar res=null\nif(wt.isNull().not().value()) {\n  var tt=$('clsa-dcs-f2.TUG:TUG_TIME').whenNull($('clsa-dcs-f2.TUG:TUG_TIME_2'))\n  var ct=$('clsa-dcs-f2.ChairRise:CR_TIME').whenNull($('clsa-dcs-f2.ChairRise:CR_TIME_2'))\n  var str = '0'\n  if(tt.isNull().not().and(ct.isNull().not()).value()) {\n    var cv=ct.div($('clsa-dcs-f2.ChairRise:CR_NB').whenNull(1))\n    str=Math.round(tt.minus(wt.multiply(1.5).plus(cv)).abs().value(),0)\n  }\n  res=newValue(\n    '{time:'+wt.round(3).value()+\n    ',congruency:'+str+\n    '}','text')\n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_qac_four_metre_walk", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$('clsa-dcs-f2.SittingHeight:InstrumentRun.user').whenNull(\n  $group('Admin.Action.stage','SittingHeight','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_technician_sitting_height", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$group('clsa-dcs-f2.Participants:Admin.StageInstance.stage','SittingHeight',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value() \n? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_contraindicated_sitting_height", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "// if a dcs by phone visit, then the skip will be \"ModifiedVisit\"\nvar res=null\nif($('clsa-dcs-f2.Participants:DCS_PHONE').isNull().and(\n   $('clsa-dcs-f2.Participants:DCSatHOME').isNull()).not().value()){\n  res=newValue('ModifiedVisit','text')\n} else {\n  var v1=$group('Admin.Action.stage','SittingHeight','Admin.Action.actionType').asSequence()\n  var v2=$group('Admin.Action.stage','SittingHeight','Admin.Action.eventReason').asSequence()\n  var arr=[]  // string array of events\n  for(var i=0; i<v1.size(); i++) {\n    if(v1.valueAt(i).any('SKIP').not().value() ||\n       v2.valueAt(i).isNull().value()) continue\n    var key=v2.valueAt(i).value().slice(14)\n    if(-1==arr.indexOf(key))\n      arr.push(key)\n  }\n  if(undefined!==arr && 0<arr.length) {\n    res=newValue(arr.pop(),'text')  \n  }\n}  \nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_skip_sitting_height", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var stage=newValue($group('clsa-dcs-f2.Participants:Admin.StageInstance.stage','SittingHeight','Admin.StageInstance.lastState').asSequence().last(),'text')\n$this('data_qac_sitting_height').isNull().and(stage.any('Skipped','NotApplicable').not()).value() ? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_missing_sitting_height", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var w=$('clsa-dcs-f2.SittingHeight:Measure.RES_SIT_HEIGHT_MEASURE')\nvar res=null\nif(w.size().gt(1).value()){\n  res=newValue('{stddev:'+w.stddev().round(6).value()+',size:'+w.size().value()+'}','text')\n} else if(w.size().eq(1).value()) {\n  res=newValue('{stddev:0,size:1}','text')\n} \nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_qac_sitting_height", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$('clsa-dcs-f2.VisionAcuity:QuestionnaireRun.user').whenNull(\n  $group('Admin.Action.stage','VisionAcuity','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_technician_vision_acuity", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$('clsa-dcs-f2.Participants:DCSatHOME').isNull().and(\n  $('clsa-dcs-f2.Participants:DCS_PHONE').isNull(),\n  $group('clsa-dcs-f2.Participants:Admin.StageInstance.stage','VisionAcuity',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable')).value() \n? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_contraindicated_vision_acuity", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "// if a dcs by phone visit, then the skip will be \"ModifiedVisit\"\nvar res=null\nif($('clsa-dcs-f2.Participants:DCS_PHONE').isNull().and(\n   $('clsa-dcs-f2.Participants:DCSatHOME').isNull()).not().value()){\n  res=newValue('ModifiedVisit','text')\n} else {\n  var v1=$group('Admin.Action.stage','VisionAcuity','Admin.Action.actionType').asSequence()\n  var v2=$group('Admin.Action.stage','VisionAcuity','Admin.Action.eventReason').asSequence()\n  var arr=[]  // string array of events\n  for(var i=0; i<v1.size(); i++) {\n    if(v1.valueAt(i).any('SKIP').not().value() ||\n       v2.valueAt(i).isNull().value()) continue\n    var key=v2.valueAt(i).value().slice(14)\n    if(-1==arr.indexOf(key))\n      arr.push(key)\n  }\n  if(undefined!==arr && 0<arr.length) {\n    res=newValue(arr.pop(),'text')  \n  }\n  if(null===res) {\n    var tests=['DONE_VA','DONE_BOTH_VA','DONE_LEFT_VA','DONE_RIGHT_VA','DONE_LEFT_PO_VA','DONE_RIGHT_PO_VA']\n    var reasons=['DONE_RSN_VA','DONE_RSN_BOTH_VA','DONE_RSN_LEFT_VA','DONE_RSN_RIGHT_VA','DONE_RSN_LEFT_PO_VA','DONE_RSN_RIGHT_PO_VA']\n    for(var i=0;i<tests.length;i++) {\n      var t=$('clsa-dcs-f2.VisionAcuity:'+tests[i])\n      if(t.any('NO').value()) {\n        var r=$('clsa-dcs-f2.VisionAcuity:'+reasons[i]).map({\n        'TECHNICAL-PROBLEM':'TechnicalProblem',\n        'PARTICIPANT-DECISION':'ParticipantDecision',\n        'INTERVIEWER-DECISION':'InterviewerDecision',\n        'OTHER':'SeeComment'},null)\n        if(r.isNull().not().value()) {\n          res=r\n          break\n        }\n      }\n    }\n  }\n}  \nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_skip_vision_acuity", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var stage=newValue($group('clsa-dcs-f2.Participants:Admin.StageInstance.stage','VisionAcuity','Admin.StageInstance.lastState').asSequence().last(),'text')\n$this('data_qac_vision_acuity').isNull().and(stage.any('Skipped','NotApplicable').not()).value() ? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_missing_vision_acuity", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var count = {RIGHT:0,LEFT:0}\nvar rtests=['DONE_RIGHT_VA','DONE_RIGHT_PO_VA']\nvar ltests=['DONE_LEFT_VA','DONE_LEFT_PO_VA']\nvar n=0\nfor(var i=0;i<rtests.length;i++) {\n  var t=$('clsa-dcs-f2.VisionAcuity:'+rtests[i])\n  if(t.isNull().value()) n++\n  if(t.any('YES').value()) {\n    count['RIGHT']++\n  }\n  t=$('clsa-dcs-f2.VisionAcuity:'+ltests[i])\n  if(t.isNull().value()) n++\n  if(t.any('YES').value()) {\n    count['LEFT']++\n  }\n}\nvar res=null\nif(4!=n) {\n  res=newValue(\n    '{left_test:'+count['LEFT']+\n    ',right_test:'+count['RIGHT']+\n    '}','text')\n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_qac_vision_acuity", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$('clsa-dcs-f2.StroopFAS:QuestionnaireRun.user').whenNull(\n  $group('Admin.Action.stage','StroopFAS','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_technician_stroop_fas", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$('clsa-dcs-f2.Participants:DCS_PHONE').isNull().and(\n  $group('clsa-dcs-f2.Participants:Admin.StageInstance.stage','StroopFAS',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable')).value() \n? 1 : null"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_contraindicated_stroop_fas", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "// if a dcs by phone visit, then the skip will be \"ModifiedVisit\"\nvar res=null\nif($('clsa-dcs-f2.Participants:DCS_PHONE').isNull().not().value()){\n  res=newValue('ModifiedVisit','text')\n} else {\n  var v1=$group('Admin.Action.stage','StroopFAS','Admin.Action.actionType').asSequence()\n  var v2=$group('Admin.Action.stage','StroopFAS','Admin.Action.eventReason').asSequence()\n\n  var arr=[]  // string array of events\n  for(var i=0; i<v1.size(); i++) {\n    if(v1.valueAt(i).any('SKIP').not().value() ||\n       v2.valueAt(i).isNull().value()) continue\n    var key=v2.valueAt(i).value().slice(14)\n    if(-1==arr.indexOf(key))\n      arr.push(key)\n  }\n  if(undefined!==arr && 0<arr.length) {\n    res=newValue(arr.pop(),'text')  \n  }\n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_skip_stroop_fas", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var stage=newValue($group('clsa-dcs-f2.Participants:Admin.StageInstance.stage','StroopFAS','Admin.StageInstance.lastState').asSequence().last(),'text')\n$this('data_qac_stroop_fas').isNull().and(stage.any('Skipped','NotApplicable').not()).value() ? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_missing_stroop_fas", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var d=$('clsa-dcs-f2.StroopFAS:STP_DOTREC_COF1')\nvar w=$('clsa-dcs-f2.StroopFAS:STP_WORREC_COF1')\nvar c=$('clsa-dcs-f2.StroopFAS:STP_COLREC_COF1')\nvar f=$('clsa-dcs-f2.StroopFAS:FAS_FREC_COF1')\nvar a=$('clsa-dcs-f2.StroopFAS:FAS_AREC_COF1')\nvar s=$('clsa-dcs-f2.StroopFAS:FAS_SREC_COF1')\nvar res=null\nif(!d.isNull().and(w.isNull(),c.isNull(),f.isNull(),a.isNull(),s.isNull()).value()) {\n  var str='{filesize_dot:'+(d.isNull().value()?'0':d.length().value())+','\n  str+='filesize_wor:'+(w.isNull().value()?'0':w.length().value())+','\n  str+='filesize_col:'+(c.isNull().value()?'0':c.length().value())+','\n  str+='filesize_f:'+(f.isNull().value()?'0':f.length().value())+','\n  str+='filesize_a:'+(a.isNull().value()?'0':a.length().value())+','\n  str+='filesize_s:'+(s.isNull().value()?'0':s.length().value())+'}'\n  res=newValue(str,'text')\n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_qac_stroop_fas", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }
    ]
  }, 
  "datasourceName": "Quality_Control", 
  "from": [
    "clsa-dcs-f2.Participants", 
    "clsa-dcs-f2.BloodPressure", 
    "clsa-dcs-f2.CognitiveTest", 
    "clsa-dcs-images-f2.CarotidIntima", 
    "clsa-dcs-images-f2.DualHipBoneDensity", 
    "clsa-dcs-f2.ECG", 
    "clsa-dcs-images-f2.ForearmBoneDensity", 
    "clsa-dcs-f2.GripStrength", 
    "clsa-dcs-f2.Hearing", 
    "clsa-dcs-images-f2.LateralBoneDensity", 
    "clsa-dcs-images-f2.RetinalScanLeft", 
    "clsa-dcs-images-f2.RetinalScanRight", 
    "clsa-dcs-f2.Spirometry", 
    "clsa-dcs-f2.Tonometer", 
    "clsa-dcs-f2.Weight", 
    "clsa-dcs-images-f2.WholeBodyBoneDensity", 
    "clsa-dcs-f2.StandingHeight", 
    "clsa-dcs-images-f2.SpineBoneDensity", 
    "clsa-dcs-f2.ChairRise", 
    "clsa-dcs-f2.HipsWaist", 
    "clsa-dcs-f2.TUG", 
    "clsa-dcs-f2.StandingBalance", 
    "clsa-dcs-f2.4mWalk", 
    "clsa-dcs-f2.StroopFAS", 
    "clsa-dcs-f2.SittingHeight", 
    "clsa-dcs-f2.VisionAcuity"
  ], 
  "name": "QC_F2", 
  "where": "$lastupdate().before(newValue('BEFORE_DATE','date')).and($lastupdate().after(newValue('AFTER_DATE','date')))"
}
