{
  "Magma.VariableListViewDto.view": {
    "variables": [
      {
        "attributes": [
          {
            "name": "stage",
            "value": "Spirometry"
          },
          {
            "name": "script",
            "value": "$('clsa-dcs-f2.Spirometry:InstrumentRun.user').whenNull(\n  $group('Admin.Action.stage','Spirometry','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_technician_spirometry",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$('Admin.ApplicationConfiguration.siteName').map({\n  'BritishColumbia':'University of BC DCS',\n  'British Columbia':'University of BC DCS',\n  'Calgary':'Calgary DCS',\n  'Dalhousie':'Dalhousie DCS',\n  'Hamilton':'Hamilton DCS',\n  'Manitoba':'Manitoba DCS',\n  'McGill':'McGill DCS',\n  'McMaster':'Hamilton DCS',\n  'Memorial':'Memorial DCS',\n  'Memorial University':'Memorial DCS',\n  'Ottawa':'Ottawa DCS',\n  'Sherbrooke':'Sherbrooke DCS',\n  'Simon Fraser':'Simon Fraser DCS',\n  'SimonFraser':'Simon Fraser DCS',\n  'UniversityofBC':'University of BC DCS',\n  'University of Manitoba':'Manitoba DCS',\n  'University of Victoria':'Victoria DCS',\n  'Victoria':'Victoria DCS'},null)"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "interview_site",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$this('data_qac_spirometry').isNull().and(\n  $this('stage_contraindicated_spirometry').eq(0),\n  $this('stage_skip_spirometry').isNull()\n).value() ? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_missing_spirometry",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var action=$group('Admin.Action.stage','Spirometry','Admin.Action.actionType').asSequence()\nvar res=$group('Admin.Action.stage','Spirometry','Admin.Action.eventReason').asSequence().filter(function(v,i){\n  return action.indexOf('SKIP')==i\n  }).last()\nif(res.isNull().not().value()) {\n  res=newValue(res.value().slice(14),'text')  \n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_skip_spirometry",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$group('clsa-dcs-f2.Participants:Admin.StageInstance.stage','Spirometry',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value() \n? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_contraindicated_spirometry",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "derivedFrom",
            "namespace": "opal",
            "value": "/datasource/clsa-dcs-f2/table/Participants/variable/Admin.Interview.startDate"
          },
          {
            "name": "script",
            "value": "$('Admin.Interview.startDate')"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "interview_start_date",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "date"
      },
      {
        "attributes": [
          {
            "name": "identifier",
            "value": "true"
          },
          {
            "name": "derivedFrom",
            "namespace": "opal",
            "value": "/datasource/clsa-dcs-f2/table/Participants/variable/Admin.Participant.barcode"
          },
          {
            "name": "script",
            "value": "$('Admin.Participant.barcode')"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "interview_barcode",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var res=$('clsa-dcs-f2.Spirometry:OUTPUT_QUALITY_GRADE')\nif(!res.isNull().value()) {\n  res=newValue('{grade:'+res.value()+'}','text')\n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_qac_spirometry",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$('clsa-dcs-f2.GripStrength:InstrumentRun.user').whenNull(\n  $group('Admin.Action.stage','GripStrength','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_technician_grip_strength",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$group('clsa-dcs-f2.Participants:Admin.StageInstance.stage','GripStrength',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value() \n? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_contraindicated_grip_strength",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var action=$group('Admin.Action.stage','GripStrength','Admin.Action.actionType').asSequence()\nvar res=$group('Admin.Action.stage','GripStrength','Admin.Action.eventReason').asSequence().filter(function(v,i){\n  return action.indexOf('SKIP')==i\n  }).last()\nif(res.isNull().not().value()) {\n  res=newValue(res.value().slice(14),'text')  \n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_skip_grip_strength",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$this('data_qac_grip_strength').isNull().and(\n  $this('stage_contraindicated_grip_strength').eq(0),\n  $this('stage_skip_grip_strength').isNull()\n).value() ? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_missing_grip_strength",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var res=$('clsa-dcs-f2.GripStrength:Measure.RES_TRIAL_MAX')\nif(res.isNull().not().value()) {\n  res=newValue('{trial_count:'+res.size()+'}','text')\n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_qac_grip_strength",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$('clsa-dcs-f2.BloodPressure:InstrumentRun.user').whenNull(\n  $group('Admin.Action.stage','BloodPressure','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_technician_blood_pressure",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$group('clsa-dcs-f2.Participants:Admin.StageInstance.stage','BloodPressure',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value() \n? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_contraindicated_blood_pressure",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var action=$group('Admin.Action.stage','BloodPressure','Admin.Action.actionType').asSequence()\nvar res=$group('Admin.Action.stage','BloodPressure','Admin.Action.eventReason').asSequence().filter(function(v,i){\n  return action.indexOf('SKIP')==i\n  }).last()\nif(res.isNull().not().value()) {\n  res=newValue(res.value().slice(14),'text')  \n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_skip_blood_pressure",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$this('data_qac_blood_pressure').isNull().and(\n  $this('stage_contraindicated_blood_pressure').eq(0),\n  $this('stage_skip_blood_pressure').isNull()\n).value() ? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_missing_blood_pressure",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var res=$('clsa-dcs-f2.BloodPressure:RES_AVG_COUNT')\nif(res.isNull().not().value()) {\n  res=newValue('{trial_count:'+res.value()+'}','text')\n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_qac_blood_pressure",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$('clsa-dcs-f2.ECG:InstrumentRun.user').whenNull(\n  $group('Admin.Action.stage','ECG','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_technician_ecg",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$group('clsa-dcs-f2.Participants:Admin.StageInstance.stage','ECG',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value() \n? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_contraindicated_ecg",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var action=$group('Admin.Action.stage','ECG','Admin.Action.actionType').asSequence()\nvar res=$group('Admin.Action.stage','ECG','Admin.Action.eventReason').asSequence().filter(function(v,i){\n  return action.indexOf('SKIP')==i\n  }).last()\nif(res.isNull().not().value()) {\n  res=newValue(res.value().slice(14),'text')  \n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_skip_ecg",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$this('data_qac_ecg').isNull().and(\n  $this('stage_contraindicated_ecg').eq(0),\n  $this('stage_skip_ecg').isNull()\n).value() ? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_missing_ecg",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var f=$('clsa-dcs-f2.ECG:RES_XML_FILE')\nvar q=$('clsa-dcs-f2.ECG:RES_DIAGNOSIS')\nvar res=null\nif(f.isNull().not().value()) {\n  var str='{filesize:'+f.length()+',quality:'\n  if(q.lowerCase().matches(/poor data quality/).value()) {\n    str += '0}'\n  } else {\n    str += '1}'  \n  }\n  res = newValue(str,'text')\n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_qac_ecg",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$('clsa-dcs-f2.CognitiveTest:InstrumentRun.user').whenNull(\n  $group('Admin.Action.stage','CognitiveTest','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_technician_cognitive_test",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$group('clsa-dcs-f2.Participants:Admin.StageInstance.stage','CognitiveTest',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value() \n? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_contraindicated_cognitive_test",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var action=$group('Admin.Action.stage','CognitiveTest','Admin.Action.actionType').asSequence()\nvar res=$group('Admin.Action.stage','CognitiveTest','Admin.Action.eventReason').asSequence().filter(function(v,i){\n  return action.indexOf('SKIP')==i\n  }).last()\nif(res.isNull().not().value()) {\n  res=newValue(res.value().slice(14),'text')  \n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_skip_cognitive_test",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$this('data_qac_cognitive_test').isNull().and(\n  $this('stage_contraindicated_cognitive_test').eq(0),\n  $this('stage_skip_cognitive_test').isNull()\n).value() ? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_missing_cognitive_test",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var res=$('clsa-dcs-f2.CognitiveTest:RES_RESULT_FILE')\nif(res.isNull().not().value()) {\n  res = newValue('{filesize:'+res.length()+'}','text')\n}  \nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_qac_cognitive_test",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$('clsa-dcs-f2.Hearing:InstrumentRun.user').whenNull(\n  $group('Admin.Action.stage','Hearing','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_technician_hearing",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$group('clsa-dcs-f2.Participants:Admin.StageInstance.stage','Hearing',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value() \n? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_contraindicated_hearing",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var action=$group('Admin.Action.stage','Hearing','Admin.Action.actionType').asSequence()\nvar res=$group('Admin.Action.stage','Hearing','Admin.Action.eventReason').asSequence().filter(function(v,i){\n  return action.indexOf('SKIP')==i\n  }).last()\nif(res.isNull().not().value()) {\n  res=newValue(res.value().slice(14),'text')  \n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_skip_hearing",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$this('data_qac_hearing').isNull().and(\n  $this('stage_contraindicated_hearing').eq(0),\n  $this('stage_skip_hearing').isNull()\n).value() ? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_missing_hearing",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var side = ['RIGHT','LEFT']\nvar freq = ['1KT','500','1K','2K','3K','4K','6K','8K']\nvar count = {RIGHT:0,LEFT:0}\nvar countfreq = {RIGHT:0,LEFT:0}\nvar counterr = {RIGHT:0,LEFT:0}\nfor(var i=0;i<side.length;i++) {\n  var s = side[i]\n  var v = 'clsa-dcs-f2.Hearing:RES_' + s + '_'\n  for(var j=0;j<freq.length;j++) {\n    var f = v + freq[j]\n    if ($(f).isNull().not().or($(f + '_ERR').isNull().not()).value()) count[s]++;\n    if ($(f).isNull().not().value()) countfreq[s]++;\n    if ($(f + '_ERR').isNull().not().value()) counterr[s]++;\n  }\n}\nres = (0 == count.RIGHT && 0 == count.LEFT && \n  $('clsa-dcs-f2.Hearing:RES_TEST_ID').isNull().and(\n    $('clsa-dcs-f2.Hearing:RES_TEST_DATETIME').isNull()).value()) ?\n      null : newValue(\n        '{response_left:'+count.LEFT+\n        ',response_right:'+count.RIGHT+\n        ',error_left:'+(counterr.LEFT>0 && countfreq.LEFT==0 ? '1' : '0')+\n        ',error_right:'+(counterr.RIGHT>0 && countfreq.RIGHT==0 ? '1' : '0')+\n        '}','text')"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_qac_hearing",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$('clsa-dcs-f2.Tonometer:InstrumentRun.user').whenNull(\n  $group('Admin.Action.stage','Tonometer','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_technician_tonometer",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$group('clsa-dcs-f2.Participants:Admin.StageInstance.stage','Tonometer',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value() \n? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_contraindicated_tonometer",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var action=$group('Admin.Action.stage','Tonometer','Admin.Action.actionType').asSequence()\nvar res=$group('Admin.Action.stage','Tonometer','Admin.Action.eventReason').asSequence().filter(function(v,i){\n  return action.indexOf('SKIP')==i\n  }).last()\nif(res.isNull().not().value()) {\n  res=newValue(res.value().slice(14),'text')  \n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_skip_tonometer",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$this('data_qac_tonometer').isNull().and(\n  $this('stage_contraindicated_tonometer').eq(0),\n  $this('stage_skip_tonometer').isNull()\n).value() ? 1: 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_missing_tonometer",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var eye=$('clsa-dcs-f2.Tonometer:Measure.TON_EYE').lowerCase().map({\n  'l':'L',\n  'r':'R',\n  'right':'R',\n  'left':'L',\n  'left eye':'L',\n  'right eye':'R',\n  'righr':'R',\n  'rigth':'R',\n  'rught':'R',\n  'lrft':'L',\n  '0':'L',\n  '1':'R',\n  'll':'L',\n  'rr':'R',\n  'le':'L',\n  'leeft':'L',\n  'gauche':'L',\n  'droit':'R',\n  'droite':'R'},null)\n\n// bare minimum useful data is IOPcc: Corneal Compensated Intraocular Pressure\nvar iopcc=$('clsa-dcs-f2.Tonometer:Measure.TON_IOPCC').asSequence() \n\n// if there is raw applanation and pressure data there will be a quality index\n// for each set of measurements\nvar qual=$('clsa-dcs-f2.Tonometer:Measure.TON_QUALITYINDEX').asSequence()\nvar appl=$('clsa-dcs-f2.Tonometer:Measure.TON_PRESSURE').asSequence()\nvar pres=$('clsa-dcs-f2.Tonometer:Measure.TON_APPLANATION').asSequence()\n\nvar has_iopcc=iopcc.size().eq(eye.size()).value()\nvar has_qual=qual.size().eq(eye.size()).value()\nvar has_appl=appl.size().eq(eye.size()).value()\nvar has_pres=pres.size().eq(eye.size()).value()\nvar res=null\nif(eye.isNull().not().value()) {\n  var side={L:{left_iopcc:'0',left_qi:'-1',left_appl:'0',left_pres:'0'},\n            R:{right_iopcc:'0',right_qi:'-1',right_appl:'0',right_pres:'0'}}\n  for(var i=0;i<eye.size();i++) {\n    var e=eye.valueAt(i).value()\n    if(has_iopcc) {\n      var q=newValue(iopcc.valueAt(i).value(),'text')\n      if(q.matches(/^(\\d*\\.)?\\d+$/)) {\n        if('L'==e) {\n          side[e].left_iopcc='1'\n        } else if('R'==e) {\n          side[e].right_iopcc='1'\n        }\n      }\n    }\n    if(has_qual) {\n      var q=newValue(qual.valueAt(i).round(2).value(),'text')\n      if(q.matches(/^(\\d*\\.)?\\d+$/)) {\n        if('L'==e) {\n          side[e].left_qi=q.value()\n        } else if('R'==e) {\n          side[e].right_qi=q.value()\n        }\n      }\n    }\n    if(has_appl) {\n      var q=appl.valueAt(i).value().split(',').length\n      if('L'==e) {\n        side[e].left_appl=q\n      } else if('R'==e) {\n        side[e].right_appl=q\n      }      \n    }        \n    if(has_pres) {\n      var q=pres.valueAt(i).value().split(',').length\n      if('L'==e) {\n        side[e].left_pres=q\n      } else if('R'==e) {\n        side[e].right_pres=q\n      }\n    }\n  }\n  res=newValue(\n    JSON.stringify(side.L).replace(/\"/g,'').replace(/}/g,',') +\n    JSON.stringify(side.R).replace(/\"/g,'').replace(/{/g,''), 'text')\n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_qac_tonometer",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$('clsa-dcs-f2.Weight:InstrumentRun.user').whenNull(\n  $group('Admin.Action.stage','Weight','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_technician_weight",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$group('clsa-dcs-f2.Participants:Admin.StageInstance.stage','Weight',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value() \n? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_contraindicated_weight",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var action=$group('Admin.Action.stage','Weight','Admin.Action.actionType').asSequence()\nvar res=$group('Admin.Action.stage','Weight','Admin.Action.eventReason').asSequence().filter(function(v,i){\n  return action.indexOf('SKIP')==i\n  }).last()\nif(res.isNull().not().value()) {\n  res=newValue(res.value().slice(14),'text')  \n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_skip_weight",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$this('data_qac_weight').isNull().and(\n  $this('stage_contraindicated_weight').eq(0),\n  $this('stage_skip_weight').isNull()\n).value() ? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_missing_weight",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var res=$('clsa-dcs-f2.Weight:Measure.RES_WEIGHT_MEASURE')\nif(res.size().gt(1).value()){\n  res=newValue('{stddev:'+res.stddev().round(6).value()+',size:'+res.size().value()+'}','text')\n} else if(res.size().eq(1).value()) {\n  res=newValue('{stddev:0,size:1}','text')\n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_qac_weight",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$('clsa-dcs-images-f2.RetinalScanLeft:InstrumentRun.user').whenNull(\n  $group('Admin.Action.stage','RetinalScanLeft','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_technician_retinal_scan_left",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$group('clsa-dcs-f2.Participants:Admin.StageInstance.stage','RetinalScanLeft',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value()\n? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_contraindicated_retinal_scan_left",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var action=$group('Admin.Action.stage','RetinalScanLeft','Admin.Action.actionType').asSequence()\nvar res=$group('Admin.Action.stage','RetinalScanLeft','Admin.Action.eventReason').asSequence().filter(function(v,i){\n  return action.indexOf('SKIP')==i\n  }).last()\nif(res.isNull().not().value()) {\n  res=newValue(res.value().slice(14),'text')\n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_skip_retinal_scan_left",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$this('data_qac_retinal_scan_left').isNull().and(\n  $this('stage_contraindicated_retinal_scan_left').eq(0),\n  $this('stage_skip_retinal_scan_left').isNull()\n).value() ? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_missing_retinal_scan_left",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var res=$('clsa-dcs-images-f2.RetinalScanLeft:EYE')\nif(res.isNull().not().value()) {\n  res=newValue('{filesize:'+res.length()+'}','text')\n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_qac_retinal_scan_left",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$('clsa-dcs-images-f2.RetinalScanRight:InstrumentRun.user').whenNull(\n  $group('Admin.Action.stage','RetinalScanRight','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_technician_retinal_scan_right",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$group('clsa-dcs-f2.Participants:Admin.StageInstance.stage','RetinalScanRight',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value()\n? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_contraindicated_retinal_scan_right",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var action=$group('Admin.Action.stage','RetinalScanRight','Admin.Action.actionType').asSequence()\nvar res=$group('Admin.Action.stage','RetinalScanRight','Admin.Action.eventReason').asSequence().filter(function(v,i){\n  return action.indexOf('SKIP')==i\n  }).last()\nif(res.isNull().not().value()) {\n  res=newValue(res.value().slice(14),'text')\n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_skip_retinal_scan_right",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$this('data_qac_retinal_scan_right').isNull().and(\n  $this('stage_contraindicated_retinal_scan_right').eq(0),\n  $this('stage_skip_retinal_scan_right').isNull()\n).value() ? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_missing_retinal_scan_right",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var res=$('clsa-dcs-images-f2.RetinalScanRight:EYE')\nif(res.isNull().not().value()) {\n  res=newValue('{filesize:'+res.length()+'}','text')\n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_qac_retinal_scan_right",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$('clsa-dcs-images-f2.LateralBoneDensity:InstrumentRun.user').whenNull(\n  $group('Admin.Action.stage','LateralBoneDensity','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_technician_lateral_bone_density",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$group('clsa-dcs-f2.Participants:Admin.StageInstance.stage','LateralBoneDensity',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value() \n? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_contraindicated_lateral_bone_density",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var action=$group('Admin.Action.stage','LateralBoneDensity','Admin.Action.actionType').asSequence()\nvar res=$group('Admin.Action.stage','LateralBoneDensity','Admin.Action.eventReason').asSequence().filter(function(v,i){\n  return action.indexOf('SKIP')==i\n  }).last()\nif(res.isNull().not().value()) {\n  res=newValue(res.value().slice(14),'text')\n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_skip_lateral_bone_density",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$this('data_qac_lateral_bone_density').isNull().and(\n  $this('stage_contraindicated_lateral_bone_density').eq(0),\n  $this('stage_skip_lateral_bone_density').isNull()\n).value() ? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_missing_lateral_bone_density",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var res=$('clsa-dcs-images-f2.LateralBoneDensity:RES_SEL_DICOM_MEASURE')\nif(res.isNull().not().value()) {\n  res = newValue('{filesize:'+res.length()+'}','text')\n}  \nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_qac_lateral_bone_density",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$('clsa-dcs-f2.StandingHeight:InstrumentRun.user').whenNull(\n  $group('Admin.Action.stage','StandingHeight','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_technician_standing_height",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$group('clsa-dcs-f2.Participants:Admin.StageInstance.stage','StandingHeight',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value() \n? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_contraindicated_standing_height",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var action=$group('Admin.Action.stage','StandingHeight','Admin.Action.actionType').asSequence()\nvar res=$group('Admin.Action.stage','StandingHeight','Admin.Action.eventReason').asSequence().filter(function(v,i){\n  return action.indexOf('SKIP')==i\n  }).last()\nif(res.isNull().not().value()) {\n  res=newValue(res.value().slice(14),'text')\n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_skip_standing_height",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$this('data_qac_standing_height').isNull().and(\n  $this('stage_contraindicated_standing_height').eq(0),\n  $this('stage_skip_standing_height').isNull()\n).value() ? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_missing_standing_height",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var res=$('clsa-dcs-f2.StandingHeight:Measure.RES_HEIGHT_MEASURE')\nif(res.size().gt(1).value()){\n  res=newValue('{stddev:'+res.stddev().round(6).value()+',size:'+res.size().value()+'}','text')\n} else if(res.size().eq(1).value()) {\n  res=newValue('{stddev:0,size:1}','text')\n} \nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_qac_standing_height",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$('clsa-dcs-images-f2.SpineBoneDensity:InstrumentRun.user').whenNull(\n  $group('Admin.Action.stage','SpineBoneDensity','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_technician_spine_bone_density",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$group('clsa-dcs-f2.Participants:Admin.StageInstance.stage','SpineBoneDensity',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value()\n? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_contraindicated_spine_bone_density",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var action=$group('Admin.Action.stage','SpineBoneDensity','Admin.Action.actionType').asSequence()\nvar res=$group('Admin.Action.stage','SpineBoneDensity','Admin.Action.eventReason').asSequence().filter(function(v,i){\n  return action.indexOf('SKIP')==i\n  }).last()\nif(res.isNull().not().value()) {\n  res=newValue(res.value().slice(14),'text')  \n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_skip_spine_bone_density",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$this('data_qac_spine_bone_density').isNull().and(\n  $this('stage_contraindicated_spine_bone_density').eq(0),\n  $this('stage_skip_spine_bone_density').isNull()\n).value() ? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_missing_spine_bone_density",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var res=$('clsa-dcs-images-f2.SpineBoneDensity:RES_SP_DICOM')\nif(res.isNull().not().value()) {\n  res = newValue('{filesize:'+res.length()+'}','text')\n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_qac_spine_bone_density",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$('clsa-dcs-images-f2.ForearmBoneDensity:InstrumentRun.user').whenNull(\n  $group('Admin.Action.stage','ForearmBoneDensity','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_technician_forearm_bone_density",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$group('clsa-dcs-f2.Participants:Admin.StageInstance.stage','ForearmBoneDensity',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value() \n? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_contraindicated_forearm_bone_density",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var action=$group('Admin.Action.stage','ForearmBoneDensity','Admin.Action.actionType').asSequence()\nvar res=$group('Admin.Action.stage','ForearmBoneDensity','Admin.Action.eventReason').asSequence().filter(function(v,i){\n  return action.indexOf('SKIP')==i\n  }).last()\nif(res.isNull().not().value()) {\n  res=newValue(res.value().slice(14),'text')  \n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_skip_forearm_bone_density",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$this('data_qac_forearm_bone_density').isNull().and(\n  $this('stage_contraindicated_forearm_bone_density').eq(0),\n  $this('stage_skip_forearm_bone_density').isNull()\n).value() ? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_missing_forearm_bone_density",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var res=$group('OUTPUT_FA_SIDE','LEFT','RES_FA_DICOM').asSequence().last().whenNull(\n  $group('OUTPUT_FA_SIDE','RIGHT','RES_FA_DICOM').asSequence().last())\nif(res.isNull().not().value()) {\n  res=newValue('{filesize:'+res.length().value()+'}','text')\n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_qac_forearm_bone_density",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$('clsa-dcs-images-f2.WholeBodyBoneDensity:InstrumentRun.user').whenNull(\n  $group('Admin.Action.stage','WholeBodyBoneDensity','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_technician_whole_body_bone_density",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$group('clsa-dcs-f2.Participants:Admin.StageInstance.stage','WholeBodyBoneDensity',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value() \n? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_contraindicated_whole_body_bone_density",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var action=$group('Admin.Action.stage','WholeBodyBoneDensity','Admin.Action.actionType').asSequence()\nvar res=$group('Admin.Action.stage','WholeBodyBoneDensity','Admin.Action.eventReason').asSequence().filter(function(v,i){\n  return action.indexOf('SKIP')==i\n  }).last()\nif(res.isNull().not().value()) {\n  res=newValue(res.value().slice(14),'text')  \n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_skip_whole_body_bone_density",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$this('data_qac_whole_body_bone_density').isNull().and(\n  $this('stage_contraindicated_whole_body_bone_density').eq(0),\n  $this('stage_skip_whole_body_bone_density').isNull()\n).value() ? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_missing_whole_body_bone_density",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var res=$('clsa-dcs-images-f2.WholeBodyBoneDensity:RES_WB_DICOM_1')\nif(res.isNull().not().value()) {\n  res = newValue('{filesize:'+res.length()+'}','text')\n}  \nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_qac_whole_body_bone_density",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$('clsa-dcs-images-f2.DualHipBoneDensity:InstrumentRun.user').whenNull(\n  $group('Admin.Action.stage','DualHipBoneDensity','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_technician_dual_hip_bone_density",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$group('clsa-dcs-f2.Participants:Admin.StageInstance.stage','DualHipBoneDensity',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value() \n? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_contraindicated_dual_hip_bone_density",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var action=$group('Admin.Action.stage','DualHipBoneDensity','Admin.Action.actionType').asSequence()\nvar res=$group('Admin.Action.stage','DualHipBoneDensity','Admin.Action.eventReason').asSequence().filter(function(v,i){\n  return action.indexOf('SKIP')==i\n  }).last()\nif(res.isNull().not().value()) {\n  res=newValue(res.value().slice(14),'text')  \n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_skip_dual_hip_bone_density",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$this('data_qac_dual_hip_bone_density').isNull().and(\n  $this('stage_contraindicated_dual_hip_bone_density').eq(0),\n  $this('stage_skip_dual_hip_bone_density').isNull()\n).value() ? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_missing_dual_hip_bone_density",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var l=$group('Measure.OUTPUT_HIP_SIDE','LEFT','Measure.RES_HIP_DICOM').asSequence().last()\nvar r=$group('Measure.OUTPUT_HIP_SIDE','RIGHT','Measure.RES_HIP_DICOM').asSequence().last()\nvar res=null\nif(!l.isNull().and(r.isNull()).value()) {\n  res=newValue(\n    '{filesize_left:'+\n    (l.isNull().value()?'0':l.length().value())+\n    ',filesize_right:'+\n    (r.isNull().value()?'0':r.length().value())+\n    '}', 'text')\n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_qac_dual_hip_bone_density",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$('clsa-dcs-images-f2.CarotidIntima:InstrumentRun.user').whenNull(\n  $group('Admin.Action.stage','CarotidIntima','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_technician_carotid_intima",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$group('clsa-dcs-f2.Participants:Admin.StageInstance.stage','CarotidIntima',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value() \n? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_contraindicated_carotid_intima",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var action=$group('Admin.Action.stage','CarotidIntima','Admin.Action.actionType').asSequence()\nvar res=$group('Admin.Action.stage','CarotidIntima','Admin.Action.eventReason').asSequence().filter(function(v,i){\n  return action.indexOf('SKIP')==i\n  }).last()\nif(res.isNull().not().value()) {\n  res=newValue(res.value().slice(14),'text')  \n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_skip_carotid_intima",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$this('data_qac_carotid_intima').isNull().and(\n  $this('stage_contraindicated_carotid_intima').eq(0),\n  $this('stage_skip_carotid_intima').isNull()\n).value() ? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_missing_carotid_intima",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var rc=$group('clsa-dcs-images-f2.CarotidIntima:Measure.SIDE','Right','Measure.CINELOOP_1').asSequence().last()\nvar rsr=$group('clsa-dcs-images-f2.CarotidIntima:Measure.SIDE','Right','Measure.SR_1').asSequence().last()\nvar rs1=$group('clsa-dcs-images-f2.CarotidIntima:Measure.SIDE','Right','Measure.STILL_IMAGE_1').asSequence().last()\nvar rs2=$group('clsa-dcs-images-f2.CarotidIntima:Measure.SIDE','Right','Measure.STILL_IMAGE_2').asSequence().last()\nvar rs3=$group('clsa-dcs-images-f2.CarotidIntima:Measure.SIDE','Right','Measure.STILL_IMAGE_3').asSequence().last()\nvar lc=$group('clsa-dcs-images-f2.CarotidIntima:Measure.SIDE','Left','Measure.CINELOOP_1').asSequence().last()\nvar lsr=$group('clsa-dcs-images-f2.CarotidIntima:Measure.SIDE','Left','Measure.SR_1').asSequence().last()\nvar ls1=$group('clsa-dcs-images-f2.CarotidIntima:Measure.SIDE','Left','Measure.STILL_IMAGE_1').asSequence().last()\nvar ls2=$group('clsa-dcs-images-f2.CarotidIntima:Measure.SIDE','Left','Measure.STILL_IMAGE_2').asSequence().last()\nvar ls3=$group('clsa-dcs-images-f2.CarotidIntima:Measure.SIDE','Left','Measure.STILL_IMAGE_3').asSequence().last()\nvar res=null\nif(!rc.isNull().and(rsr.isNull(),rs1.isNull(),rs2.isNull(),rs3.isNull(),\n   lc.isNull(),lsr.isNull(),ls1.isNull(),ls2.isNull(),ls3.isNull()).value()) {\n  var str=[]   \n  str.push('{filesize_left_cine:'+(lc.isNull().value()?'0':lc.length().value()))\n  str.push('filesize_left_sr:'+(lsr.isNull().value()?'0':lsr.length().value()))\n  str.push('filesize_left_still_1:'+(ls1.isNull().value()?'0':ls1.length().value()))\n  str.push('filesize_left_still_2:'+(ls2.isNull().value()?'0':ls2.length().value()))\n  str.push('filesize_left_still_3:'+(ls3.isNull().value()?'0':ls3.length().value()))\n  str.push('filesize_right_cine:'+(rc.isNull().value()?'0':rc.length().value()))\n  str.push('filesize_right_sr:'+(rsr.isNull().value()?'0':rsr.length().value()))\n  str.push('filesize_right_still_1:'+(rs1.isNull().value()?'0':rs1.length().value()))\n  str.push('filesize_right_still_2:'+(rs2.isNull().value()?'0':rs2.length().value()))\n  str.push('filesize_right_still_3:'+(rs3.isNull().value()?'0':rs3.length().value()))\n  res=newValue('{'+str.join(',')+'}','text')\n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_qac_carotid_intima",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$('clsa-dcs-f2.TUG:QuestionnaireRun.user').whenNull(\n  $group('Admin.Action.stage','TUG','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_technician_tug",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$group('clsa-dcs-f2.Participants:Admin.StageInstance.stage','TUG',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value() \n? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_contraindicated_tug",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var action=$group('Admin.Action.stage','TUG','Admin.Action.actionType').asSequence()\nvar res=$group('Admin.Action.stage','TUG','Admin.Action.eventReason').asSequence().filter(function(v,i){\n  return action.indexOf('SKIP')==i\n  }).last()\nif(res.isNull().not().value()) {\n  res=newValue(res.value().slice(14),'text')  \n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_skip_tug",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$this('data_qac_tug').isNull().and(\n  $this('stage_contraindicated_tug').eq(0),\n  $this('stage_skip_tug').isNull()\n).value() ? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_missing_tug",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var tt=$('clsa-dcs-f2.TUG:TUG_TIME').whenNull($('clsa-dcs-f2.TUG:TUG_TIME_2'))\nvar res=null\nif(tt.isNull().not().value()) {\n  var wt=$('clsa-dcs-f2.4mWalk:WLK_TIME').whenNull($('clsa-dcs-f2.4mWalk:WLK_TIME_2'))  \n  var ct=$('clsa-dcs-f2.ChairRise:CR_TIME').whenNull($('clsa-dcs-f2.ChairRise:CR_TIME_2'))  \n  var str = '0'\n  if(tt.isNull().not().and(ct.isNull().not()).value()) {\n    var cv=ct.div($('clsa-dcs-f2.ChairRise:CR_NB').whenNull(1))\n    str=Math.round(tt.minus(wt.multiply(1.5).plus(cv)).abs().value())\n  }  \n  res=newValue(\n    '{time:'+tt.round(3).value()+\n    ',congruency:'+str+\n    '}','text')\n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_qac_tug",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$('clsa-dcs-f2.ChairRise:QuestionnaireRun.user').whenNull(\n  $group('Admin.Action.stage','ChairRise','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_technician_chair_rise",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$group('clsa-dcs-f2.Participants:Admin.StageInstance.stage','ChairRise',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value() \n? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_contraindicated_chair_rise",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var action=$group('Admin.Action.stage','ChairRise','Admin.Action.actionType').asSequence()\nvar res=$group('Admin.Action.stage','ChairRise','Admin.Action.eventReason').asSequence().filter(function(v,i){\n  return action.indexOf('SKIP')==i\n  }).last()\nif(res.isNull().not().value()) {\n  res=newValue(res.value().slice(14),'text')  \n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_skip_chair_rise",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$this('data_qac_chair_rise').isNull().and(\n  $this('stage_contraindicated_chair_rise').eq(0),\n  $this('stage_skip_chair_rise').isNull()\n).value() ? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_missing_chair_rise",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var ct=$('clsa-dcs-f2.ChairRise:CR_TIME').whenNull($('clsa-dcs-f2.ChairRise:CR_TIME_2'))  \nvar res=null\nif(ct.isNull().not().value()) {\n  var wt=$('clsa-dcs-f2.4mWalk:WLK_TIME').whenNull($('clsa-dcs-f2.4mWalk:WLK_TIME_2'))  \n  var tt=$('clsa-dcs-f2.TUG:TUG_TIME').whenNull($('clsa-dcs-f2.TUG:TUG_TIME_2'))  \n  var str = '0'\n  if(tt.isNull().not().and(ct.isNull().not()).value()) {\n    var cv=ct.div($('clsa-dcs-f2.ChairRise:CR_NB').whenNull(1))\n    str=Math.round(tt.minus(wt.multiply(1.5).plus(cv)).abs().value())\n  }  \n  res=newValue(\n    '{time:'+ct.round(3).value()+\n    ',congruency:'+str+\n    '}','text')\n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_qac_chair_rise",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$('clsa-dcs-f2.HipsWaist:InstrumentRun.user').whenNull(\n  $group('Admin.Action.stage','HipsWaist','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_technician_hips_waist",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$group('clsa-dcs-f2.Participants:Admin.StageInstance.stage','HipsWaist',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value() \n? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_contraindicated_hips_waist",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var action=$group('Admin.Action.stage','HipsWaist','Admin.Action.actionType').asSequence()\nvar res=$group('Admin.Action.stage','HipsWaist','Admin.Action.eventReason').asSequence().filter(function(v,i){\n  return action.indexOf('SKIP')==i\n  }).last()\nif(res.isNull().not().value()) {\n  res=newValue(res.value().slice(14),'text')  \n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_skip_hips_waist",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$this('data_qac_hips_waist').isNull().and(\n  $this('stage_contraindicated_hips_waist').eq(0),\n  $this('stage_skip_hips_waist').isNull()\n).value() ? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_missing_hips_waist",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var i=$('clsa-dcs-f2.HipsWaist:IV_MEASURE_TAKEN')\nvar w=$('clsa-dcs-f2.HipsWaist:RES_WAIST_SIZE')\nvar h=$('clsa-dcs-f2.HipsWaist:RES_HIPS_SIZE')\nvar r=$('clsa-dcs-f2.HipsWaist:CALC_WAIST_TO_HIP_RATIO')\nvar res=null\nif(!i.isNull().and(w.isNull(),h.isNull(),r.isNull()).value()) {\n  var str='{iv_type:'+(i.isNull().value()?'NA':i.value())+','\n  str+='size_waist:'+(w.isNull().value()?'0':w.value())+','\n  str+='size_hips:'+(h.isNull().value()?'0':h.value())+','\n  str+='ratio:'+(r.isNull().value()?'0':r.round(3).value())+'}'\n  res=newValue(str,'text')\n}  \nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_qac_hips_waist",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$('clsa-dcs-f2.StandingBalance:QuestionnaireRun.user').whenNull(\n  $group('Admin.Action.stage','StandingBalance','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_technician_standing_balance",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$group('clsa-dcs-f2.Participants:Admin.StageInstance.stage','StandingBalance',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value() \n? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_contraindicated_standing_balance",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var action=$group('Admin.Action.stage','StandingBalance','Admin.Action.actionType').asSequence()\nvar res=$group('Admin.Action.stage','StandingBalance','Admin.Action.eventReason').asSequence().filter(function(v,i){\n  return action.indexOf('SKIP')==i\n  }).last()\nif(res.isNull().not().value()) {\n  res=newValue(res.value().slice(14),'text')  \n} else {\n  var l1=$('clsa-dcs-f2.StandingBalance:STAND_COMPLETION_LEFT')  \n  var r1=$('clsa-dcs-f2.StandingBalance:STAND_COMPLETION_RIGHT')  \n  if(l1.any('NO').value()) {\n    var l2=$('clsa-dcs-f2.StandingBalance:STAND_UNCOMPLETE_LEFT').map({\n      'TECHNICAL':'TechnicalProblem',\n      'PARTICIPANT-DECISION':'ParticipantDecision',\n      'INTERVIEWER-DECISION':'InterviewerDecision',\n      'OTHER-SPEFICY':'SeeComment'},null)\n    if(l2.isNull().not().value()) {\n      res=l2\n    }  \n  } \n  if (null===res && r1.any('NO').value()) {\n    var r2=$('clsa-dcs-f2.StandingBalance:STAND_UNCOMPLETE_RIGHT').map({\n      'TECHNICAL':'TechnicalProblem',\n      'PARTICIPANT-DECISION':'ParticipantDecision',\n      'INTERVIEWER-DECISION':'InterviewerDecision',\n      'OTHER-SPEFICY':'SeeComment'},null)\n    if(r2.isNull().not().value()) {\n      res=r2\n    }\n  }\n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_skip_standing_balance",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$this('data_qac_standing_balance').isNull().and(\n  $this('stage_contraindicated_standing_balance').eq(0),\n  $this('stage_skip_standing_balance').isNull()\n).value() ? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_missing_standing_balance",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var b=$('clsa-dcs-f2.StandingBalance:STAND_BEST').whenNull($('clsa-dcs-f2.StandingBalance:STAND_BEST_2'))\nvar lc =$('clsa-dcs-f2.StandingBalance:STAND_COMPLETION_LEFT')\nvar rc =$('clsa-dcs-f2.StandingBalance:STAND_COMPLETION_RIGHT')\nvar res=null\nif(!b.isNull().and(lc.isNull(),rc.isNull()).value()) {\n  var str = '{time_best:'\n  if(b.isNull().not().value()) {\n    str+=b.round(3).value()\n  } else  {\n    str+='-1'\n  }\n  var l=$('clsa-dcs-f2.StandingBalance:STAND_LEFT_TIME').whenNull($('clsa-dcs-f2.StandingBalance:STAND_LEFT_TIME_2'))\n  str+=',time_left:'\n  if(l.isNull().not().value()) {\n    str+=l.round(3).value()\n  } else  {\n    str+='-1'\n  }\n  var r=$('clsa-dcs-f2.StandingBalance:STAND_RIGHT_TIME').whenNull($('clsa-dcs-f2.StandingBalance:STAND_RIGHT_TIME_2'))\n  str+=',time_right:'\n  if(r.isNull().not().value()) {\n    str+=r.round(3).value()\n  } else  {\n    str+='-1'\n  }\n  str+='}'  \n  res=newValue(str,'text')\n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_qac_standing_balance",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$('clsa-dcs-f2.4mWalk:QuestionnaireRun.user').whenNull(\n  $group('Admin.Action.stage','4mWalk','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_technician_four_metre_walk",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$group('clsa-dcs-f2.Participants:Admin.StageInstance.stage','4mWalk',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value() \n? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_contraindicated_four_metre_walk",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var action=$group('Admin.Action.stage','4mWalk','Admin.Action.actionType').asSequence()\nvar res=$group('Admin.Action.stage','4mWalk','Admin.Action.eventReason').asSequence().filter(function(v,i){\n  return action.indexOf('SKIP')==i\n  }).last()\nif(res.isNull().not().value()) {\n  res=newValue(res.value().slice(14),'text')  \n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_skip_four_metre_walk",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$this('data_qac_four_metre_walk').isNull().and(\n  $this('stage_contraindicated_four_metre_walk').eq(0),\n  $this('stage_skip_four_metre_walk').isNull()\n).value() ? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_missing_four_metre_walk",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var wt=$('clsa-dcs-f2.4mWalk:WLK_TIME').whenNull($('clsa-dcs-f2.4mWalk:WLK_TIME_2'))\nvar res=null\nif(wt.isNull().not().value()) {\n  var tt=$('clsa-dcs-f2.TUG:TUG_TIME').whenNull($('clsa-dcs-f2.TUG:TUG_TIME_2'))\n  var ct=$('clsa-dcs-f2.ChairRise:CR_TIME').whenNull($('clsa-dcs-f2.ChairRise:CR_TIME_2'))  \n  var str = '0'\n  if(tt.isNull().not().and(ct.isNull().not()).value()) {\n    var cv=ct.div($('clsa-dcs-f2.ChairRise:CR_NB').whenNull(1))\n    str=Math.round(tt.minus(wt.multiply(1.5).plus(cv)).abs().value())\n  }  \n  res=newValue(\n    '{time:'+wt.round(3).value()+\n    ',congruency:'+str+\n    '}','text')\n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_qac_four_metre_walk",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$('clsa-dcs-f2.SittingHeight:InstrumentRun.user').whenNull(\n  $group('Admin.Action.stage','SittingHeight','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_technician_sitting_height",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$group('clsa-dcs-f2.Participants:Admin.StageInstance.stage','SittingHeight',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value() \n? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_contraindicated_sitting_height",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var action=$group('Admin.Action.stage','SittingHeight','Admin.Action.actionType').asSequence()\nvar res=$group('Admin.Action.stage','SittingHeight','Admin.Action.eventReason').asSequence().filter(function(v,i){\n  return action.indexOf('SKIP')==i\n  }).last()\nif(res.isNull().not().value()) {\n  res=newValue(res.value().slice(14),'text')  \n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_skip_sitting_height",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$this('data_qac_sitting_height').isNull().and(\n  $this('stage_contraindicated_sitting_height').eq(0),\n  $this('stage_skip_sitting_height').isNull()\n).value() ? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_missing_sitting_height",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var res=$('clsa-dcs-f2.SittingHeight:Measure.RES_SIT_HEIGHT_MEASURE')\nif(res.size().gt(1).value()){\n  res=newValue('{stddev:'+res.stddev().round(6).value()+',size:'+res.size().value()+'}','text')\n} else if(res.size().eq(1).value()) {\n  res=newValue('{stddev:0,size:1}','text')\n} \nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_qac_sitting_height",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$('clsa-dcs-f2.VisionAcuity:QuestionnaireRun.user').whenNull(\n  $group('Admin.Action.stage','VisionAcuity','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_technician_vision_acuity",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$group('clsa-dcs-f2.Participants:Admin.StageInstance.stage','VisionAcuity',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value() \n? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_contraindicated_vision_acuity",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var action=$group('Admin.Action.stage','VisionAcuity','Admin.Action.actionType').asSequence()\nvar res=$group('Admin.Action.stage','VisionAcuity','Admin.Action.eventReason').asSequence().filter(function(v,i){\n  return action.indexOf('SKIP')==i\n  }).last()\nif(res.isNull().not().value()) {\n  res=newValue(res.value().slice(14),'text')  \n} else {\n  var tests=['DONE_VA','DONE_BOTH_VA','DONE_LEFT_VA','DONE_RIGHT_VA','DONE_LEFT_PO_VA','DONE_RIGHT_PO_VA']\n  var reasons=['DONE_RSN_VA','DONE_RSN_BOTH_VA','DONE_RSN_LEFT_VA','DONE_RSN_RIGHT_VA','DONE_RSN_LEFT_PO_VA','DONE_RSN_RIGHT_PO_VA']\n  for(var i=0;i<tests.length;i++) {\n    var t=$('clsa-dcs-f2.VisionAcuity:'+tests[i])\n    if(t.any('NO').value()) {\n      var r=$('clsa-dcs-f2.VisionAcuity:'+reasons[i]).map({\n      'TECHNICAL-PROBLEM':'TechnicalProblem',\n      'PARTICIPANT-DECISION':'ParticipantDecision',\n      'INTERVIEWER-DECISION':'InterviewerDecision',\n      'OTHER':'SeeComment'},null)\n      if(r.isNull().not().value()) {\n        res=r\n        break\n      }\n    }\n  }  \n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_skip_vision_acuity",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$this('data_qac_vision_acuity').isNull().and(\n  $this('stage_contraindicated_vision_acuity').eq(0),\n  $this('stage_skip_vision_acuity').isNull()\n).value() ? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_missing_vision_acuity",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var count = {RIGHT:0,LEFT:0}\nvar rtests=['DONE_RIGHT_VA','DONE_RIGHT_PO_VA']\nvar ltests=['DONE_LEFT_VA','DONE_LEFT_PO_VA']\nvar n=0\nfor(var i=0;i<2;i++) {\n  var t=$('clsa-dcs-f2.VisionAcuity:'+rtests[i])\n  if(t.isNull().value()) {\n    n++\n  } else if(t.any('YES').value()) {\n    count['RIGHT']++\n  }\n  t=$('clsa-dcs-f2.VisionAcuity:'+ltests[i])\n  if(t.isNull().value()) {\n    n++\n  } else if(t.any('YES').value()) {\n    count['LEFT']++\n  }\n}\nvar res=null\nif(4!=n) {\n  res=newValue(\n    '{left_test:'+count['LEFT']+\n    ',right_test:'+count['RIGHT']+\n    '}','text')\n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_qac_vision_acuity",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$('clsa-dcs-f2.StroopFAS:QuestionnaireRun.user').whenNull(\n  $group('Admin.Action.stage','StroopFAS','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_technician_stroop_fas",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$group('clsa-dcs-f2.Participants:Admin.StageInstance.stage','StroopFAS',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value()\n? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_contraindicated_stroop_fas",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var action=$group('Admin.Action.stage','StroopFAS','Admin.Action.actionType').asSequence()\nvar res=$group('Admin.Action.stage','StroopFAS','Admin.Action.eventReason').asSequence().filter(function(v,i){\n    return action.indexOf('SKIP')==i\n  }).last()\nif(res.isNull().not().value()) {\n  res=newValue(res.value().slice(14),'text')\n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_skip_stroop_fas",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$this('data_qac_stroop_fas').isNull().and(\n  $this('stage_contraindicated_stroop_fas').eq(0),\n  $this('stage_skip_stroop_fas').isNull()\n).value() ? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_missing_stroop_fas",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var stage='clsa-dcs-f2.StroopFAS:'\nvar p=$(stage+'QuestionnaireMetric.missingCount').asSequence()\nvar q=$(stage+'QuestionnaireMetric.questionCount').asSequence()\nvar res=null\nif(p.isNull().and(q.isNull()).not().value() && 0!=q.sum()) {\n  var str=[]\n  str.push(\n    'complete:'+\n    Math.round(q.sum().minus(p.sum()).multiply(100).div(q.sum()).value()))\n\nvar sections={\n'FAS':[\n'FAS_INSTRDY_COF2',\n'FAS_INSTRPT_COF2',\n'FAS_INSTFCTR_COF2',\n'FAS_INSTLST_COF2',\n'FAS_FRECR_COF2',\n'FAS_FCOMP_COF2',\n'FAS_FCOMP_COMM_COF2',\n'FAS_ARECR_COF2',\n'FAS_ACOMP_COF2',\n'FAS_ACOMP_COMM_COF2',\n'FAS_SRECR_COF2',\n'FAS_SCOMP_COF2',\n'FAS_SCOMP_COMM_COF2'],\n'STP':[\n'NEUR_CONSREC_COF2',\n'STP_DOT_COF2',\n'STP_DOTRPT_COF2',\n'STP_DOTFCTR_COF2',\n'STP_DOTLST_COF2',\n'STP_DOTRECR_COF2',\n'STP_DOTABLE_COF2',\n'STP_DOTTIMEN_COF2',\n'STP_WOR_COF2',\n'STP_WORRPT_COF2',\n'STP_WORFCTR_COF2',\n'STP_WORLST_COF2',\n'STP_WORRECR_COF2',\n'STP_WORABLE_COF2',\n'STP_WORTIMEN_COF2',\n'STP_COL_COF2',\n'STP_COLRPT_COF2',\n'STP_COLFCTR_COF2',\n'STP_COLLST_COF2',\n'STP_COLRECR_COF2',\n'STP_COLABLE_COF2',\n'STP_COLTIMEN_COF2',\n'STP_COLCOMM_COF2']\n}\n\n  for(var key in sections) {\n    var rcount=0\n    var qcount=0\n    var arr=sections[key]\n    for(var i=0; i<arr.length; i++ ) {\n      var j=$(stage+arr[i])\n      if(j.isNull().value()) continue\n      qcount++      \n      rcount+=j.any('REFUSED').value()?1:0\n    }\n    if(0==qcount) {\n      str.push(key+':0')\n    } else {\n      var perc=100.0*rcount/qcount      \n      if(0<perc && 100>perc && 0!=(perc-Math.floor(perc))) {        \n        perc=perc.toFixed(3)\n      }\n      str.push(key+':'+perc)\n    }  \n  }\n\n  res=newValue('{'+str.join(',')+'}','text')\n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_qac_stroop_fas",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$group('clsa-dcs-f2.Participants:Admin.StageInstance.stage','Consent',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value() \n? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_contraindicated_consent",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$this('data_qac_consent').isNull().and(\n  $this('stage_contraindicated_consent').eq(0),\n  $this('stage_skip_consent').isNull()\n).value() ? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_missing_consent",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var res=$('clsa-dcs-f2.Consent:satisfied')\nif(res.isNull().not().value()) {\n  res=newValue('{satisfied:'+(res.value()?1:0)+'}','text')\n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_qac_consent",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$group('Admin.Action.stage','Consent','Admin.Action.user').asSequence().last().lowerCase()"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_technician_consent",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var action=$group('Admin.Action.stage','Consent','Admin.Action.actionType').asSequence()\nvar res=$group('Admin.Action.stage','Consent','Admin.Action.eventReason').asSequence().filter(function(v,i){\n  return action.indexOf('SKIP')==i\n  }).last()\nif(res.isNull().not().value()) {\n  res=newValue(res.value().slice(14),'text')  \n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_skip_consent",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$('clsa-dcs-f2.ContraIndications:QuestionnaireRun.user').whenNull(\n  $group('Admin.Action.stage','ContraIndications','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_technician_contraindications",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var action=$group('Admin.Action.stage','ContraIndications','Admin.Action.actionType').asSequence()\nvar res=$group('Admin.Action.stage','ContraIndications','Admin.Action.eventReason').asSequence().filter(function(v,i){\n  return action.indexOf('SKIP')==i\n  }).last()\nif(res.isNull().not().value()) {\n  res=newValue(res.value().slice(14),'text')  \n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_skip_contraindications",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$group('clsa-dcs-f2.Participants:Admin.StageInstance.stage','ContraIndications',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value() \n? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_contraindicated_contraindications",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var stage='clsa-dcs-f2.ContraIndications:'\nvar p=$(stage+'QuestionnaireMetric.missingCount').asSequence()\nvar q=$(stage+'QuestionnaireMetric.questionCount').asSequence()\nvar res=null\nif(p.isNull().and(q.isNull()).not().value() && 0!=q.sum()) {\n  var str=[]\n  str.push(\n    'complete:'+\n    Math.round(q.sum().minus(p.sum()).multiply(100).div(q.sum()).value()))\n\nvar sections={\n'ICQ_COF2':[\n'ICQ_DOMHAND_COF2',\n'ICQ_HNDSWL_COF2',\n'ICQ_HNDCST_COF2',\n'ICQ_HNDHMT_COF2',\n'ICQ_ARMSWL_COF2',\n'ICQ_ARMCST_COF2',\n'ICQ_LEGSWL_COF2',\n'ICQ_LEGCST_COF2',\n'ICQ_SRG3MO_COF2',\n'ICQ_SRGYARM_COF2',\n'ICQ_SRGYCHT_COF2',\n'ICQ_SRGYHND_COF2',\n'ICQ_SRGYART_COF2',\n'ICQ_SRGYEYE_COF2',\n'ICQ_SRGYABD_COF2',\n'ICQ_SRGYHRT_COF2',\n'ICQ_SRGYOT_COF2',\n'ICQ_SRGYOTSPE_COF2',\n'ICQ_PAINHND_COF2',\n'ICQ_RISEASSI_COF2',\n'ICQ_RISECANE_COF2',\n'ICQ_ABLESTND_COF2',\n'ICQ_ABLEWLK_COF2',\n'ICQ_PREGNT_COF2',\n'ICQ_PREGNTWK_COF2',\n'ICQ_ILLLUNG_COF2',\n'ICQ_HRTCOND_COF2',\n'ICQ_EMB6WK_COF2',\n'ICQ_EMBMED_COF2',\n'ICQ_DERET3MO_COF2',\n'ICQ_EYEINF_COF2',\n'ICQ_EARINF_COF2',\n'ICQ_CATRCT_COF2',\n'ICQ_CATRCTAGE_COF2',\n'ICQ_CATRCTS_COF2',\n'ICQ_CATRCT2_COF2',\n'ICQ_CATIME_COF2',\n'ICQ_GLAUC_COF2',\n'ICQ_GLAUCAGE_COF2',\n'ICQ_HRAID_COF2',\n'ICQ_HRAID2_COF2',\n'ICQ_HRWORKING_COF2',\n'ICQ_GLASSES2_COF2',\n'ICQ_CTLENS2_COF2',\n'ICQ_GLASSES_COF2',\n'ICQ_CTLENS_COF2',\n'ICQ_PROSLIM_COF2',\n'ICQ_PROSARM_COF2',\n'ICQ_JOINTARM_COF2',\n'ICQ_PROSLEG_COF2',\n'ICQ_PROSHND_COF2',\n'ICQ_PROSFT_COF2',\n'ICQ_PROSHIP_COF2',\n'ICQ_PROSKNEE_COF2',\n'ICQ_PROEYE_COF2',\n'ICQ_FX_COF2',\n'ICQ_FXARM_COF2',\n'ICQ_FXSHLD_COF2',\n'ICQ_FXHND_COF2',\n'ICQ_FXWRST_COF2',\n'ICQ_FXRIB_COF2',\n'ICQ_FXLEG_COF2',\n'ICQ_FXANK_COF2',\n'ICQ_FXFT_COF2',\n'ICQ_FXHIP_COF2',\n'ICQ_FXKNEE_COF2',\n'ICQ_FXCHK_COF2',\n'ICQ_FXJAW_COF2',\n'ICQ_FXNOSE_COF2',\n'ICQ_FXSKL_COF2',\n'ICQ_FXNECK_COF2',\n'ICQ_FXBACK_COF2',\n'ICQ_FXCOLLR_COF2',\n'ICQ_FXPELV_COF2',\n'ICQ_LAMIN_COF2',\n'ICQ_POLIO_COF2',\n'ICQ_BLDSP3MO_COF2',\n'ICQ_ANEURY_COF2',\n'ICQ_PACEMKR_COF2',\n'ICQ_DEFIBR_COF2',\n'ICQ_COCHLIMP_COF2',\n'ICQ_NGTUBE_COF2',\n'ICQ_ABDTUBE_COF2',\n'ICQ_CHEMO4WK_COF2',\n'ICQ_HAEMO_COF2',\n'ICQ_BLDTR24H_COF2',\n'ICQ_NUCLMED_COF2',\n'ICQ_NUCLMED_48H_COF2',\n'ICQ_NUCLMED_TEST_Q_COF2',\n'ICQ_NUCLMED_IV24H_COF2',\n'ICQ_BARSWAL_COF2',\n'ICQ_TINNIT_COF2',\n'ICQ_SMOKE_COF2',\n'ICQ_SMOKETIME_COF2',\n'ICQ_SMOKETIMEH_COF2',\n'ICQ_INHALERLONG_COF2',\n'ICQ_INHALERSHORT_COF2']\n}\n\n  for(var key in sections) {\n    var rcount=0\n    var qcount=0\n    var arr=sections[key]\n    for(var i=0; i<arr.length; i++ ) {\n      var j=$(stage+arr[i])\n      if(j.isNull().value()) continue\n      qcount++      \n      rcount+=j.any('REFUSED').value()?1:0\n    }\n    if(0==qcount) {\n      str.push(key+':0')\n    } else {\n      var perc=100.0*rcount/qcount      \n      if(0<perc && 100>perc && 0!=(perc-Math.floor(perc))) {        \n        perc=perc.toFixed(3)\n      }\n      str.push(key+':'+perc)\n    }  \n  }\n\n  res=newValue('{'+str.join(',')+'}','text')\n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_qac_contraindications",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$this('data_qac_contraindications').isNull().and(\n  $this('stage_contraindicated_contraindications').eq(0),\n  $this('stage_skip_contraindications').isNull()\n).value() ? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_missing_contraindications",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$('clsa-dcs-f2.EventPMT:QuestionnaireRun.user').whenNull(\n  $group('Admin.Action.stage','EventPMT','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_technician_event_pmt",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var action=$group('Admin.Action.stage','EventPMT','Admin.Action.actionType').asSequence()\nvar res=$group('Admin.Action.stage','EventPMT','Admin.Action.eventReason').asSequence().filter(function(v,i){\n  return action.indexOf('SKIP')==i\n  }).last()\nif(res.isNull().not().value()) {\n  res=newValue(res.value().slice(14),'text')  \n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_skip_event_pmt",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$group('clsa-dcs-f2.Participants:Admin.StageInstance.stage','EventPMT',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value() \n? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_contraindicated_event_pmt",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var stage='clsa-dcs-f2.EventPMT:'\nvar p=$(stage+'QuestionnaireMetric.missingCount').asSequence()\nvar q=$(stage+'QuestionnaireMetric.questionCount').asSequence()\nvar res=null\nif(p.isNull().and(q.isNull()).not().value() && 0!=q.sum()) {\n  var str=[]\n  str.push(\n    'complete:'+\n    Math.round(q.sum().minus(p.sum()).multiply(100).div(q.sum()).value()))\n\nvar sections={\n'PMT':[\n'PMT_ABLE_COF2',\n'PMT_FCT_COF2',\n'PMT_TIM_COF2',\n'PMT_NOCUE_COF2',\n'PMT_ENV_COF2',\n'PMT_ENV_OBS_COF2',\n'PMT_MONEY_COF2',\n'PMT_MONEY_OBS_COF2',\n'PMT_ITP_COF2',\n'PMT_ACR_COF2',\n'PMT_REM_COF2']\n}\n\n  for(var key in sections) {\n    var rcount=0\n    var qcount=0\n    var arr=sections[key]\n    for(var i=0; i<arr.length; i++ ) {\n      var j=$(stage+arr[i])\n      if(j.isNull().value()) continue\n      qcount++      \n      rcount+=j.any('REFUSED').value()?1:0\n    }\n    if(0==qcount) {\n      str.push(key+':0')\n    } else {\n      var perc=100.0*rcount/qcount      \n      if(0<perc && 100>perc && 0!=(perc-Math.floor(perc))) {        \n        perc=perc.toFixed(3)\n      }\n      str.push(key+':'+perc)\n    }  \n  }\n\n  res=newValue('{'+str.join(',')+'}','text')\n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_qac_event_pmt",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$this('data_qac_event_pmt').isNull().and(\n  $this('stage_contraindicated_event_pmt').eq(0),\n  $this('stage_skip_event_pmt').isNull()\n).value() ? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_missing_event_pmt",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$('clsa-dcs-f2.DiseaseSymptoms:QuestionnaireRun.user').whenNull(\n  $group('Admin.Action.stage','DiseaseSymptoms','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_technician_disease_symptoms",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var action=$group('Admin.Action.stage','DiseaseSymptoms','Admin.Action.actionType').asSequence()\nvar res=$group('Admin.Action.stage','DiseaseSymptoms','Admin.Action.eventReason').asSequence().filter(function(v,i){\n  return action.indexOf('SKIP')==i\n  }).last()\nif(res.isNull().not().value()) {\n  res=newValue(res.value().slice(14),'text')  \n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_skip_disease_symptoms",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$group('clsa-dcs-f2.Participants:Admin.StageInstance.stage','DiseaseSymptoms',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value() \n? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_contraindicated_disease_symptoms",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var stage='clsa-dcs-f2.DiseaseSymptoms:'\nvar p=$(stage+'QuestionnaireMetric.missingCount').asSequence()\nvar q=$(stage+'QuestionnaireMetric.questionCount').asSequence()\nvar res=null\nif(p.isNull().and(q.isNull()).not().value() && 0!=q.sum()) {\n  var str=[]\n  str.push(\n    'complete:'+\n    Math.round(q.sum().minus(p.sum()).multiply(100).div(q.sum()).value()))\n\nvar sections={\n'AOR':[\n'AOR_AORSTN_COF2',\n'AOR_AORAGE_COF2',\n'AOR_SURGAV_COF2',\n'AOR_SURGAGE_COF2',\n'AOR_SURTYPE_COF2',\n'AOR_VALVE_COF2'],\n'CAO':[\n'CCC_ASTHM_COF2',\n'CCC_ASTHM_CHANGE_COF2',\n'CAO_ASTHMAGE_COF2',\n'CAO_WHEZ_COF2',\n'CAO_SOBFLAT_COF2',\n'CAO_EXERT_COF2',\n'CAO_SOBUP_COF2',\n'CAO_SOBPM_COF2',\n'CAO_WKWHEZ_COF2',\n'CAO_WKCOF_COF2',\n'CAO_WKSOB_COF2',\n'CCC_COPD_COF2',\n'CCC_COPD_CHANGE_COF2',\n'CAO_COPDAGE_COF2',\n'CAO_COLD_COF2',\n'CAO_COFPY_COF2',\n'CAO_COFAM_COF2',\n'CAO_COFMAM_COF2',\n'CAO_PHLEGMPY_COF2',\n'CAO_TRBCOUGH_COF2',\n'CCC_COUGHTM_COF2',\n'CAO_MED_COF2',\n'CAO_MEDNAME_COF2',\n'CAO_MED_1_COF2',\n'CAO_MED_2_COF2',\n'CAO_MED_3_COF2',\n'CAO_MED_4_COF2',\n'CAO_MED_5_COF2',\n'CAO_MED_6_COF2',\n'CAO_MED_7_COF2',\n'CAO_MED_8_COF2',\n'CAO_MED_9_COF2',\n'CAO_MED_10_COF2',\n'CAO_MED_11_COF2',\n'CAO_MED_12_COF2',\n'CAO_MED_13_COF2',\n'CAO_MED_14_COF2',\n'CAO_MED_15_COF2',\n'CAO_MED_16_COF2',\n'CAO_MED_17_COF2',\n'CAO_MED_18_COF2',\n'CAO_MED_19_COF2',\n'CAO_MED_20_COF2',\n'CAO_MED_21_COF2',\n'CAO_MED_22_COF2',\n'CAO_MED_23_COF2',\n'CAO_MED_24_COF2',\n'CAO_MED_25_COF2',\n'CAO_MED_26_COF2',\n'CAO_MED_27_COF2',\n'CAO_MED_28_COF2',\n'CAO_MED_29_COF2',\n'CAO_MED_30_COF2',\n'CAO_MED_31_COF2',\n'CAO_MED_32_COF2',\n'CAO_MED_33_COF2',\n'CAO_MED_34_COF2',\n'CAO_MED_35_COF2',\n'CAO_MED_36_COF2',\n'CAO_MED_37_COF2',\n'CAO_MED_38_COF2',\n'CAO_MED_39_COF2',\n'CAO_MED_40_COF2'],\n'CCC_CANCER':[\n'CCC_CANC_COF2',\n'CCC_CANTP_COF2',\n'CCC_CANCAGE_CNS_COF2.CNS2',\n'CCC_CANCAGE_TH_COF2.TH2',\n'CCC_CANCAGE_SM_COF2.SM',\n'CCC_CANCAGE_SNM_COF2.SNM',\n'CCC_CANCAGE_OR_COF2.OR',\n'CCC_CANCAGE_LX_COF2.LX',\n'CCC_CANCAGE_ES_COF2.ES',\n'CCC_CANCAGE_BR_COF2.BR',\n'CCC_CANCAGE_LU_COF2.LU',\n'CCC_CANCAGE_ST_COF2.ST',\n'CCC_CANCAGE_BL_COF2.BL',\n'CCC_CANCAGE_KD_COF2.KD',\n'CCC_CANCAGE_LV_COF2.LV',\n'CCC_CANCAGE_PA_COF2.PA',\n'CCC_CANCAGE_COL_COF2.COL',\n'CCC_CANCAGE_PR_COF2.PR',\n'CCC_CANCAGE_TT_COF2.TT',\n'CCC_CANCAGE_OV_COF2.OV',\n'CCC_CANCAGE_FU_COF2.FU',\n'CCC_CANCAGE_FC_COF2.FC',\n'CCC_CANCAGE_LK_COF2.LK',\n'CCC_CANCAGE_MM_COF2.MM',\n'CCC_CANCAGE_HL_COF2.HL',\n'CCC_CANCAGE_NHL_COF2.NHL',\n'CCC_CANCAGE_OT_COF2.OT'],\n'CCC_CARDIAC':[\n'CCC_HEART_COF2',\n'CCC_HEARTAGE_COF2',\n'CCC_HEARTCHANGE_COF2',\n'CCC_PAD_COF2',\n'CCC_PADAGE_COF2'],\n'CCC_GASTRO':[\n'CCC_ULCR_COF2',\n'CCC_ULCRAGE_COF2',\n'CCC_ULCR_CHANGE_COF2',\n'CCC_CRDIS_COF2',\n'CCC_ULCOL_COF2',\n'CCC_IBSYD_COF2',\n'CCC_CRDISAGE_COF2',\n'CCC_ULCOLAGE_COF2',\n'CCC_IBSYDAGE_COF2',\n'CCC_BOWINC_COF2',\n'CCC_BOWINCAGE_COF2',\n'CCC_BOWINC_CHANGE_COF2',\n'CCC_URIINC_COF2',\n'CCC_URIINCAGE_COF2',\n'CCC_URIINC_CHANGE_COF2'],\n'CCC_INFECTION':[\n'CCC_DRPNEU_COF2',\n'CCC_DRFLU_COF2',\n'CCC_DRUTI_COF2',\n'CCC_DROT_COF2',\n'CCC_DROTSP_COF2'],\n'CCC_MENTAL':[\n'CCC_ANXI_COF2',\n'CCC_ANXIAGE_COF2',\n'CCC_ANXI_CHANGE_COF2',\n'CCC_MOOD_COF2',\n'CCC_MOODAGE_COF2',\n'CCC_MOOD_CHANGE_COF2'],\n'CCC_NEURO':[\n'CCC_MEMPB_COF2',\n'CCC_MEMPBAGE_COF2',\n'CCC_MEMPB_CHANGE_COF2',\n'CCC_ALZH_COF2',\n'CCC_ALZHAGE_COF2',\n'CCC_ALZH_CHANGE_COF2',\n'CCC_MS_COF2',\n'CCC_MSAGE_COF2',\n'CCC_MS_CHANGE_COF2',\n'CCC_MGRN_COF2',\n'CCC_MGRNAGE_COF2',\n'CCC_MGRN_CHANGE_COF2'],\n'CCC_OTHER':[\n'CCC_ALLRG_COF2',\n'CCC_ALLRGAGE_COF2',\n'CCC_ALLRG_CHANGE_COF2',\n'CCC_KIDN_COF2',\n'CCC_KIDNAGE_COF2',\n'CCC_KIDN_CHANGE_COF2',\n'CCC_KIDSTN_COF2',\n'CCC_KIDSTNAGE_COF2',\n'CCC_DITYP_COF2',\n'CCC_DITIM_COF2',\n'CCC_HCV_COF2',\n'CCC_HCVAGE_COF2',\n'CCC_HCV_CHANGE_COF2',\n'CCC_HCV_TRT_COF2',\n'CCC_HCV_TXS_COF2',\n'CCC_HCV_CURR_COF2'],\n'CCC_VISION':[\n'CCC_MACDEG_COF2',\n'CCC_MACDEGAGE_COF2',\n'CCC_MACDEG_CHANGE_COF2'],\n'DEP':[\n'DEP_BOTR_COF2',\n'DEP_MIND_COF2',\n'DEP_FLDP_COF2',\n'DEP_FFRT_COF2',\n'DEP_HPFL_COF2',\n'DEP_FRFL_COF2',\n'DEP_RSTLS_COF2',\n'DEP_HAPP_COF2',\n'DEP_LONLY_COF2',\n'DEP_GTGO_COF2'],\n'DIA':[\n'DIA_DIAB_COF2',\n'DIA_DIAB_CHANGE_COF2',\n'DIA_AGE_COF2',\n'DIA_DIABRT_COF2',\n'DIA_DIABRTAGE_COF2',\n'DIA_EVPRG_COF2',\n'DIA_PRGDIA_COF2',\n'DIA_MED_COF2',\n'DIA_MEDNAME_COF2',\n'DIA_MEDINSNAME_COF2',\n'DIA_MED_1_COF2',\n'DIA_MED_2_COF2',\n'DIA_MED_3_COF2',\n'DIA_MED_4_COF2',\n'DIA_MED_5_COF2',\n'DIA_MED_6_COF2',\n'DIA_MED_7_COF2',\n'DIA_MED_8_COF2',\n'DIA_MED_9_COF2',\n'DIA_MED_10_COF2',\n'DIA_MED_11_COF2',\n'DIA_MED_12_COF2',\n'DIA_MED_13_COF2',\n'DIA_MED_14_COF2',\n'DIA_MED_15_COF2',\n'DIA_MED_16_COF2',\n'DIA_MED_17_COF2',\n'DIA_MED_18_COF2',\n'DIA_MED_19_COF2',\n'DIA_MED_20_COF2',\n'DIA_MED_21_COF2',\n'DIA_MED_22_COF2',\n'DIA_MED_23_COF2',\n'DIA_MED_24_COF2',\n'DIA_MED_25_COF2',\n'DIA_MED_26_COF2',\n'DIA_MED_27_COF2',\n'DIA_MED_28_COF2',\n'DIA_MED_29_COF2',\n'DIA_MED_30_COF2',\n'DIA_MED_31_COF2',\n'DIA_MED_32_COF2',\n'DIA_MED_33_COF2',\n'DIA_MED_34_COF2',\n'DIA_MED_35_COF2',\n'DIA_MED_36_COF2',\n'DIA_MED_37_COF2',\n'DIA_MED_38_COF2',\n'DIA_MED_39_COF2',\n'DIA_MED_40_COF2',\n'DIA_MEDAGE_COF2',\n'DIA_DIABRT_CHANGE_COF2'],\n'DPR':[\n'DPR_CLINDEP_COF2',\n'DPR_CLINDEP_CHANGE_COF2',\n'DPR_AGE_COF2',\n'DPR_MED_COF2',\n'DPR_MEDNAME_COF2',\n'DPR_MED_1_COF2',\n'DPR_MED_2_COF2',\n'DPR_MED_3_COF2',\n'DPR_MED_4_COF2',\n'DPR_MED_5_COF2',\n'DPR_MED_6_COF2',\n'DPR_MED_7_COF2',\n'DPR_MED_8_COF2',\n'DPR_MED_9_COF2',\n'DPR_MED_10_COF2',\n'DPR_MED_11_COF2',\n'DPR_MED_12_COF2',\n'DPR_MED_13_COF2',\n'DPR_MED_14_COF2',\n'DPR_MED_15_COF2',\n'DPR_MED_16_COF2',\n'DPR_MED_17_COF2',\n'DPR_MED_18_COF2',\n'DPR_MED_19_COF2',\n'DPR_MED_20_COF2',\n'DPR_MED_21_COF2',\n'DPR_MED_22_COF2',\n'DPR_MED_23_COF2',\n'DPR_MED_24_COF2',\n'DPR_MED_25_COF2',\n'DPR_MED_26_COF2',\n'DPR_MED_27_COF2',\n'DPR_MED_28_COF2',\n'DPR_MED_29_COF2',\n'DPR_MED_30_COF2',\n'DPR_MED_31_COF2',\n'DPR_MED_32_COF2',\n'DPR_MED_33_COF2',\n'DPR_MED_34_COF2',\n'DPR_MED_35_COF2',\n'DPR_MED_36_COF2',\n'DPR_MED_37_COF2',\n'DPR_MED_38_COF2',\n'DPR_MED_39_COF2',\n'DPR_MED_40_COF2',\n'DPR_OTHMD_COF2',\n'DPR_OTHCOUN_COF2',\n'DPR_EVRTRT_COF2',\n'DPR_EVRCOUN_COF2'],\n'EPI':[\n'EPI_CAUS_FEV_COF2',\n'EPI_EVER_COF2',\n'EPI_EPILSZ_COF2',\n'EPI_MED_COF2',\n'EPI_CURRMED_COF2',\n'EPI_CAUS_SEIZ_COF2',\n'EPI_CAUS_TWIT_COF2',\n'EPI_CAUS_MENT_COF2',\n'EPI_CAUS_DREM_COF2',\n'EPI_CAUS_BDMV_COF2',\n'EPI_CAUS_JERK_COF2',\n'EPI_CAUS_SPEL_COF2',\n'EPI_CAUS5YR_COF2'],\n'HBP':[\n'CCC_HBP_COF2',\n'CCC_HBP_CHANGE_COF2',\n'HBP_AGE_COF2',\n'HBP_OTPRG_COF2',\n'HBP_MED_COF2',\n'HBP_MEDNAME_COF2',\n'HBP_MED_1_COF2',\n'HBP_MED_2_COF2',\n'HBP_MED_3_COF2',\n'HBP_MED_4_COF2',\n'HBP_MED_5_COF2',\n'HBP_MED_6_COF2',\n'HBP_MED_7_COF2',\n'HBP_MED_8_COF2',\n'HBP_MED_9_COF2',\n'HBP_MED_10_COF2',\n'HBP_MED_11_COF2',\n'HBP_MED_12_COF2',\n'HBP_MED_13_COF2',\n'HBP_MED_14_COF2',\n'HBP_MED_15_COF2',\n'HBP_MED_16_COF2',\n'HBP_MED_17_COF2',\n'HBP_MED_18_COF2',\n'HBP_MED_19_COF2',\n'HBP_MED_20_COF2',\n'HBP_MED_21_COF2',\n'HBP_MED_22_COF2',\n'HBP_MED_23_COF2',\n'HBP_MED_24_COF2',\n'HBP_MED_25_COF2',\n'HBP_MED_26_COF2',\n'HBP_MED_27_COF2',\n'HBP_MED_28_COF2',\n'HBP_MED_29_COF2',\n'HBP_MED_30_COF2',\n'HBP_MED_31_COF2',\n'HBP_MED_32_COF2',\n'HBP_MED_33_COF2',\n'HBP_MED_34_COF2',\n'HBP_MED_35_COF2',\n'HBP_MED_36_COF2',\n'HBP_MED_37_COF2',\n'HBP_MED_38_COF2',\n'HBP_MED_39_COF2',\n'HBP_MED_40_COF2',\n'HBP_EVRMED_COF2',\n'HBP_TRT_COF2',\n'HBP_EVTRT_COF2'],\n'HYP':[\n'CCC_UTHYR_COF2',\n'CCC_UTHYR_CHANGE_COF2',\n'HYP_UTHYRAGE_COF2',\n'HYP_UTHYRMED_COF2',\n'HYP_UTHYRMEDNAME_COF2',\n'HYP_UTHYRMED_1_COF2',\n'HYP_UTHYRMED_2_COF2',\n'HYP_UTHYRMED_3_COF2',\n'HYP_UTHYRMED_4_COF2',\n'HYP_UTHYRMED_5_COF2',\n'HYP_UTHYRMED_6_COF2',\n'HYP_UTHYRMED_7_COF2',\n'HYP_UTHYRMED_8_COF2',\n'HYP_UTHYRMED_9_COF2',\n'HYP_UTHYRMED_10_COF2',\n'HYP_UTHYRMED_11_COF2',\n'HYP_UTHYRMED_12_COF2',\n'HYP_UTHYRMED_13_COF2',\n'HYP_UTHYRMED_14_COF2',\n'HYP_UTHYRMED_15_COF2',\n'HYP_UTHYRMED_16_COF2',\n'HYP_UTHYRMED_17_COF2',\n'HYP_UTHYRMED_18_COF2',\n'HYP_UTHYRMED_19_COF2',\n'HYP_UTHYRMED_20_COF2',\n'HYP_UTHYRMED_21_COF2',\n'HYP_UTHYRMED_22_COF2',\n'HYP_UTHYRMED_23_COF2',\n'HYP_UTHYRMED_24_COF2',\n'HYP_UTHYRMED_25_COF2',\n'HYP_UTHYRMED_26_COF2',\n'HYP_UTHYRMED_27_COF2',\n'HYP_UTHYRMED_28_COF2',\n'HYP_UTHYRMED_29_COF2',\n'HYP_UTHYRMED_30_COF2',\n'HYP_UTHYRMED_31_COF2',\n'HYP_UTHYRMED_32_COF2',\n'HYP_UTHYRMED_33_COF2',\n'HYP_UTHYRMED_34_COF2',\n'HYP_UTHYRMED_35_COF2',\n'HYP_UTHYRMED_36_COF2',\n'HYP_UTHYRMED_37_COF2',\n'HYP_UTHYRMED_38_COF2',\n'HYP_UTHYRMED_39_COF2',\n'HYP_UTHYRMED_40_COF2',\n'HYP_UTHYREVRMED_COF2',\n'CCC_OTHYR_COF2',\n'CCC_OTHYR_CHANGE_COF2',\n'HYP_OTHYRAGE_COF2',\n'HYP_OTHYRMED_COF2',\n'HYP_OTHYRMEDNAME_COF2',\n'HYP_OTHYRMED_1_COF2',\n'HYP_OTHYRMED_2_COF2',\n'HYP_OTHYRMED_3_COF2',\n'HYP_OTHYRMED_4_COF2',\n'HYP_OTHYRMED_5_COF2',\n'HYP_OTHYRMED_6_COF2',\n'HYP_OTHYRMED_7_COF2',\n'HYP_OTHYRMED_8_COF2',\n'HYP_OTHYRMED_9_COF2',\n'HYP_OTHYRMED_10_COF2',\n'HYP_OTHYRMED_11_COF2',\n'HYP_OTHYRMED_12_COF2',\n'HYP_OTHYRMED_13_COF2',\n'HYP_OTHYRMED_14_COF2',\n'HYP_OTHYRMED_15_COF2',\n'HYP_OTHYRMED_16_COF2',\n'HYP_OTHYRMED_17_COF2',\n'HYP_OTHYRMED_18_COF2',\n'HYP_OTHYRMED_19_COF2',\n'HYP_OTHYRMED_20_COF2',\n'HYP_OTHYRMED_21_COF2',\n'HYP_OTHYRMED_22_COF2',\n'HYP_OTHYRMED_23_COF2',\n'HYP_OTHYRMED_24_COF2',\n'HYP_OTHYRMED_25_COF2',\n'HYP_OTHYRMED_26_COF2',\n'HYP_OTHYRMED_27_COF2',\n'HYP_OTHYRMED_28_COF2',\n'HYP_OTHYRMED_29_COF2',\n'HYP_OTHYRMED_30_COF2',\n'HYP_OTHYRMED_31_COF2',\n'HYP_OTHYRMED_32_COF2',\n'HYP_OTHYRMED_33_COF2',\n'HYP_OTHYRMED_34_COF2',\n'HYP_OTHYRMED_35_COF2',\n'HYP_OTHYRMED_36_COF2',\n'HYP_OTHYRMED_37_COF2',\n'HYP_OTHYRMED_38_COF2',\n'HYP_OTHYRMED_39_COF2',\n'HYP_OTHYRMED_40_COF2',\n'HYP_OTHYREVRMD_COF2'],\n'IHD':[\n'CCC_ANGI_COF2',\n'CCC_ANGI_CHANGE_COF2',\n'IHD_ANGIAGE_COF2',\n'CCC_AMI_COF2',\n'CCC_AMI_CHANGE_COF2',\n'IHD_AMIAGE_COF2',\n'IHD_CAB_COF2',\n'IHD_ANGIO_COF2',\n'IHD_BLOCK_COF2',\n'IHD_BLOCK_CHANGE_COF2',\n'IHD_MED_COF2',\n'IHD_MEDNAME_COF2',\n'IHD_MED_1_COF2',\n'IHD_MED_2_COF2',\n'IHD_MED_3_COF2',\n'IHD_MED_4_COF2',\n'IHD_MED_5_COF2',\n'IHD_MED_6_COF2',\n'IHD_MED_7_COF2',\n'IHD_MED_8_COF2',\n'IHD_MED_9_COF2',\n'IHD_MED_10_COF2',\n'IHD_MED_11_COF2',\n'IHD_MED_12_COF2',\n'IHD_MED_13_COF2',\n'IHD_MED_14_COF2',\n'IHD_MED_15_COF2',\n'IHD_MED_16_COF2',\n'IHD_MED_17_COF2',\n'IHD_MED_18_COF2',\n'IHD_MED_19_COF2',\n'IHD_MED_20_COF2',\n'IHD_MED_21_COF2',\n'IHD_MED_22_COF2',\n'IHD_MED_23_COF2',\n'IHD_MED_24_COF2',\n'IHD_MED_25_COF2',\n'IHD_MED_26_COF2',\n'IHD_MED_27_COF2',\n'IHD_MED_28_COF2',\n'IHD_MED_29_COF2',\n'IHD_MED_30_COF2',\n'IHD_MED_31_COF2',\n'IHD_MED_32_COF2',\n'IHD_MED_33_COF2',\n'IHD_MED_34_COF2',\n'IHD_MED_35_COF2',\n'IHD_MED_36_COF2',\n'IHD_MED_37_COF2',\n'IHD_MED_38_COF2',\n'IHD_MED_39_COF2',\n'IHD_MED_40_COF2',\n'IHD_EVRMED_COF2'],\n'OAR':[\n'CCC_RA_COF2',\n'CCC_RA_CHANGE_COF2'],\n'OSA':[\n'CCC_OAHAND_COF2',\n'CCC_OAHAND_CHANGE_COF2',\n'OSA_AGE_COF2',\n'OSA_LGJNT_COF2',\n'OSA_NBFNG_COF2',\n'OSA_PAINJNT_COF2',\n'OSA_LGTMB_COF2',\n'OSA_PAINTMB_COF2'],\n'OSH':[\n'CCC_OAHIP_COF2',\n'CCC_OAHIP_CHANGE_COF2',\n'OSH_AGE_COF2',\n'OSH_HIPRPL_COF2',\n'OSH_FRAC_COF2',\n'OSH_PAIN_COF2',\n'OSH_PAINSL_COF2',\n'OSH_LOM_COF2'],\n'OSK':[\n'CCC_OAKNEE_COF2',\n'CCC_OAKNEE_CHANGE_COF2',\n'OSK_AGE_COF2',\n'OSK_KNERPL_COF2',\n'OSK_PAIN_COF2',\n'OSK_PAINSL_COF2',\n'OSK_SWELL_COF2'],\n'OST':[\n'CCC_OSTPO_COF2',\n'CCC_OSTPO_CHANGE_COF2',\n'OST_AGE_COF2',\n'OST_MED_COF2',\n'OST_MEDNAME_COF2',\n'OST_MED_1_COF2',\n'OST_MED_2_COF2',\n'OST_MED_3_COF2',\n'OST_MED_4_COF2',\n'OST_MED_5_COF2',\n'OST_MED_6_COF2',\n'OST_MED_7_COF2',\n'OST_MED_8_COF2',\n'OST_MED_9_COF2',\n'OST_MED_10_COF2',\n'OST_MED_11_COF2',\n'OST_MED_12_COF2',\n'OST_MED_13_COF2',\n'OST_MED_14_COF2',\n'OST_MED_15_COF2',\n'OST_MED_16_COF2',\n'OST_MED_17_COF2',\n'OST_MED_18_COF2',\n'OST_MED_19_COF2',\n'OST_MED_20_COF2',\n'OST_MED_21_COF2',\n'OST_MED_22_COF2',\n'OST_MED_23_COF2',\n'OST_MED_24_COF2',\n'OST_MED_25_COF2',\n'OST_MED_26_COF2',\n'OST_MED_27_COF2',\n'OST_MED_28_COF2',\n'OST_MED_29_COF2',\n'OST_MED_30_COF2',\n'OST_MED_31_COF2',\n'OST_MED_32_COF2',\n'OST_MED_33_COF2',\n'OST_MED_34_COF2',\n'OST_MED_35_COF2',\n'OST_MED_36_COF2',\n'OST_MED_37_COF2',\n'OST_MED_38_COF2',\n'OST_MED_39_COF2',\n'OST_MED_40_COF2',\n'OST_EVRMD_COF2',\n'OST_BONE_COF2',\n'OST_FRAC_COF2',\n'OST_MOM_COF2',\n'OST_DAD_COF2',\n'OST_HGT_COF2',\n'OST_CST_COF2',\n'OST_CSTAGE_COF2',\n'OST_CST_MT_COF2',\n'OST_BP_COF2',\n'OST_BP_DUR_COF2',\n'OST_BCKPPM_COF2',\n'OST_BCKPLOC_COF2'],\n'PKD':[\n'CCC_PARK_COF2',\n'CCC_PARK_CHANGE_COF2',\n'PKD_AGE_COF2',\n'PKD_MED_COF2',\n'PKD_MEDNAME_COF2',\n'PKD_MED_1_COF2',\n'PKD_MED_2_COF2',\n'PKD_MED_3_COF2',\n'PKD_MED_4_COF2',\n'PKD_MED_5_COF2',\n'PKD_MED_6_COF2',\n'PKD_MED_7_COF2',\n'PKD_MED_8_COF2',\n'PKD_MED_9_COF2',\n'PKD_MED_10_COF2',\n'PKD_MED_11_COF2',\n'PKD_MED_12_COF2',\n'PKD_MED_13_COF2',\n'PKD_MED_14_COF2',\n'PKD_MED_15_COF2',\n'PKD_MED_16_COF2',\n'PKD_MED_17_COF2',\n'PKD_MED_18_COF2',\n'PKD_MED_19_COF2',\n'PKD_MED_20_COF2',\n'PKD_MED_21_COF2',\n'PKD_MED_22_COF2',\n'PKD_MED_23_COF2',\n'PKD_MED_24_COF2',\n'PKD_MED_25_COF2',\n'PKD_MED_26_COF2',\n'PKD_MED_27_COF2',\n'PKD_MED_28_COF2',\n'PKD_MED_29_COF2',\n'PKD_MED_30_COF2',\n'PKD_MED_31_COF2',\n'PKD_MED_32_COF2',\n'PKD_MED_33_COF2',\n'PKD_MED_34_COF2',\n'PKD_MED_35_COF2',\n'PKD_MED_36_COF2',\n'PKD_MED_37_COF2',\n'PKD_MED_38_COF2',\n'PKD_MED_39_COF2',\n'PKD_MED_40_COF2',\n'PKD_OTHMD_COF2',\n'PKD_EVRMED_COF2',\n'PKD_SHKE_COF2',\n'PKD_SHKSEV_COF2',\n'PKD_SMWRT_COF2',\n'PKD_BUTON_COF2',\n'PKD_VOICE_COF2',\n'PKD_FEET_COF2',\n'PKD_WALK_COF2',\n'PKD_BAL_COF2',\n'PKD_FACE_COF2',\n'PKD_RISE_COF2'],\n'ROS':[\n'ROS_PAIN_COF2',\n'ROS_HILL_COF2',\n'ROS_LEVEL_COF2',\n'ROS_BLOCK_COF2',\n'ROS_DOWLK_COF2',\n'ROS_STILL_COF2',\n'ROS_SOON_COF2',\n'ROS_LOC_COF2',\n'ROS_SEVPAIN_COF2'],\n'STR':[\n'CCC_CVA_COF2',\n'CCC_CVA_CHANGE_COF2',\n'STR_CVAAGE_COF2',\n'STR_MED_COF2',\n'STR_MEDNAME_COF2',\n'STR_MED_1_COF2',\n'STR_MED_2_COF2',\n'STR_MED_3_COF2',\n'STR_MED_4_COF2',\n'STR_MED_5_COF2',\n'STR_MED_6_COF2',\n'STR_MED_7_COF2',\n'STR_MED_8_COF2',\n'STR_MED_9_COF2',\n'STR_MED_10_COF2',\n'STR_MED_11_COF2',\n'STR_MED_12_COF2',\n'STR_MED_13_COF2',\n'STR_MED_14_COF2',\n'STR_MED_15_COF2',\n'STR_MED_16_COF2',\n'STR_MED_17_COF2',\n'STR_MED_18_COF2',\n'STR_MED_19_COF2',\n'STR_MED_20_COF2',\n'STR_MED_21_COF2',\n'STR_MED_22_COF2',\n'STR_MED_23_COF2',\n'STR_MED_24_COF2',\n'STR_MED_25_COF2',\n'STR_MED_26_COF2',\n'STR_MED_27_COF2',\n'STR_MED_28_COF2',\n'STR_MED_29_COF2',\n'STR_MED_30_COF2',\n'STR_MED_31_COF2',\n'STR_MED_32_COF2',\n'STR_MED_33_COF2',\n'STR_MED_34_COF2',\n'STR_MED_35_COF2',\n'STR_MED_36_COF2',\n'STR_MED_37_COF2',\n'STR_MED_38_COF2',\n'STR_MED_39_COF2',\n'STR_MED_40_COF2',\n'STR_OTHMD_COF2',\n'STR_EVRMD_COF2',\n'CCC_TIA_COF2',\n'CCC_TIA_CHANGE_COF2',\n'STR_TIAAGE_COF2',\n'STR_TIAMED_COF2',\n'STR_TIAMEDNAME_COF2',\n'STR_TIAMED_1_COF2',\n'STR_TIAMED_2_COF2',\n'STR_TIAMED_3_COF2',\n'STR_TIAMED_4_COF2',\n'STR_TIAMED_5_COF2',\n'STR_TIAMED_6_COF2',\n'STR_TIAMED_7_COF2',\n'STR_TIAMED_8_COF2',\n'STR_TIAMED_9_COF2',\n'STR_TIAMED_10_COF2',\n'STR_TIAMED_11_COF2',\n'STR_TIAMED_12_COF2',\n'STR_TIAMED_13_COF2',\n'STR_TIAMED_14_COF2',\n'STR_TIAMED_15_COF2',\n'STR_TIAMED_16_COF2',\n'STR_TIAMED_17_COF2',\n'STR_TIAMED_18_COF2',\n'STR_TIAMED_19_COF2',\n'STR_TIAMED_20_COF2',\n'STR_TIAMED_21_COF2',\n'STR_TIAMED_22_COF2',\n'STR_TIAMED_23_COF2',\n'STR_TIAMED_24_COF2',\n'STR_TIAMED_25_COF2',\n'STR_TIAMED_26_COF2',\n'STR_TIAMED_27_COF2',\n'STR_TIAMED_28_COF2',\n'STR_TIAMED_29_COF2',\n'STR_TIAMED_30_COF2',\n'STR_TIAMED_31_COF2',\n'STR_TIAMED_32_COF2',\n'STR_TIAMED_33_COF2',\n'STR_TIAMED_34_COF2',\n'STR_TIAMED_35_COF2',\n'STR_TIAMED_36_COF2',\n'STR_TIAMED_37_COF2',\n'STR_TIAMED_38_COF2',\n'STR_TIAMED_39_COF2',\n'STR_TIAMED_40_COF2',\n'STR_TIAOTHMD_COF2',\n'STR_TIAEVMD_COF2',\n'CCC_CVAFX_COF2',\n'STR_WEAK_COF2',\n'STR_WEAK_DUR_COF2',\n'STR_NUMB_COF2',\n'STR_NUMB_DUR_COF2',\n'STR_VIS_COF2',\n'STR_VIS_DUR_COF2',\n'STR_NOVIS_COF2',\n'STR_NOVIS_DUR_COF2',\n'STR_NOUND_COF2',\n'STR_NOUND_DUR_COF2',\n'STR_NOEXP_COF2',\n'STR_NOEXP_DUR_COF2'],\n'TBI':[\n'TBI_TYP_COF2',\n'TBI_NMBR_COF2',\n'TBI_NMBR_AGE_COF2',\n'TBI_RSLT_COF2',\n'TBI_MCR_COF2',\n'TBI_PROB_COF2']\n}\n\n  var skip=[]\n  if($(stage+'QuestionnaireRun.version').eq('4.0').value()) {\n    skip.push('AOR')\n  }\n\n  for(var key in sections) {\n    if(-1!=skip.indexOf(key)) {\n      str.push(key+':0')\n      continue\n    }\n    var rcount=0\n    var qcount=0\n    var arr=sections[key]\n    for(var i=0; i<arr.length; i++ ) {\n      var j=$(stage+arr[i])\n      if(j.isNull().value()) continue\n      qcount++      \n      rcount+=j.any('REFUSED').value()?1:0\n    }\n    if(0==qcount) {\n      str.push(key+':0')\n    } else {\n      var perc=100.0*rcount/qcount      \n      if(0<perc && 100>perc && 0!=(perc-Math.floor(perc))) {        \n        perc=perc.toFixed(3)\n      }\n      str.push(key+':'+perc)\n    }  \n  }\n\n  res=newValue('{'+str.join(',')+'}','text')\n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_qac_disease_symptoms",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$this('data_qac_disease_symptoms').isNull().and(\n  $this('stage_contraindicated_disease_symptoms').eq(0),\n  $this('stage_skip_disease_symptoms').isNull()\n).value() ? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_missing_disease_symptoms",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$('clsa-dcs-f2.ConclusionQuestionnaire:QuestionnaireRun.user').whenNull(\n  $group('Admin.Action.stage','ConclusionQuestionnaire','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_technician_conclusion_questionnaire",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var action=$group('Admin.Action.stage','ConclusionQuestionnaire','Admin.Action.actionType').asSequence()\nvar res=$group('Admin.Action.stage','ConclusionQuestionnaire','Admin.Action.eventReason').asSequence().filter(function(v,i){\n  return action.indexOf('SKIP')==i\n  }).last()\nif(res.isNull().not().value()) {\n  res=newValue(res.value().slice(14),'text')  \n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_skip_conclusion_questionnaire",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$group('clsa-dcs-f2.Participants:Admin.StageInstance.stage','ConclusionQuestionnaire',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value() \n? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_contraindicated_conclusion_questionnaire",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var res=$('clsa-dcs-f2.ConclusionQuestionnaire:PARTICIPANT_OFFERED_DOCUMENT').lowerCase()\nif(res.isNull().not().value()) {\n  var n=0\n  if(res.any('consent_form').value()) n++\n  if(res.any('physical_measures_report').value()) n++  \n  res=newValue('{documents:'+n+'}','text')\n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_qac_conclusion_questionnaire",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$this('data_qac_conclusion_questionnaire').isNull().and(\n  $this('stage_contraindicated_conclusion_questionnaire').eq(0),\n  $this('stage_skip_conclusion_questionnaire').isNull()\n).value() ? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_missing_conclusion_questionnaire",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$('clsa-dcs-f2.QuestionnaireBoneDensity:QuestionnaireRun.user').whenNull(\n  $group('Admin.Action.stage','QuestionnaireBoneDensity','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_technician_bone_density_questionnaire",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var action=$group('Admin.Action.stage','QuestionnaireBoneDensity','Admin.Action.actionType').asSequence()\nvar res=$group('Admin.Action.stage','QuestionnaireBoneDensity','Admin.Action.eventReason').asSequence().filter(function(v,i){\n  return action.indexOf('SKIP')==i\n  }).last()\nif(res.isNull().not().value()) {\n  res=newValue(res.value().slice(14),'text')  \n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_skip_bone_density_questionnaire",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$group('clsa-dcs-f2.Participants:Admin.StageInstance.stage','QuestionnaireBoneDensity',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value() \n? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_contraindicated_bone_density_questionnaire",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var p=$('clsa-dcs-f2.QuestionnaireBoneDensity:QuestionnaireMetric.missingCount').asSequence()\nvar q=$('clsa-dcs-f2.QuestionnaireBoneDensity:QuestionnaireMetric.questionCount').asSequence()\nvar res=null\nif(p.isNull().and(q.isNull()).not().value() && 0!=q.sum()){\n  res=newValue(\n    '{complete:'+\n    Math.round(q.sum().minus(p.sum()).multiply(100).div(q.sum()).value())\n    +'}','text')\n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_qac_bone_density_questionnaire",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$this('data_qac_bone_density_questionnaire').isNull().and(\n  $this('stage_contraindicated_bone_density_questionnaire').eq(0),\n  $this('stage_skip_bone_density_questionnaire').isNull()\n).value() ? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_missing_bone_density_questionnaire",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$('clsa-dcs-f2.HearingQuestionnaire:QuestionnaireRun.user').whenNull(\n  $group('Admin.Action.stage','HearingQuestionnaire','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_technician_hearing_questionnaire",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var action=$group('Admin.Action.stage','HearingQuestionnaire','Admin.Action.actionType').asSequence()\nvar res=$group('Admin.Action.stage','HearingQuestionnaire','Admin.Action.eventReason').asSequence().filter(function(v,i){\n  return action.indexOf('SKIP')==i\n  }).last()\nif(res.isNull().not().value()) {\n  res=newValue(res.value().slice(14),'text')  \n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_skip_hearing_questionnaire",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$group('clsa-dcs-f2.Participants:Admin.StageInstance.stage','HearingQuestionnaire',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value() \n? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_contraindicated_hearing_questionnaire",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var l=$('clsa-dcs-f2.HearingQuestionnaire:STATUS_EAR.LEFT_EAR_2').lowerCase()\nvar r=$('clsa-dcs-f2.HearingQuestionnaire:STATUS_EAR.RIGHT_EAR_2').lowerCase()\nvar res=null\nif(l.isNull().and(r.isNull()).not().value()){\n  res=newValue(\n    '{status_left:'+\n     (l.isNull().value()?'missing':l.value()) +\n    ',status_right:'+\n     (r.isNull().value()?'missing':r.value()) +\n    '}','text')\n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_qac_hearing_questionnaire",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$this('data_qac_hearing_questionnaire').isNull().and(\n  $this('stage_contraindicated_hearing_questionnaire').eq(0),\n  $this('stage_skip_hearing_questionnaire').isNull()\n).value() ? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_missing_hearing_questionnaire",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$('clsa-dcs-f2.TimeBasedProspectiveMemoryTask:QuestionnaireRun.user').whenNull(\n  $group('Admin.Action.stage','TimeBasedProspectiveMemoryTask','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_technician_time_based_pmt",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var action=$group('Admin.Action.stage','TimeBasedProspectiveMemoryTask','Admin.Action.actionType').asSequence()\nvar res=$group('Admin.Action.stage','TimeBasedProspectiveMemoryTask','Admin.Action.eventReason').asSequence().filter(function(v,i){\n  return action.indexOf('SKIP')==i\n  }).last()\nif(res.isNull().not().value()) {\n  res=newValue(res.value().slice(14),'text')  \n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_skip_time_based_pmt",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$group('clsa-dcs-f2.Participants:Admin.StageInstance.stage','TimeBasedProspectiveMemoryTask',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value() \n? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_contraindicated_time_based_pmt",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var stage='clsa-dcs-f2.TimeBasedProspectiveMemoryTask:'\nvar p=$(stage+'QuestionnaireMetric.missingCount').asSequence()\nvar q=$(stage+'QuestionnaireMetric.questionCount').asSequence()\nvar res=null\nif(p.isNull().and(q.isNull()).not().value() && 0!=q.sum()) {\n  var str=[]\n  str.push(\n    'complete:'+\n    Math.round(q.sum().minus(p.sum()).multiply(100).div(q.sum()).value()))\n\nvar sections={\n'TMT':[\n'TMT_PASS_COF2',\n'TMT_TST_COF2',\n'TMT_FCT_COF2',\n'TMT_DOTIM_COF2',\n'TMT_DOTIM_REP_COF2',\n'TMT_DOTIM_OBS_COF2',\n'TMT_DOENV_COF2',\n'TMT_DOENV_OBS_COF2',\n'TMT_DOCARD_COF2',\n'TMT_DOCARD_OBS_COF2',\n'TMT_ITPEXACT_COF2',\n'TMT_ACC_COF2',\n'TMT_RMD_COF2']\n}\n\n  for(var key in sections) {\n    var rcount=0\n    var qcount=0\n    var arr=sections[key]\n    for(var i=0; i<arr.length; i++ ) {\n      var j=$(stage+arr[i])\n      if(j.isNull().value()) continue\n      qcount++      \n      rcount+=j.any('REFUSED').value()?1:0\n    }\n    if(0==qcount) {\n      str.push(key+':0')\n    } else {\n      var perc=100.0*rcount/qcount      \n      if(0<perc && 100>perc && 0!=(perc-Math.floor(perc))) {        \n        perc=perc.toFixed(3)\n      }\n      str.push(key+':'+perc)\n    }  \n  }\n\n  res=newValue('{'+str.join(',')+'}','text')\n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_qac_time_based_pmt",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$this('data_qac_time_based_pmt').isNull().and(\n  $this('stage_contraindicated_time_based_pmt').eq(0),\n  $this('stage_skip_time_based_pmt').isNull()\n).value() ? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_missing_time_based_pmt",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$('clsa-dcs-f2.Frax:InstrumentRun.user').whenNull(\n  $group('Admin.Action.stage','Frax','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_technician_frax",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$group('clsa-dcs-f2.Participants:Admin.StageInstance.stage','Frax',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value() \n? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_contraindicated_frax",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var res=$('clsa-dcs-f2.Frax:RES_RESULT_FILE')\nif(res.isNull().not().value()) {\n  res=newValue('{filesize:'+res.length()+'}','text')\n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_qac_frax",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$this('data_qac_frax').isNull().and(\n  $this('stage_contraindicated_frax').eq(0),\n  $this('stage_skip_frax').isNull()\n).value() ? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_missing_frax",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var action=$group('Admin.Action.stage','Frax','Admin.Action.actionType').asSequence()\nvar res=$group('Admin.Action.stage','Frax','Admin.Action.eventReason').asSequence().filter(function(v,i){\n  return action.indexOf('SKIP')==i\n  }).last()\nif(res.isNull().not().value()) {\n  res=newValue(res.value().slice(14),'text')  \n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_skip_frax",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$('clsa-dcs-f2.SocialNetwork:QuestionnaireRun.user').whenNull(\n  $group('Admin.Action.stage','SocialNetwork','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_technician_social_network",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var action=$group('Admin.Action.stage','SocialNetwork','Admin.Action.actionType').asSequence()\nvar res=$group('Admin.Action.stage','SocialNetwork','Admin.Action.eventReason').asSequence().filter(function(v,i){\n  return action.indexOf('SKIP')==i\n  }).last()\nif(res.isNull().not().value()) {\n  res=newValue(res.value().slice(14),'text')  \n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_skip_social_network",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$group('clsa-dcs-f2.Participants:Admin.StageInstance.stage','SocialNetwork',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value() \n? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_contraindicated_social_network",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var stage='clsa-dcs-f2.SocialNetwork:'\nvar p=$(stage+'QuestionnaireMetric.missingCount').asSequence()\nvar q=$(stage+'QuestionnaireMetric.questionCount').asSequence()\nvar res=null\nif(p.isNull().and(q.isNull()).not().value() && 0!=q.sum()) {\n  var str=[]\n  str.push(\n    'complete:'+\n    Math.round(q.sum().minus(p.sum()).multiply(100).div(q.sum()).value()))\n\nvar sections={\n'GAD7':[\n'GAD_NERV_COF2',\n'GAD_STPWOR_COF2',\n'GAD_WORRTO_COF2',\n'GAD_RELAX_COF2',\n'GAD_RESTLS_COF2',\n'GAD_ANNOY_COF2',\n'GAD_AFRAID_COF2',\n'GAD_TOTAL2_COF2'],\n'SN':[\n'SN_LIVHF2_NB_COF2',\n'SN_LIVH_COF2',\n'SN_LIVH_M2R_COF2',\n'SN_LIVH_M2S_COF2',\n'SN_LIVH_M2A_COF2',\n'SN_LIVH_M3R_COF2',\n'SN_LIVH_M3S_COF2',\n'SN_LIVH_M3A_COF2',\n'SN_LIVH_M4R_COF2',\n'SN_LIVH_M4S_COF2',\n'SN_LIVH_M4A_COF2',\n'SN_LIVH_M5R_COF2',\n'SN_LIVH_M5S_COF2',\n'SN_LIVH_M5A_COF2',\n'SN_LIVH_M6R_COF2',\n'SN_LIVH_M6S_COF2',\n'SN_LIVH_M6A_COF2',\n'SN_LIVH_M7R_COF2',\n'SN_LIVH_M7S_COF2',\n'SN_LIVH_M7A_COF2',\n'SN_LIVH_M8R_COF2',\n'SN_LIVH_M8S_COF2',\n'SN_LIVH_M8A_COF2',\n'SN_LIVH_M9R_COF2',\n'SN_LIVH_M9S_COF2',\n'SN_LIVH_M9A_COF2',\n'SN_LIVH_M10R_COF2',\n'SN_LIVH_M10S_COF2',\n'SN_LIVH_M10A_COF2',\n'SN_CHILDSTP_COF2',\n'SN_DGHTRLIV_COF2',\n'SN_SONLIV_COF2',\n'SN_SEECHILD_COF2',\n'SN_SIBLIV_COF2',\n'SN_SEESIB_COF2',\n'SN_RELLIV_COF2',\n'SN_SEEREL_COF2',\n'SN_FRND_COF2',\n'SN_SEEFRND_COF2',\n'SN_SEENEIBR_COF2',\n'SN_CHILDSTP2_COF2',\n'SN_CHILDSTPNEW_COF2'],\n'SPA':[\n'SPA_SOAC_COF2',\n'SPA_OUTS_COF2',\n'SPA_CHRCH_COF2',\n'SPA_SPORT_COF2',\n'SPA_EDUC_COF2',\n'SPA_CLUB_COF2',\n'SPA_NEIBR_COF2',\n'SPA_VOLUN_COF2',\n'SPA_OTACT_COF2',\n'SPA_MORAC_COF2',\n'SPA_PREVAC_COF2',\n'SPA_COHES_COF2'],\n'SSA':[\n'SSA_CONFBED_COF2',\n'SSA_NDTLK_COF2',\n'SSA_CRISIS_COF2',\n'SSA_TYTDR_COF2',\n'SSA_SHLOV_COF2',\n'SSA_GOODT_COF2',\n'SSA_INFO_COF2',\n'SSA_CONFID_COF2',\n'SSA_HUGS_COF2',\n'SSA_RELAX_COF2',\n'SSA_MEALS_COF2',\n'SSA_ADVCE_COF2',\n'SSA_MINDOFF_COF2',\n'SSA_CHORES_COF2',\n'SSA_SHFEAR_COF2',\n'SSA_SUGG_COF2',\n'SSA_ENJOY_COF2',\n'SSA_PROBLM_COF2',\n'SSA_LOVU_COF2',\n'SSA_PET_COF2']\n}\n\n  var skip=[]\n  if($(stage+'QuestionnaireRun.version').any('4.0').value()) {\n    skip.push('GAD7')\n  }\n\n  for(var key in sections) {\n    if(-1!=skip.indexOf(key)) {\n      str.push(key+':0')\n      continue\n    }\n    var rcount=0\n    var qcount=0\n    var arr=sections[key]\n    for(var i=0; i<arr.length; i++ ) {\n      var j=$(stage+arr[i])\n      if(j.isNull().value()) continue\n      qcount++      \n      rcount+=j.any('REFUSED').value()?1:0\n    }\n    if(0==qcount) {\n      str.push(key+':0')\n    } else {\n      var perc=100.0*rcount/qcount      \n      if(0<perc && 100>perc && 0!=(perc-Math.floor(perc))) {        \n        perc=perc.toFixed(3)\n      }\n      str.push(key+':'+perc)\n    }  \n  }\n\n  res=newValue('{'+str.join(',')+'}','text')\n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_qac_social_network",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$this('data_qac_social_network').isNull().and(\n  $this('stage_contraindicated_social_network').eq(0),\n  $this('stage_skip_social_network').isNull()\n).value() ? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_missing_social_network",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$('clsa-dcs-f2.GenHealth:QuestionnaireRun.user').whenNull(\n  $group('Admin.Action.stage','GenHealth','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_technician_general_health",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var action=$group('Admin.Action.stage','GenHealth','Admin.Action.actionType').asSequence()\nvar res=$group('Admin.Action.stage','GenHealth','Admin.Action.eventReason').asSequence().filter(function(v,i){\n  return action.indexOf('SKIP')==i\n  }).last()\nif(res.isNull().not().value()) {\n  res=newValue(res.value().slice(14),'text')  \n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_skip_general_health",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$group('clsa-dcs-f2.Participants:Admin.StageInstance.stage','GenHealth',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value() \n? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_contraindicated_general_health",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var stage='clsa-dcs-f2.GenHealth:'\nvar p=$(stage+'QuestionnaireMetric.missingCount').asSequence()\nvar q=$(stage+'QuestionnaireMetric.questionCount').asSequence()\nvar res=null\nif(p.isNull().and(q.isNull()).not().value() && 0!=q.sum()) {\n  var str=[]\n  str.push(\n    'complete:'+\n    Math.round(q.sum().minus(p.sum()).multiply(100).div(q.sum()).value()))\n\nvar sections={\n'HRG':[\n'HRG_HRG_COF2',\n'HRG_NOIS_COF2',\n'HRG_AID_COF2',\n'HRG_USE_COF2',\n'HRG_PROB_EMBA_COF2',\n'HRG_PROB_FRST_COF2',\n'HRG_PROB_DIFF_COF2',\n'HRG_PROB_HACP_COF2',\n'HRG_PROB_VIST_COF2',\n'HRG_PROB_MEET_COF2',\n'HRG_PROB_ARGU_COF2',\n'HRG_PROB_LSTN_COF2',\n'HRG_PROB_LIFE_COF2',\n'HRG_PROB_FRND_COF2'],\n'HUP':[\n'HUP_FREE_COF2',\n'HUP_INTNSTY_COF2',\n'HUP_PRVACT_COF2'],\n'NUR':[\n'NUR_GLSWT_COF2',\n'NUR_WTGL_COF2',\n'NUR_WTL_COF2',\n'NUR_WTG_COF2',\n'NUR_SKPMLS_COF2',\n'NUR_APPTT_COF2',\n'NUR_SWLLFD_COF2',\n'NUR_FRTVEG_COF2',\n'NUR_DRKFLD_COF2',\n'NUR_MLSMN_COF2',\n'NUR_CKMEALS_COF2',\n'NUR_MLPREP_COF2',\n'NUR_MLPREP_OTH_COF2',\n'NUR_FASTFD_NB_COF2',\n'NUR_NOTENFD_COF2',\n'NUR_RCOFF_COF2',\n'NUR_DCOFF_COF2',\n'NUR_BTEA_COF2',\n'NUR_GTEA_COF2',\n'NUR_OTEA_COF2'],\n'RES':[\n'RES_ABLE_COF2',\n'RES_DEAL_COF2',\n'RES_HUMR_COF2',\n'RES_COPE_COF2',\n'RES_BOUC_COF2',\n'RES_GOAL_COF2',\n'RES_PRESR_COF2',\n'RES_FAIL_COF2',\n'RES_STRONG_COF2',\n'RES_UNPLES_COF2',\n'RES_FAIL_ COF2'],\n'VIS':[\n'VIS_SGHT_COF2',\n'VIS_AID_COF2',\n'VIS_USE_COF2']  \n}\n\n  var skip=[]\n  if($(stage+'QuestionnaireRun.version').any('2.0','2.1').value()) {\n    skip.push('RES')\n  }\n\n  for(var key in sections) {\n    if(-1!=skip.indexOf(key)) {\n      str.push(key+':0')\n      continue\n    }\n    var rcount=0\n    var qcount=0\n    var arr=sections[key]\n    for(var i=0; i<arr.length; i++ ) {\n      var j=$(stage+arr[i])\n      if(j.isNull().value()) continue\n      qcount++      \n      rcount+=j.any('REFUSED').value()?1:0\n    }\n    if(0==qcount) {\n      str.push(key+':0')\n    } else {\n      var perc=100.0*rcount/qcount      \n      if(0<perc && 100>perc && 0!=(perc-Math.floor(perc))) {        \n        perc=perc.toFixed(3)\n      }\n      str.push(key+':'+perc)\n    }  \n  }\n\n  res=newValue('{'+str.join(',')+'}','text')\n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_qac_general_health",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$this('data_qac_general_health').isNull().and(\n  $this('stage_contraindicated_general_health').eq(0),\n  $this('stage_skip_general_health').isNull()\n).value() ? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_missing_general_health",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$('clsa-dcs-f2.OSIPV:QuestionnaireRun.user').whenNull(\n  $group('Admin.Action.stage','OSIPV','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_technician_osipv",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var action=$group('Admin.Action.stage','OSIPV','Admin.Action.actionType').asSequence()\nvar res=$group('Admin.Action.stage','OSIPV','Admin.Action.eventReason').asSequence().filter(function(v,i){\n  return action.indexOf('SKIP')==i\n  }).last()\nif(res.isNull().not().value()) {\n  res=newValue(res.value().slice(14),'text')  \n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_skip_osipv",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$group('clsa-dcs-f2.Participants:Admin.StageInstance.stage','OSIPV',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value() \n? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_contraindicated_osipv",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var stage='clsa-dcs-f2.OSIPV:'\nvar p=$(stage+'QuestionnaireMetric.missingCount').asSequence()\nvar q=$(stage+'QuestionnaireMetric.questionCount').asSequence()\nvar res=null\nif(p.isNull().and(q.isNull()).not().value() && 0!=q.sum()) {\n  var str=[]\n  str.push(\n    'complete:'+\n    Math.round(q.sum().minus(p.sum()).multiply(100).div(q.sum()).value()))\n\nvar sections={\n'IPV':[\n'IPV_ADULTINT_COF2',\n'IPV_RELATN_COF2',\n'IPV_AFRAID_COF2',\n'IPV_PASTFRAID_COF2',\n'IPV_BLAME_COF2',\n'IPV_BLAMEAMT_COF2',\n'IPV_SHOOK_COF2',\n'IPV_SHOOKAMT_COF2',\n'IPV_CRAZY_COF2',\n'IPV_CRAZYAMT_COF2',\n'IPV_THREAT_COF2',\n'IPV_THREATAMT_COF2',\n'IPV_PERFORM_COF2',\n'IPV_PERFORMAMT_COF2',\n'IPV_FOLLOW_COF2',\n'IPV_FOLLOWAMT_COF2',\n'IPV_HARM_COF2',\n'IPV_HARMAMT_COF2',\n'IPV_CHOKE_COF2',\n'IPV_CHOKEAMT_COF2',\n'IPV_FORCE_COF2',\n'IPV_FORCEAMT_COF2',\n'IPV_HARASS_COF2',\n'IPV_HARASSAMT_COF2',\n'IPV_STUPID_COF2',\n'IPV_STUPIDAMT_COF2',\n'IPV_HIT_COF2',\n'IPV_HITAMT_COF2',\n'IPV_KEPT_COF2',\n'IPV_KEPTAMT_COF2',\n'IPV_LOCK_COF2',\n'IPV_LOCKAMT_COF2',\n'IPV_ACCESS_COF2',\n'IPV_ACCESSAMT_COF2'],\n'ORH':[\n'ORH_HLTH_COF2',\n'ORH_TEETH_COF2',\n'ORH_TEETHCHANGE_COF2',\n'ORH_TETH20_COF2',\n'ORH_DENT_COF2',\n'ORH_DNUSE_COF2',\n'ORH_UNCEAT_COF2',\n'ORH_EXP_DNB_COF2',\n'ORH_EXP_DNBTTH_COF2',\n'ORH_DNVST_COF2',\n'ORH_WYNDN_COF2',\n'ORH_TYPINS_COF2',\n'ORH_COST_COF2',\n'ORH_PRBHT_COF2',\n'ORH_BRUSDN_COF2',\n'ORH_WHO_COF2',\n'ORH_OFTN_COF2',\n'ORH_FLSFQ_COF2'],\n'SLE':[\n'SLE_QLTY_COF2',\n'SLS_HOUR_COF2',\n'SLE_30MIN_COF2',\n'SLE_30DUR_COF2',\n'SLE_30INTRF_COF2',\n'SLE_MIDFQ_COF2',\n'SLE_MIDDUR_COF2',\n'SLE_MIDINTRF_COF2',\n'SLE_STAYFQ_COF2',\n'SLE_STAYDUR_COF2',\n'SLE_STAYINTRF_COF2',\n'SLE_DREAM_COF2',\n'SLE_DRMDUR_COF2',\n'SLE_LEGS_COF2',\n'SLE_LGURG_COF2',\n'SLE_LGDUR_COF2',\n'SLE_LGFQ_COF2',\n'SLE_LGIMPR_COF2',\n'SLE_LGEVE_COF2',\n'SNO_SNORE_COF2',\n'SNO_STOPBREATH_COF2']  \n}\n\n  var skip=[]\n  if($(stage+'QuestionnaireRun.version').eq('2.0').value()) {\n    skip.push('IPV')\n  }\n\n  for(var key in sections) {\n    if(-1!=skip.indexOf(key)) {\n      str.push(key+':0')\n      continue\n    }    \n    var rcount=0\n    var qcount=0\n    var arr=sections[key]\n    for(var i=0; i<arr.length; i++ ) {\n      var j=$(stage+arr[i])\n      if(j.isNull().value()) continue\n      qcount++      \n      rcount+=j.any('REFUSED').value()?1:0\n    }\n    if(0==qcount) {\n      str.push(key+':0')\n    } else {\n      var perc=100.0*rcount/qcount      \n      if(0<perc && 100>perc && 0!=(perc-Math.floor(perc))) {        \n        perc=perc.toFixed(3)\n      }\n      str.push(key+':'+perc)\n    }  \n  }\n\n  res=newValue('{'+str.join(',')+'}','text')\n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_qac_osipv",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$this('data_qac_osipv').isNull().and(\n  $this('stage_contraindicated_osipv').eq(0),\n  $this('stage_skip_osipv').isNull()\n).value() ? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_missing_osipv",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$('clsa-dcs-f2.Urine:QuestionnaireRun.user').whenNull(\n  $group('Admin.Action.stage','Urine','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_technician_urine",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var action=$group('Admin.Action.stage','Urine','Admin.Action.actionType').asSequence()\nvar res=$group('Admin.Action.stage','Urine','Admin.Action.eventReason').asSequence().filter(function(v,i){\n  return action.indexOf('SKIP')==i\n  }).last()\nif(res.isNull().not().value()) {\n  res=newValue(res.value().slice(14),'text')  \n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_skip_urine",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$group('clsa-dcs-f2.Participants:Admin.StageInstance.stage','Urine',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value() \n? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_contraindicated_urine",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var stage='clsa-dcs-f2.Urine:'\nvar p=$(stage+'QuestionnaireMetric.missingCount').asSequence()\nvar q=$(stage+'QuestionnaireMetric.questionCount').asSequence()\nvar res=null\nif(p.isNull().and(q.isNull()).not().value() && 0!=q.sum()) {\n  var str=[]\n  str.push(\n    'complete:'+\n    Math.round(q.sum().minus(p.sum()).multiply(100).div(q.sum()).value()))\n\nvar sections={\n'URINE':[\n'FOOD_DRINK_24_U',\n'CAFFEINE_24_U',\n'TOBACCO_24_U',\n'ALCOHOL_24_U',\n'CURRENTLY_MENSTRUAL_U',\n'AGREE_URINE_U',\n'WHY_NOT_AGREE_URINE_U',\n'PART_DECLINED_URINE_U',\n'TECH_REASON_URINE_U']\n}\n\n  for(var key in sections) {\n    var rcount=0\n    var qcount=0\n    var arr=sections[key]\n    for(var i=0; i<arr.length; i++ ) {\n      var j=$(stage+arr[i])\n      if(j.isNull().value()) continue\n      qcount++      \n      rcount+=j.any('REFUSED').value()?1:0\n    }\n    if(0==qcount) {\n      str.push(key+':0')\n    } else {\n      var perc=100.0*rcount/qcount      \n      if(0<perc && 100>perc && 0!=(perc-Math.floor(perc))) {        \n        perc=perc.toFixed(3)\n      }\n      str.push(key+':'+perc)\n    }  \n  }\n\n  res=newValue('{'+str.join(',')+'}','text')\n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_qac_urine",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$this('data_qac_urine').isNull().and(\n  $this('stage_contraindicated_urine').eq(0),\n  $this('stage_skip_urine').isNull()\n).value() ? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_missing_urine",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var stage=$this('group_blood')\nvar res=null\nif(stage.isNull().not().value()) {\n  stage=stage.value()\n  res=$('clsa-dcs-f2.'+stage+':QuestionnaireRun.user').whenNull(\n    $group('Admin.Action.stage',stage,'Admin.Action.user').asSequence().last()).lowerCase()\n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_technician_blood",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var stage=$this('group_blood')\nvar res=null\nif(stage.isNull().not().value()) {\n  stage=stage.value()\n  var action=$group('Admin.Action.stage',stage,'Admin.Action.actionType').asSequence()\n  var res=$group('Admin.Action.stage',stage,'Admin.Action.eventReason').asSequence().filter(function(v,i){\n    return action.indexOf('SKIP')==i\n    }).last()\n  if(res.isNull().not().value()) {\n    res=newValue(res.value().slice(14),'text')\n  }\n}  \nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_skip_blood",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var stage=$this('group_blood')\nvar res=null\nif(stage.isNull().not().value()) {\n  stage='clsa-dcs-f2.'+stage.value()+':'\n  var p=$(stage+'QuestionnaireMetric.missingCount').asSequence()\n  var q=$(stage+'QuestionnaireMetric.questionCount').asSequence()\n  if(p.isNull().and(q.isNull()).not().value() && 0!=q.sum()) {\n    var str=[]\n    str.push(\n      'complete:'+\n      Math.round(q.sum().minus(p.sum()).multiply(100).div(q.sum()).value()))\n\nvar sections={\n'BLOOD':[\n'AGREE_BS_B',\n'ALCOHOL_24_B',\n'BLOOD_COLLECTED_B',\n'CAFFEINE_24_B',\n'CURRENTLY_MENSTRUAL_B',\n'DECLINE_POST_B',\n'FIRST_ATTEMPT_B',\n'FOOD_DRINK_24_B',\n'NEEDLE_B',\n'NOTE_DRAW_SITE_B.FIBROSED_INFLAMED',\n'NOTE_DRAW_SITE_B.HEMATOMA',\n'NOTE_DRAW_SITE_B.PARALYZED',\n'NOTE_DRAW_SITE_B.PETECHIAE',\n'NOTE_DRAW_SITE_B.PICC_LINE',\n'NOTE_DRAW_SITE_B.RED_SWOLLEN',\n'NOTE_DRAW_SITE_B.SCARRING',\n'NOTE_DRAW_SITE_B.SCLEROTIC_HARDVEINS',\n'NOTE_DRAW_SITE_B.SEVERE_PROBLEM',\n'NOTE_DRAW_SITE_B.VASCULAR_GRAFT',\n'NOTE_OTHER_B.OTHER',\n'PART_DECLINED_B',\n'PART_POSTPONED_B',\n'SIT_RECLIN_B',\n'TECH_REASON_B',\n'TOBACCO_24_B',\n'WHICH_ARM_CHOSEN_2_B',\n'WHY_NOT_AGREE_BLOOD_B',\n'WHY_NO_BLOOD_B']\n}\n\n    for(var key in sections) {\n      var rcount=0\n      var qcount=0\n      var arr=sections[key]\n      for(var i=0; i<arr.length; i++ ) {\n        var j=$(stage+arr[i])\n        if(j.isNull().value()) continue\n        qcount++      \n        rcount+=j.any('REFUSED').value()?1:0\n      }\n      if(0==qcount) {\n        str.push(key+':0')\n      } else {\n        var perc=100.0*rcount/qcount      \n        if(0<perc && 100>perc && 0!=(perc-Math.floor(perc))) {        \n          perc=perc.toFixed(3)\n        }\n        str.push(key+':'+perc)\n      }\n    }\n    res=newValue('{'+str.join(',')+'}','text')\n  }\n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_qac_blood",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$this('data_qac_blood').isNull().and(\n  $this('stage_contraindicated_blood').eq(0),\n  $this('stage_skip_blood').isNull()\n).value() ? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_missing_blood",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var stage=$this('group_blood')\nvar res=null\nif(stage.isNull().not().value()) {\n  stage=stage.value()\n  res=$group('clsa-dcs-f2.Participants:Admin.StageInstance.stage',stage,'Admin.StageInstance.lastState').whenNull(\n      $group('clsa-dcs-f2.Participants:Admin.StageInstance.stage',stage,'Admin.StageInstance.lastState')).any(\n        'Contraindicated','NotApplicable').value() ? 1 : 0\n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_contraindicated_blood",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var res=null\nvar u=$group('Admin.StageInstance.stage','Blood','Admin.StageInstance.lastState').asSequence().last()\nvar v=$group('Admin.StageInstance.stage','Blood2','Admin.StageInstance.lastState').asSequence().last()\nvar p=$('Admin.StageInstance.stage').any('Blood').and(u.isNull().not()).value()\nvar q=$('Admin.StageInstance.stage').any('Blood2').and(v.isNull().not()).value()\nif(p && !q) {\n  res=newValue( 'Blood', 'text') \n} else if(q && !p) {\n  res=newValue( 'Blood2', 'text') \n} else if(p && q) {\n  if(v.any('NotApplicable').or(u.any('Completed')).value()) {\n    res=newValue('Blood', 'text')\n  } else { \n    res=newValue('Blood2', 'text')\n  }\n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "group_blood",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$('clsa-dcs-f2.Deviation_AE_CRF:QuestionnaireRun.user').whenNull(\n  $group('Admin.Action.stage','Deviation_AE_CRF','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_technician_deviation_aecrf",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var action=$group('Admin.Action.stage','Deviation_AE_CRF','Admin.Action.actionType').asSequence()\nvar res=$group('Admin.Action.stage','Deviation_AE_CRF','Admin.Action.eventReason').asSequence().filter(function(v,i){\n  return action.indexOf('SKIP')==i\n  }).last()\nif(res.isNull().not().value()) {\n  res=newValue(res.value().slice(14),'text')  \n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_skip_deviation_aecrf",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$group('clsa-dcs-f2.Participants:Admin.StageInstance.stage','Deviation_AE_CRF',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value() \n? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_contraindicated_deviation_aecrf",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var stage='clsa-dcs-f2.Deviation_AE_CRF:'\nvar p=$(stage+'QuestionnaireMetric.missingCount').asSequence()\nvar q=$(stage+'QuestionnaireMetric.questionCount').asSequence()\nvar res=null\nif(p.isNull().and(q.isNull()).not().value() && 0!=q.sum()) {\n  var str=[]\n  str.push(\n    'complete:'+\n    Math.round(q.sum().minus(p.sum()).multiply(100).div(q.sum()).value()))\n\nvar sections={\n'Deviation':[\n'DEV_DCS_COF2',\n'DEV_WHAT_COF2',\n'DEV_REAS_COF2',\n'DEV_ORDR_COF2',\n'DEV_ORDR2_COF2',\n'DEV_ORDR3_COF2',\n'DEV_ORDR4_COF2',\n'DEV_ORDR5_COF2',\n'DEV_BLWHEN_COF2',\n'DAE_DCS_COF2',\n'DAE_WHAT_COF2',\n'DAE_FLWUP_COF2',\n'DAE_COMM_COF2',\n'CRF_DCS_COF2',\n'CRF_NCC_COF2',\n'CRF-REAS_COF2',\n'DEV_ORDRTYP_COF2',\n'DEV_ORDRRM_COF2']\n}\n\n  for(var key in sections) {\n    var rcount=0\n    var qcount=0\n    var arr=sections[key]\n    for(var i=0; i<arr.length; i++ ) {\n      var j=$(stage+arr[i])\n      if(j.isNull().value()) continue\n      qcount++      \n      rcount+=j.any('REFUSED').value()?1:0\n    }\n    if(0==qcount) {\n      str.push(key+':0')\n    } else {\n      var perc=100.0*rcount/qcount      \n      if(0<perc && 100>perc && 0!=(perc-Math.floor(perc))) {        \n        perc=perc.toFixed(3)\n      }\n      str.push(key+':'+perc)\n    }  \n  }\n\n  res=newValue('{'+str.join(',')+'}','text')\n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_qac_deviation_aecrf",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$this('data_qac_deviation_aecrf').isNull().and(\n  $this('stage_contraindicated_deviation_aecrf').eq(0),\n  $this('stage_skip_deviation_aecrf').isNull()\n).value() ? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_missing_deviation_aecrf",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$('clsa-dcs-f2.QualityAssuranceIH:QuestionnaireRun.user').whenNull(\n  $group('Admin.Action.stage','QualityAssuranceIH','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_technician_quality_assurance_inhome",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var action=$group('Admin.Action.stage','QualityAssuranceIH','Admin.Action.actionType').asSequence()\nvar res=$group('Admin.Action.stage','QualityAssuranceIH','Admin.Action.eventReason').asSequence().filter(function(v,i){\n  return action.indexOf('SKIP')==i\n  }).last()\nif(res.isNull().not().value()) {\n  res=newValue(res.value().slice(14),'text')  \n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_skip_quality_assurance_inhome",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$group('clsa-dcs-f2.Participants:Admin.StageInstance.stage','QualityAssuranceIH',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value() \n? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_contraindicated_quality_assurance_inhome",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var stage='clsa-dcs-f2.QualityAssuranceIH:'\nvar p=$(stage+'QuestionnaireMetric.missingCount').asSequence()\nvar q=$(stage+'QuestionnaireMetric.questionCount').asSequence()\nvar res=null\nif(p.isNull().and(q.isNull()).not().value() && 0!=q.sum()) {\n  var str=[]\n  str.push(\n    'complete:'+\n    Math.round(q.sum().minus(p.sum()).multiply(100).div(q.sum()).value()))\n\nvar sections={\n'QAH_COF2':[\n'QAH_INTIME_COF2',\n'QAH_FRIEND2_COF2',\n'QAH_INKNO_COF2',\n'QAH_INSAS_COF2',\n'QAH_ININFO_COF2',\n'QAH_INMED_COF2',\n'QAH_INANY_COF2',\n'QAH_EXPER_COF2',\n'QAH_IMPRV_COF2',\n'QAH_INTIME2_COF2',\n'QAH_INACC_COF2',\n'QAH_HIN_COF2',\n'QAH_INMEM_COF2',\n'QAH_18MO_COF2',\n'QAH_COM_COF2',\n'QAH_TWOVIS_COF2']  \n}\n\n  for(var key in sections) {\n    var rcount=0\n    var qcount=0\n    var arr=sections[key]\n    for(var i=0; i<arr.length; i++ ) {\n      var j=$(stage+arr[i])\n      if(j.isNull().value()) continue\n      qcount++      \n      rcount+=j.any('REFUSED').value()?1:0\n    }\n    if(0==qcount) {\n      str.push(key+':0')\n    } else {\n      var perc=100.0*rcount/qcount      \n      if(0<perc && 100>perc && 0!=(perc-Math.floor(perc))) {        \n        perc=perc.toFixed(3)\n      }\n      str.push(key+':'+perc)\n    }  \n  }\n\n  res=newValue('{'+str.join(',')+'}','text')\n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_qac_quality_assurance_inhome",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$this('data_qac_quality_assurance_inhome').isNull().and(\n  $this('stage_contraindicated_quality_assurance_inhome').eq(0),\n  $this('stage_skip_quality_assurance_inhome').isNull()\n).value() ? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_missing_quality_assurance_inhome",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$('clsa-dcs-f2.NeuropsychologicalBatteryScoring:QuestionnaireRun.user').whenNull(\n  $group('Admin.Action.stage','NeuropsychologicalBatteryScoring','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_technician_neuropsychological_battery_scoring",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var action=$group('Admin.Action.stage','NeuropsychologicalBatteryScoring','Admin.Action.actionType').asSequence()\nvar res=$group('Admin.Action.stage','NeuropsychologicalBatteryScoring','Admin.Action.eventReason').asSequence().filter(function(v,i){\n  return action.indexOf('SKIP')==i\n  }).last()\nif(res.isNull().not().value()) {\n  res=newValue(res.value().slice(14),'text')  \n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_skip_neuropsychological_battery_scoring",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$group('clsa-dcs-f2.Participants:Admin.StageInstance.stage','NeuropsychologicalBatteryScoring',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value() \n? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_contraindicated_neuropsychological_battery_scoring",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var p=$('clsa-dcs-f2.NeuropsychologicalBatteryScoring:QuestionnaireMetric.missingCount').asSequence()\nvar q=$('clsa-dcs-f2.NeuropsychologicalBatteryScoring:QuestionnaireMetric.questionCount').asSequence()\nvar res=null\nif(p.isNull().and(q.isNull()).not().value() && 0!=q.sum()){\n  res=newValue(\n    '{complete:'+\n    Math.round(q.sum().minus(p.sum()).multiply(100).div(q.sum()).value())\n    +'}','text')\n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_qac_neuropsychological_battery_scoring",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$this('data_qac_neuropsychological_battery_scoring').isNull().and(\n  $this('stage_contraindicated_neuropsychological_battery_scoring').eq(0),\n  $this('stage_skip_neuropsychological_battery_scoring').isNull()\n).value() ? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_missing_neuropsychological_battery_scoring",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$this('stage_technician_stroop_fas')"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_technician_cognition_recording",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$this('stage_contraindicated_stroop_fas')"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_contraindicated_cognition_recording",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$this('stage_skip_stroop_fas')"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_skip_cognition_recording",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var res=null\nvar d=$('clsa-dcs-f2.StroopFAS:STP_DOTREC_COF2')\nvar w=$('clsa-dcs-f2.StroopFAS:STP_WORREC_COF2')\nvar c=$('clsa-dcs-f2.StroopFAS:STP_COLREC_COF2')\nvar f=$('clsa-dcs-f2.StroopFAS:FAS_FREC_COF2')\nvar a=$('clsa-dcs-f2.StroopFAS:FAS_AREC_COF2')\nvar s=$('clsa-dcs-f2.StroopFAS:FAS_SREC_COF2')\nif(!d.isNull().and(w.isNull(),c.isNull,f.isNull(),a.isNull(),s.isNull()).value()) {\n  var str=[]\n  str.push('filesize_dot:'+(d.isNull().value()?'0':d.length().value()))\n  str.push('filesize_wor:'+(w.isNull().value()?'0':w.length().value()))\n  str.push('filesize_col:'+(c.isNull().value()?'0':c.length().value()))\n  str.push('filesize_f:'+(f.isNull().value()?'0':f.length().value()))\n  str.push('filesize_a:'+(a.isNull().value()?'0':a.length().value()))\n  str.push('filesize_s:'+(s.isNull().value()?'0':s.length().value()))    \n  res=newValue('{'+str.join(',')+'}','text')\n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_qac_cognition_recording",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$this('data_qac_cognition_recording').isNull().and(\n  $this('stage_contraindicated_cognition_recording').eq(0),\n  $this('stage_skip_cognition_recording').isNull()\n).value() ? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_missing_cognition_recording",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$('clsa-dcs-f2.CDTT:InstrumentRun.user').whenNull(\n  $group('Admin.Action.stage','CDTT','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_technician_cdtt",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var action=$group('Admin.Action.stage','CDTT','Admin.Action.actionType').asSequence()\nvar res=$group('Admin.Action.stage','CDTT','Admin.Action.eventReason').asSequence().filter(function(v,i){\n  return action.indexOf('SKIP')==i\n  }).last()\nif(res.isNull().not().value()) {\n  res=newValue(res.value().slice(14),'text')  \n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_skip_cdtt",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$group('clsa-dcs-f2.Participants:Admin.StageInstance.stage','CDTT',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value()\n? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_contraindicated_cdtt",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var f=$('clsa-dcs-f2.CDTT:RESULT_FILE')\nvar res=null\nif(f.isNull().not().value()) {\n  res = newValue('{filesize:'+f.length()+'}','text')\n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_qac_cdtt",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$this('data_qac_cdtt').isNull().and(\n  $this('stage_contraindicated_cdtt').eq(0),\n  $this('stage_skip_cdtt').isNull()\n).value() ? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_missing_cdtt",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$('clsa-dcs-f2.StroopFAS:QuestionnaireRun.user').whenNull(\n  $group('Admin.Action.stage','StroopFAS','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_technician_stroop",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$group('clsa-dcs-f2.Participants:Admin.StageInstance.stage','StroopFAS',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value()\n? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_contraindicated_stroop",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var action=$group('Admin.Action.stage','StroopFAS','Admin.Action.actionType').asSequence()\nvar res=$group('Admin.Action.stage','StroopFAS','Admin.Action.eventReason').asSequence().filter(function(v,i){\n    return action.indexOf('SKIP')==i\n  }).last()\nif(res.isNull().not().value()) {\n  res=newValue(res.value().slice(14),'text')\n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_skip_stroop",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$this('data_qac_stroop').isNull().and(\n  $this('stage_contraindicated_stroop').eq(0),\n  $this('stage_skip_stroop').isNull()\n).value() ? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_missing_stroop",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var stage='clsa-dcs-f2.StroopFAS:'\nvar p=$(stage+'QuestionnaireMetric.missingCount').asSequence()\nvar q=$(stage+'QuestionnaireMetric.questionCount').asSequence()\nvar res=null\nif(p.isNull().and(q.isNull()).not().value() && 0!=q.sum()) {\n  var str=[]\n  str.push(\n    'complete:'+\n    Math.round(q.sum().minus(p.sum()).multiply(100).div(q.sum()).value()))\n\nvar sections={\n'STP':[\n'NEUR_CONSREC_COF2',\n'STP_DOT_COF2',\n'STP_DOTRPT_COF2',\n'STP_DOTFCTR_COF2',\n'STP_DOTLST_COF2',\n'STP_DOTRECR_COF2',\n'STP_DOTABLE_COF2',\n'STP_DOTTIMEN_COF2',\n'STP_WOR_COF2',\n'STP_WORRPT_COF2',\n'STP_WORFCTR_COF2',\n'STP_WORLST_COF2',\n'STP_WORRECR_COF2',\n'STP_WORABLE_COF2',\n'STP_WORTIMEN_COF2',\n'STP_COL_COF2',\n'STP_COLRPT_COF2',\n'STP_COLFCTR_COF2',\n'STP_COLLST_COF2',\n'STP_COLRECR_COF2',\n'STP_COLABLE_COF2',\n'STP_COLTIMEN_COF2',\n'STP_COLCOMM_COF2']\n}\n\n  for(var key in sections) {\n    var rcount=0\n    var qcount=0\n    var arr=sections[key]\n    for(var i=0; i<arr.length; i++ ) {\n      var j=$(stage+arr[i])\n      if(j.isNull().value()) continue\n      qcount++      \n      rcount+=j.any('REFUSED').value()?1:0\n    }\n    if(0==qcount) {\n      str.push(key+':0')\n    } else {\n      var perc=100.0*rcount/qcount      \n      if(0<perc && 100>perc && 0!=(perc-Math.floor(perc))) {        \n        perc=perc.toFixed(3)\n      }\n      str.push(key+':'+perc)\n    }  \n  }\n\n  res=newValue('{'+str.join(',')+'}','text')\n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_qac_stroop",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$('clsa-dcs-f2.StroopFAS:QuestionnaireRun.user').whenNull(\n  $group('Admin.Action.stage','StroopFAS','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_technician_fas",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$group('clsa-dcs-f2.Participants:Admin.StageInstance.stage','StroopFAS',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value()\n? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_contraindicated_fas",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var action=$group('Admin.Action.stage','StroopFAS','Admin.Action.actionType').asSequence()\nvar res=$group('Admin.Action.stage','StroopFAS','Admin.Action.eventReason').asSequence().filter(function(v,i){\n    return action.indexOf('SKIP')==i\n  }).last()\nif(res.isNull().not().value()) {\n  res=newValue(res.value().slice(14),'text')\n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_skip_fas",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$this('data_qac_fas').isNull().and(\n  $this('stage_contraindicated_fas').eq(0),\n  $this('stage_skip_fas').isNull()\n).value() ? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_missing_fas",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var stage='clsa-dcs-f2.StroopFAS:'\nvar p=$(stage+'QuestionnaireMetric.missingCount').asSequence()\nvar q=$(stage+'QuestionnaireMetric.questionCount').asSequence()\nvar res=null\nif(p.isNull().and(q.isNull()).not().value() && 0!=q.sum()) {\n  var str=[]\n  str.push(\n    'complete:'+\n    Math.round(q.sum().minus(p.sum()).multiply(100).div(q.sum()).value()))\n\nvar sections={\n'FAS':[\n'FAS_INSTRDY_COF2',\n'FAS_INSTRPT_COF2',\n'FAS_INSTFCTR_COF2',\n'FAS_INSTLST_COF2',\n'FAS_FRECR_COF2',\n'FAS_FCOMP_COF2',\n'FAS_FCOMP_COMM_COF2',\n'FAS_ARECR_COF2',\n'FAS_ACOMP_COF2',\n'FAS_ACOMP_COMM_COF2',\n'FAS_SRECR_COF2',\n'FAS_SCOMP_COF2',\n'FAS_SCOMP_COMM_COF2']\n}\n\n  for(var key in sections) {\n    var rcount=0\n    var qcount=0\n    var arr=sections[key]\n    for(var i=0; i<arr.length; i++ ) {\n      var j=$(stage+arr[i])\n      if(j.isNull().value()) continue\n      qcount++      \n      rcount+=j.any('REFUSED').value()?1:0\n    }\n    if(0==qcount) {\n      str.push(key+':0')\n    } else {\n      var perc=100.0*rcount/qcount      \n      if(0<perc && 100>perc && 0!=(perc-Math.floor(perc))) {        \n        perc=perc.toFixed(3)\n      }\n      str.push(key+':'+perc)\n    }  \n  }\n\n  res=newValue('{'+str.join(',')+'}','text')\n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_qac_fas",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "res=null\nvar c=0\nvar types=['forearm','dual_hip','whole_body','lateral','spine']\nfor(var i=0;i<types.length;i++) {\n  var v = $('Quality_Control.QC_F2:stage_contraindicated_'+types[i]+'_bone_density')\n  if(v.eq(0).value()) c++  \n}\nres=newValue(c==0 ? 1 : 0,'integer')\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_contraindicated_dexa",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "res=null\nvar tech=[]\nvar types=['forearm','dual_hip','whole_body','lateral','spine']\nfor(var i=0;i<types.length;i++) {\n  var name = $('Quality_Control.QC_F2:stage_technician_'+types[i]+'_bone_density')\n  if(name.isNull().not().value()) tech.push(name)\n}\nif(0<tech.length) {\n  tech=tech.filter(function(value,index,self){return self.indexOf(value)===index;})\n  res=tech[0]\n}  \nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_technician_dexa",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "res=null\nvar types=['forearm','dual_hip','whole_body','lateral','spine']\nvar n=0\nvar d=types.length\nfor(var i=0;i<types.length;i++) {\n  var v = $('Quality_Control.QC_F2:stage_contraindicated_'+types[i]+'_bone_density')\n  var q = $('Quality_Control.QC_F2:data_qac_'+types[i]+'_bone_density')\n  if(v.eq(0).and(q.isNull().not()).value()) n++  \n  if(v.eq(1).value()) d--\n}\nif(d>0) {\n  res=newValue('{file_capture:'+ 100.0*n/d +'}','text')\n}  \nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_qac_dexa",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "res=null\nvar c=0\nvar types=['forearm','dual_hip','whole_body','lateral','spine']\nfor(var i=0;i<types.length;i++) {\n  var v = $('Quality_Control.QC_F2:data_missing_'+types[i]+'_bone_density')\n  if(v.eq(1).value()) c++\n}\nres=newValue(c==0 ? 0 : 1,'integer')\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_missing_dexa",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_skip_dexa",
        "occurrenceGroup": "",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      }
    ]
  },
  "datasourceName": "Quality_Control",
  "from": [
    "clsa-dcs-f2.Participants",
    "clsa-dcs-f2.BloodPressure",
    "clsa-dcs-f2.CognitiveTest",
    "clsa-dcs-images-f2.CarotidIntima",
    "clsa-dcs-images-f2.DualHipBoneDensity",
    "clsa-dcs-f2.ECG",
    "clsa-dcs-images-f2.ForearmBoneDensity",
    "clsa-dcs-f2.GripStrength",
    "clsa-dcs-f2.Hearing",
    "clsa-dcs-images-f2.LateralBoneDensity",
    "clsa-dcs-images-f2.RetinalScanLeft",
    "clsa-dcs-images-f2.RetinalScanRight",
    "clsa-dcs-f2.Spirometry",
    "clsa-dcs-f2.Tonometer",
    "clsa-dcs-f2.Weight",
    "clsa-dcs-images-f2.WholeBodyBoneDensity",
    "clsa-dcs-f2.StandingHeight",
    "clsa-dcs-images-f2.SpineBoneDensity",
    "clsa-dcs-f2.ChairRise",
    "clsa-dcs-f2.HipsWaist",
    "clsa-dcs-f2.TUG",
    "clsa-dcs-f2.StandingBalance",
    "clsa-dcs-f2.4mWalk",
    "clsa-dcs-f2.StroopFAS",
    "clsa-dcs-f2.SittingHeight",
    "clsa-dcs-f2.VisionAcuity",
    "clsa-dcs-f2.Consent",
    "clsa-dcs-f2.ContraIndications",
    "clsa-dcs-f2.EventPMT",
    "clsa-dcs-f2.HearingQuestionnaire",
    "clsa-dcs-f2.ConclusionQuestionnaire",
    "clsa-dcs-f2.TimeBasedProspectiveMemoryTask",
    "clsa-dcs-f2.DiseaseSymptoms",
    "clsa-dcs-f2.Frax",
    "clsa-dcs-f2.SocialNetwork",
    "clsa-dcs-f2.GenHealth",
    "clsa-dcs-f2.OSIPV",
    "clsa-dcs-f2.Urine",
    "clsa-dcs-f2.QuestionnaireBoneDensity",
    "clsa-dcs-f2.Blood",
    "clsa-dcs-f2.Blood2",
    "clsa-dcs-f2.Deviation_AE_CRF",
    "clsa-dcs-f2.NeuropsychologicalBatteryScoring",
    "clsa-dcs-f2.QualityAssuranceIH",
    "clsa-dcs-f2.CDTT"
  ],
  "name": "QC_F2",
  "where": "$('clsa-dcs-f2.Participants:DCSatHOME').not().whenNull(true).and($('clsa-dcs-f2.Participants:DCS_PHONE').not().whenNull(true))"
}
