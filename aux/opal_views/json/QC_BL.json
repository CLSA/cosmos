{
  "Magma.VariableListViewDto.view": {
    "variables": [
      {
        "attributes": [
          {
            "name": "stage", 
            "value": "Spirometry"
          }, 
          {
            "name": "derivedFrom", 
            "namespace": "opal", 
            "value": "/datasource/clsa-dcs/table/Spirometry/variable/InstrumentRun.user"
          }, 
          {
            "name": "script", 
            "value": "$('clsa-dcs.Spirometry:InstrumentRun.user').whenNull(\n  $group('Admin.Action.stage','Spirometry','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_technician_spirometry", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$('Admin.ApplicationConfiguration.siteName').map({\n  'BritishColumbia':'University of BC DCS',\n  'British Columbia':'University of BC DCS',\n  'Calgary':'Calgary DCS',\n  'Dalhousie':'Dalhousie DCS',\n  'Hamilton':'Hamilton DCS',\n  'Manitoba':'Manitoba DCS',\n  'McGill':'McGill DCS',\n  'McMaster':'Hamilton DCS',\n  'Memorial':'Memorial DCS',\n  'Memorial University':'Memorial DCS',\n  'Ottawa':'Ottawa DCS',\n  'Sherbrooke':'Sherbrooke DCS',\n  'Simon Fraser':'Simon Fraser DCS',\n  'SimonFraser':'Simon Fraser DCS',\n  'UniversityofBC':'University of BC DCS',\n  'University of Manitoba':'Manitoba DCS',\n  'University of Victoria':'Victoria DCS',\n  'Victoria':'Victoria DCS'},null) "
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "interview_site", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var stage=newValue($group('clsa-dcs.Participants:Admin.StageInstance.stage','Spirometry','Admin.StageInstance.lastState').asSequence().last(),'text')\n$this('data_qac_spirometry').isNull().and(stage.any('Skipped','NotApplicable').not()).value() ? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_missing_spirometry", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var v1=$group('Admin.Action.stage','Spirometry','Admin.Action.actionType').asSequence()\nvar v2=$group('Admin.Action.stage','Spirometry','Admin.Action.eventReason').asSequence()\nvar res=null\nvar arr=[]  // string array of events\nfor(var i=0; i<v1.size(); i++) {\n  if(v1.valueAt(i).any('SKIP').not().value() ||\n     v2.valueAt(i).isNull().value()) continue\n  var key=v2.valueAt(i).value().slice(14)\n  if(-1==arr.indexOf(key))\n    arr.push(key)\n}\nif(undefined!==arr && 0<arr.length) {\n  res=newValue(arr.pop(),'text')  \n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_skip_spirometry", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$group('clsa-dcs.Participants:Admin.StageInstance.stage','Spirometry',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value() \n? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_contraindicated_spirometry", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "derivedFrom", 
            "namespace": "opal", 
            "value": "/datasource/clsa-dcs/table/Participants/variable/Admin.Interview.startDate"
          }, 
          {
            "name": "script", 
            "value": "$('Admin.Interview.startDate')"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "interview_start_date", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "date"
      }, 
      {
        "attributes": [
          {
            "name": "identifier", 
            "value": "true"
          }, 
          {
            "name": "derivedFrom", 
            "namespace": "opal", 
            "value": "/datasource/clsa-dcs/table/Participants/variable/Admin.Participant.barcode"
          }, 
          {
            "name": "script", 
            "value": "$('Admin.Participant.barcode')"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "interview_barcode", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var res=null\nif( $group(\n  'clsa-dcs.Participants:Admin.StageInstance.stage',\n  'Spirometry',\n  'Admin.StageInstance.lastState').asSequence().last().any('Skipped','NotApplicable').not().value() ) {\n  res=$group(\n    'clsa-dcs.Participants:Admin.StageInstance.stage',\n    'Spirometry',\n    'Admin.StageInstance.duration').asSequence().last()\n  if(res.isNull().not().value()) {\n    res=Math.round(res.div(60.0).multiply(10.0).value()) / 10.0\n  }\n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_duration_spirometry", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "decimal"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var res=$('clsa-dcs.Spirometry:OUTPUT_QUALITY_GRADE')\nif(!res.isNull().value()) {\n  res=newValue('{grade:'+res.value()+'}','text')\n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_qac_spirometry", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$('clsa-dcs.GripStrength:InstrumentRun.user').whenNull(\n  $group('Admin.Action.stage','GripStrength','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_technician_grip_strength", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$group('clsa-dcs.Participants:Admin.StageInstance.stage','GripStrength',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value() \n? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_contraindicated_grip_strength", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var v1=$group('Admin.Action.stage','GripStrength','Admin.Action.actionType').asSequence()\nvar v2=$group('Admin.Action.stage','GripStrength','Admin.Action.eventReason').asSequence()\nvar res=null\nvar arr=[]  // string array of events\nfor(var i=0; i<v1.size(); i++) {\n  if(v1.valueAt(i).any('SKIP').not().value() ||\n     v2.valueAt(i).isNull().value()) continue\n  var key=v2.valueAt(i).value().slice(14)\n  if(-1==arr.indexOf(key))\n    arr.push(key)\n}\nif(undefined!==arr && 0<arr.length) {\n  res=newValue(arr.pop(),'text')  \n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_skip_grip_strength", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var stage=newValue($group('clsa-dcs.Participants:Admin.StageInstance.stage','GripStrength','Admin.StageInstance.lastState').asSequence().last(),'text')\n$this('data_qac_grip_strength').isNull().and(stage.any('Skipped','NotApplicable').not()).value() ? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_missing_grip_strength", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var res=null\nif($('clsa-dcs.GripStrength:Measure.RES_TRIAL_MAX').isNull().not().value()) {\n  res=newValue('{trial_count:'+$('clsa-dcs.GripStrength:Measure.RES_TRIAL_MAX').size()+'}','text')\n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_qac_grip_strength", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var res=null\nif( $group(\n  'clsa-dcs.Participants:Admin.StageInstance.stage',\n  'GripStrength',\n  'Admin.StageInstance.lastState').asSequence().last().any('Skipped','NotApplicable').not().value() ) {\n  res=$group(\n    'clsa-dcs.Participants:Admin.StageInstance.stage',\n    'GripStrength',\n    'Admin.StageInstance.duration').asSequence().last()\n  if(res.isNull().not().value()) {\n    res=Math.round(res.div(60.0).multiply(10.0).value()) / 10.0\n  }\n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_duration_grip_strength", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "decimal"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$('clsa-dcs.BloodPressure:InstrumentRun.user').whenNull(\n  $group('Admin.Action.stage','BloodPressure','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_technician_blood_pressure", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$group('clsa-dcs.Participants:Admin.StageInstance.stage','BloodPressure',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value() \n? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_contraindicated_blood_pressure", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var v1=$group('Admin.Action.stage','BloodPressure','Admin.Action.actionType').asSequence()\nvar v2=$group('Admin.Action.stage','BloodPressure','Admin.Action.eventReason').asSequence()\nvar res=null\nvar arr=[]  // string array of events\nfor(var i=0; i<v1.size(); i++) {\n  if(v1.valueAt(i).any('SKIP').not().value() ||\n     v2.valueAt(i).isNull().value()) continue\n  var key=v2.valueAt(i).value().slice(14)\n  if(-1==arr.indexOf(key))\n    arr.push(key)\n}\nif(undefined!==arr && 0<arr.length) {\n  res=newValue(arr.pop(),'text')  \n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_skip_blood_pressure", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var stage=newValue($group('clsa-dcs.Participants:Admin.StageInstance.stage','BloodPressure','Admin.StageInstance.lastState').asSequence().last(),'text')\n$this('data_qac_blood_pressure').isNull().and(stage.any('Skipped','NotApplicable').not()).value() ? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_missing_blood_pressure", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var res=null\nif($('clsa-dcs.BloodPressure:RES_AVG_COUNT').isNull().not().value()) {\n  res=newValue('{trial_count:'+$('clsa-dcs.BloodPressure:RES_AVG_COUNT')+'}','text')\n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_qac_blood_pressure", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var res=null\nif( $group(\n  'clsa-dcs.Participants:Admin.StageInstance.stage',\n  'BloodPressure',\n  'Admin.StageInstance.lastState').asSequence().last().any('Skipped','NotApplicable').not().value() ) {\n  res=$group(\n    'clsa-dcs.Participants:Admin.StageInstance.stage',\n    'BloodPressure',\n    'Admin.StageInstance.duration').asSequence().last()\n  if(res.isNull().not().value()) {\n    res=Math.round(res.div(60.0).multiply(10.0).value()) / 10.0\n  }\n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_duration_blood_pressure", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "decimal"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$('clsa-dcs.ECG:InstrumentRun.user').whenNull(\n  $group('Admin.Action.stage','ECG','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_technician_ecg", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$group('clsa-dcs.Participants:Admin.StageInstance.stage','ECG',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value() \n? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_contraindicated_ecg", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var v1=$group('Admin.Action.stage','ECG','Admin.Action.actionType').asSequence()\nvar v2=$group('Admin.Action.stage','ECG','Admin.Action.eventReason').asSequence()\nvar res=null\nvar arr=[]  // string array of events\nfor(var i=0; i<v1.size(); i++) {\n  if(v1.valueAt(i).any('SKIP').not().value() ||\n     v2.valueAt(i).isNull().value()) continue\n  var key=v2.valueAt(i).value().slice(14)\n  if(-1==arr.indexOf(key))\n    arr.push(key)\n}\nif(undefined!==arr && 0<arr.length) {\n  res=newValue(arr.pop(),'text')  \n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_skip_ecg", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var stage=newValue($group('clsa-dcs.Participants:Admin.StageInstance.stage','ECG','Admin.StageInstance.lastState').asSequence().last(),'text')\n$this('data_qac_ecg').isNull().and(stage.any('Skipped','NotApplicable').not()).value() ? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_missing_ecg", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var f=$('clsa-dcs.ECG:RES_XML_FILE')\nvar q=$('clsa-dcs.ECG:RES_DIAGNOSIS')\nvar res=null\nif(f.isNull().not().value()) {\n  var str='{file_size:'+f.length()+',quality:'\n  if(q.lowerCase().matches(/poor data quality/).value()) {\n    str += '0}'\n  } else {\n    str += '1}'  \n  }\n  res = newValue(str,'text')\n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_qac_ecg", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var res=null\nif( $group(\n  'clsa-dcs.Participants:Admin.StageInstance.stage',\n  'ECG',\n  'Admin.StageInstance.lastState').asSequence().last().any('Skipped','NotApplicable').not().value() ) {\n  res=$group(\n    'clsa-dcs.Participants:Admin.StageInstance.stage',\n    'ECG',\n    'Admin.StageInstance.duration').asSequence().last()\n  if(res.isNull().not().value()) {\n    res=Math.round(res.div(60.0).multiply(10.0).value()) / 10.0\n  }\n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_duration_ecg", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "decimal"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$('clsa-dcs.CognitiveTest:InstrumentRun.user').whenNull(\n  $group('Admin.Action.stage','CognitiveTest','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_technician_cognitive_test", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$group('clsa-dcs.Participants:Admin.StageInstance.stage','CognitiveTest',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value() \n? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_contraindicated_cognitive_test", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var v1=$group('Admin.Action.stage','CognitiveTest','Admin.Action.actionType').asSequence()\nvar v2=$group('Admin.Action.stage','CognitiveTest','Admin.Action.eventReason').asSequence()\nvar res=null\nvar arr=[]  // string array of events\nfor(var i=0; i<v1.size(); i++) {\n  if(v1.valueAt(i).any('SKIP').not().value() ||\n     v2.valueAt(i).isNull().value()) continue\n  var key=v2.valueAt(i).value().slice(14)\n  if(-1==arr.indexOf(key))\n    arr.push(key)\n}\nif(undefined!==arr && 0<arr.length) {\n  res=newValue(arr.pop(),'text')  \n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_skip_cognitive_test", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var stage=newValue($group('clsa-dcs.Participants:Admin.StageInstance.stage','CognitiveTest','Admin.StageInstance.lastState').asSequence().last(),'text')\n$this('data_qac_cognitive_test').isNull().and(stage.any('Skipped','NotApplicable').not()).value() ? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_missing_cognitive_test", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var res=$('clsa-dcs.CognitiveTest:RES_RESULT_FILE')\nif(res.isNull().not().value()) {\n  res = newValue('{filesize:'+res.length()+'}','text')\n}  \nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_qac_cognitive_test", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var res=null\nif( $group(\n  'clsa-dcs.Participants:Admin.StageInstance.stage',\n  'CognitiveTest',\n  'Admin.StageInstance.lastState').asSequence().last().any('Skipped','NotApplicable').not().value() ) {\n  res=$group(\n    'clsa-dcs.Participants:Admin.StageInstance.stage',\n    'CognitiveTest',\n    'Admin.StageInstance.duration').asSequence().last()\n  if(res.isNull().not().value()) {\n    res=Math.round(res.div(60.0).multiply(10.0).value()) / 10.0\n  }\n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_duration_cognitive_test", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "decimal"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$('clsa-dcs.Hearing:InstrumentRun.user').whenNull(\n  $group('Admin.Action.stage','Hearing','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_technician_hearing", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$group('clsa-dcs.Participants:Admin.StageInstance.stage','Hearing',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value() \n? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_contraindicated_hearing", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var v1=$group('Admin.Action.stage','Hearing','Admin.Action.actionType').asSequence()\nvar v2=$group('Admin.Action.stage','Hearing','Admin.Action.eventReason').asSequence()\nvar res=null\nvar arr=[]  // string array of events\nfor(var i=0; i<v1.size(); i++) {\n  if(v1.valueAt(i).any('SKIP').not().value() ||\n     v2.valueAt(i).isNull().value()) continue\n  var key=v2.valueAt(i).value().slice(14)\n  if(-1==arr.indexOf(key))\n    arr.push(key)\n}\nif(undefined!==arr && 0<arr.length) {\n  res=newValue(arr.pop(),'text')  \n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_skip_hearing", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var stage=newValue($group('clsa-dcs.Participants:Admin.StageInstance.stage','Hearing','Admin.StageInstance.lastState').asSequence().last(),'text')\n$this('data_qac_hearing').isNull().and(stage.any('Skipped','NotApplicable').not()).value() ? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_missing_hearing", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var side = ['RIGHT','LEFT']\nvar freq = ['1KT','500','1K','2K','3K','4K','6K','8K']\nvar count = {RIGHT:0,LEFT:0}\nfor(var i=0;i<side.length;i++) {\n  var s = side[i]\n  var v = 'clsa-dcs.Hearing:RES_' + s + '_'\n  for(var j=0;j<freq.length;j++) {\n    var f = v + freq[j]\n    if ($(f).isNull().not().or($(f + '_ERR').isNull().not()).value()) count[s]++;\n  }\n}\nres = (0 == count.RIGHT && 0 == count.LEFT && \n  $('clsa-dcs.Hearing:RES_TEST_ID').isNull().and(\n    $('clsa-dcs.Hearing:RES_TEST_DATETIME').isNull()).value()) ?\n      null : newValue('{freq_left:'+count.LEFT+',freq_right:'+count.RIGHT+'}','text')"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_qac_hearing", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var res=null\nif( $group(\n  'clsa-dcs.Participants:Admin.StageInstance.stage',\n  'Hearing',\n  'Admin.StageInstance.lastState').asSequence().last().any('Skipped','NotApplicable').not().value() ) {\n  res=$group(\n    'clsa-dcs.Participants:Admin.StageInstance.stage',\n    'Hearing',\n    'Admin.StageInstance.duration').asSequence().last()\n  if(res.isNull().not().value()) {\n    res=Math.round(res.div(60.0).multiply(10.0).value()) / 10.0\n  }\n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_duration_hearing", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "decimal"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$('clsa-dcs.Tonometer:InstrumentRun.user').whenNull(\n  $group('Admin.Action.stage','Tonometer','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_technician_tonometer", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$group('clsa-dcs.Participants:Admin.StageInstance.stage','Tonometer',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value() \n? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_contraindicated_tonometer", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var v1=$group('Admin.Action.stage','Tonometer','Admin.Action.actionType').asSequence()\nvar v2=$group('Admin.Action.stage','Tonometer','Admin.Action.eventReason').asSequence()\nvar res=null\nvar arr=[]  // string array of events\nfor(var i=0; i<v1.size(); i++) {\n  if(v1.valueAt(i).any('SKIP').not().value() ||\n     v2.valueAt(i).isNull().value()) continue\n  var key=v2.valueAt(i).value().slice(14)\n  if(-1==arr.indexOf(key))\n    arr.push(key)\n}\nif(undefined!==arr && 0<arr.length) {\n  res=newValue(arr.pop(),'text')  \n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_skip_tonometer", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var stage=newValue($group('clsa-dcs.Participants:Admin.StageInstance.stage','Tonometer','Admin.StageInstance.lastState').asSequence().last(),'text')\n$this('data_qac_tonometer').isNull().and(stage.any('Skipped','NotApplicable').not()).value() ? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_missing_tonometer", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var eye=$('clsa-dcs.Tonometer:Measure.TON_EYE').lowerCase().map({\n  'l':'L',\n  'r':'R',\n  'right':'R',\n  'left':'L',\n  'left eye':'L',\n  'right eye':'R',\n  'righr':'R',\n  'rigth':'R',\n  'rught':'R',\n  'lrft':'L',\n  '0':'L',\n  '1':'R',\n  'll':'L',\n  'rr':'R',\n  'le':'L',\n  'leeft':'L',\n  'gauche':'L',\n  'droit':'R',\n  'droite':'R'},null)\n\n// bare minimum useful data is IOPcc: Corneal Compensated Intraocular Pressure\nvar iopcc=$('clsa-dcs.Tonometer:Measure.TON_IOPCC').asSequence() \n\n// if there is raw applanation and pressure data there will be a quality index\n// for each set of measurements\nvar qual=$('clsa-dcs.Tonometer:Measure.TON_QUALITYINDEX').asSequence()\nvar appl=$('clsa-dcs.Tonometer:Measure.TON_PRESSURE').asSequence()\nvar pres=$('clsa-dcs.Tonometer:Measure.TON_APPLANATION').asSequence()\n\nvar has_iopcc=iopcc.size().eq(eye.size()).value()\nvar has_qual=qual.size().eq(eye.size()).value()\nvar has_appl=appl.size().eq(eye.size()).value()\nvar has_pres=pres.size().eq(eye.size()).value()\nvar res=null\nif(eye.isNull().not().value()) {\n  var side={L:{left_iopcc:'0',left_qi:'-1',left_appl:'0',left_pres:'0'},\n            R:{right_iopcc:'0',right_qi:'-1',right_appl:'0',right_pres:'0'}}\n  for(var i=0;i<eye.size();i++) {\n    var e=eye.valueAt(i).value()\n    if(has_iopcc) {\n      var q=newValue(iopcc.valueAt(i).value(),'text')\n      if(q.matches(/^(\\d*\\.)?\\d+$/)) {\n        if('L'==e) {\n          side[e].left_iopcc='1'\n        } else if('R'==e) {\n          side[e].right_iopcc='1'\n        }\n      }\n    }\n    if(has_qual) {\n      var q=newValue(qual.valueAt(i).round(2).value(),'text')\n      if(q.matches(/^(\\d*\\.)?\\d+$/)) {\n        if('L'==e) {\n          side[e].left_qi=q.value()\n        } else if('R'==e) {\n          side[e].right_qi=q.value()\n        }\n      }\n    }\n    if(has_appl) {\n      var q=appl.valueAt(i).value().split(',').length\n      if('L'==e) {\n        side[e].left_appl=q\n      } else if('R'==e) {\n        side[e].right_appl=q\n      }      \n    }        \n    if(has_pres) {\n      var q=pres.valueAt(i).value().split(',').length\n      if('L'==e) {\n        side[e].left_pres=q\n      } else if('R'==e) {\n        side[e].right_pres=q\n      }\n    }\n  }\n  res=newValue(\n    JSON.stringify(side.L).replace(/\"/g,'').replace(/}/g,',') +\n    JSON.stringify(side.R).replace(/\"/g,'').replace(/{/g,''), 'text')\n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_qac_tonometer", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var res=null\nif( $group(\n  'clsa-dcs.Participants:Admin.StageInstance.stage',\n  'Tonometer',\n  'Admin.StageInstance.lastState').asSequence().last().any('Skipped','NotApplicable').not().value() ) {\n  res=$group(\n    'clsa-dcs.Participants:Admin.StageInstance.stage',\n    'Tonometer',\n    'Admin.StageInstance.duration').asSequence().last()\n  if(res.isNull().not().value()) {\n    res=Math.round(res.div(60.0).multiply(10.0).value()) / 10.0\n  }\n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_duration_tonometer", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "decimal"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$('clsa-dcs.Weight:InstrumentRun.user').whenNull(\n  $group('Admin.Action.stage','Weight','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_technician_weight", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$group('clsa-dcs.Participants:Admin.StageInstance.stage','Weight',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value() \n? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_contraindicated_weight", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var v1=$group('Admin.Action.stage','Weight','Admin.Action.actionType').asSequence()\nvar v2=$group('Admin.Action.stage','Weight','Admin.Action.eventReason').asSequence()\nvar res=null\nvar arr=[]  // string array of events\nfor(var i=0; i<v1.size(); i++) {\n  if(v1.valueAt(i).any('SKIP').not().value() ||\n     v2.valueAt(i).isNull().value()) continue\n  var key=v2.valueAt(i).value().slice(14)\n  if(-1==arr.indexOf(key))\n    arr.push(key)\n}\nif(undefined!==arr && 0<arr.length) {\n  res=newValue(arr.pop(),'text')  \n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_skip_weight", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var stage=newValue($group('clsa-dcs.Participants:Admin.StageInstance.stage','Weight','Admin.StageInstance.lastState').asSequence().last(),'text')\n$this('data_qac_weight').isNull().and(stage.any('Skipped','NotApplicable').not()).value() ? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_missing_weight", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var w=$('clsa-dcs.Weight:Measure.RES_WEIGHT_MEASURE')\nvar res=null\nif(w.size().gt(1).value()){\n  res=newValue('{stddev:'+w.stddev().round(6).value()+',size:'+w.size().value()+'}','text')\n} else if(w.size().eq(1).value()) {\n  res=newValue('{stddev:0,size:1}','text')\n} \nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_qac_weight", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var res=null\nif( $group(\n  'clsa-dcs.Participants:Admin.StageInstance.stage',\n  'Weight',\n  'Admin.StageInstance.lastState').asSequence().last().any('Skipped','NotApplicable').not().value() ) {\n  res=$group(\n    'clsa-dcs.Participants:Admin.StageInstance.stage',\n    'Weight',\n    'Admin.StageInstance.duration').asSequence().last()\n  if(res.isNull().not().value()) {\n    res=Math.round(res.div(60.0).multiply(10.0).value()) / 10.0\n  }\n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_duration_weight", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "decimal"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$('clsa-dcs-images.RetinalScan:InstrumentRun.user').whenNull(\n  $group('Admin.Action.stage','RetinalScan','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_technician_retinal_scan", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$group('clsa-dcs.Participants:Admin.StageInstance.stage','RetinalScan',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value() \n? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_contraindicated_retinal_scan", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var v1=$group('Admin.Action.stage','RetinalScan','Admin.Action.actionType').asSequence()\nvar v2=$group('Admin.Action.stage','RetinalScan','Admin.Action.eventReason').asSequence()\nvar res=null\nvar arr=[]  // string array of events\nfor(var i=0; i<v1.size(); i++) {\n  if(v1.valueAt(i).any('SKIP').not().value() ||\n     v2.valueAt(i).isNull().value()) continue\n  var key=v2.valueAt(i).value().slice(14)\n  if(-1==arr.indexOf(key))\n    arr.push(key)\n}\nif(undefined!==arr && 0<arr.length) {\n  res=newValue(arr.pop(),'text')  \n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_skip_retinal_scan", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var stage=newValue($group('clsa-dcs.Participants:Admin.StageInstance.stage','RetinalScan','Admin.StageInstance.lastState').asSequence().last(),'text')\n$this('data_qac_retinal_scan').isNull().and(stage.any('Skipped','NotApplicable').not()).value() ? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_missing_retinal_scan", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var l=$('clsa-dcs-images.RetinalScan:Measure.EYE').valueAt(\n  $('clsa-dcs-images.RetinalScan:Measure.SIDE').indexOf('LEFT')).length()\nvar r=$('clsa-dcs-images.RetinalScan:Measure.EYE').valueAt(\n  $('clsa-dcs-images.RetinalScan:Measure.SIDE').indexOf('RIGHT')).length()\nvar res=null  \nif(!l.isNull().and(r.isNull()).value()) {\n  res=newValue(\n    '{filesize_left:'+\n    (l.isNull().value()?'0':l.value())+\n    ',filesize_right:'+\n    (r.isNull().value()?'0':r.value())+\n    '}', 'text')\n}    \nres    "
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_qac_retinal_scan", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var res=null\nif( $group(\n  'clsa-dcs.Participants:Admin.StageInstance.stage',\n  'RetinalScan',\n  'Admin.StageInstance.lastState').asSequence().last().any('Skipped','NotApplicable').not().value() ) {\n  res=$group(\n    'clsa-dcs.Participants:Admin.StageInstance.stage',\n    'RetinalScan',\n    'Admin.StageInstance.duration').asSequence().last()\n  if(res.isNull().not().value()) {\n    res=Math.round(res.div(60.0).multiply(10.0).value()) / 10.0\n  }\n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_duration_retinal_scan", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "decimal"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "// the user who ran the onyx bone density qnaire stage just before\n// performing the dexa exam\n//\nvar q=$('clsa-dcs.QuestionnaireBoneDensity:QuestionnaireRun.user').lowerCase()\n\n// the user who ran the dexa image transfer to onyx, who may or may not\n// be the same user who actually performed the exam\n//\nvar lu=$('clsa-dcs-images.LateralBoneDensity:InstrumentRun.user').whenNull(\n  $group('Admin.Action.stage','LateralBoneDensity','Admin.Action.user').asSequence().last()).lowerCase()\n\nq.whenNull(lu.whenNull(null))"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_technician_lateral_bone_density", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$group('clsa-dcs.Participants:Admin.StageInstance.stage','LateralBoneDensity',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value() \n? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_contraindicated_lateral_bone_density", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var v1=$group('Admin.Action.stage','LateralBoneDensity','Admin.Action.actionType').asSequence()\nvar v2=$group('Admin.Action.stage','LateralBoneDensity','Admin.Action.eventReason').asSequence()\nvar res=null\nvar arr=[]  // string array of events\nfor(var i=0; i<v1.size(); i++) {\n  if(v1.valueAt(i).any('SKIP').not().value() ||\n     v2.valueAt(i).isNull().value()) continue\n  var key=v2.valueAt(i).value().slice(14)\n  if(-1==arr.indexOf(key))\n    arr.push(key)\n}\nif(undefined!==arr && 0<arr.length) {\n  res=newValue(arr.pop(),'text')  \n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_skip_lateral_bone_density", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var stage=newValue($group('clsa-dcs.Participants:Admin.StageInstance.stage','LateralBoneDensity','Admin.StageInstance.lastState').asSequence().last(),'text')\n$this('data_qac_lateral_bone_density').isNull().and(stage.any('Skipped','NotApplicable').not()).value() ? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_missing_lateral_bone_density", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var res=$('clsa-dcs-images.LateralBoneDensity:RES_SEL_DICOM_MEASURE')\nif(res.isNull().not().value()) {\n  res = newValue('{filesize:'+res.length()+'}','text')\n}  \nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_qac_lateral_bone_density", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var res=null\nif( $group(\n  'clsa-dcs.Participants:Admin.StageInstance.stage',\n  'LateralBoneDensity',\n  'Admin.StageInstance.lastState').asSequence().last().any('Skipped','NotApplicable').not().value() ) {\n  res=$group(\n    'clsa-dcs.Participants:Admin.StageInstance.stage',\n    'LateralBoneDensity',\n    'Admin.StageInstance.duration').asSequence().last()\n  if(res.isNull().not().value()) {\n    res=Math.round(res.div(60.0).multiply(10.0).value()) / 10.0\n  }\n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_duration_lateral_bone_density", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "decimal"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$('clsa-dcs.StandingHeight:InstrumentRun.user').whenNull(\n  $group('Admin.Action.stage','StandingHeight','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_technician_standing_height", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$group('clsa-dcs.Participants:Admin.StageInstance.stage','StandingHeight',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value() \n? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_contraindicated_standing_height", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var v1=$group('Admin.Action.stage','StandingHeight','Admin.Action.actionType').asSequence()\nvar v2=$group('Admin.Action.stage','StandingHeight','Admin.Action.eventReason').asSequence()\nvar res=null\nvar arr=[]  // string array of events\nfor(var i=0; i<v1.size(); i++) {\n  if(v1.valueAt(i).any('SKIP').not().value() ||\n     v2.valueAt(i).isNull().value()) continue\n  var key=v2.valueAt(i).value().slice(14)\n  if(-1==arr.indexOf(key))\n    arr.push(key)\n}\nif(undefined!==arr && 0<arr.length) {\n  res=newValue(arr.pop(),'text')  \n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_skip_standing_height", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var stage=newValue($group('clsa-dcs.Participants:Admin.StageInstance.stage','StandingHeight','Admin.StageInstance.lastState').asSequence().last(),'text')\n$this('data_qac_standing_height').isNull().and(stage.any('Skipped','NotApplicable').not()).value() ? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_missing_standing_height", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var w=$('clsa-dcs.StandingHeight:Measure.RES_HEIGHT_MEASURE')\nvar res=null\nif(w.size().gt(1).value()){\n  res=newValue('{stddev:'+w.stddev().round(6).value()+',size:'+w.size().value()+'}','text')\n} else if(w.size().eq(1).value()) {\n  res=newValue('{stddev:0,size:1}','text')\n} \nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_qac_standing_height", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var res=null\nif( $group(\n  'clsa-dcs.Participants:Admin.StageInstance.stage',\n  'StandingHeight',\n  'Admin.StageInstance.lastState').asSequence().last().any('Skipped','NotApplicable').not().value() ) {\n  res=$group(\n    'clsa-dcs.Participants:Admin.StageInstance.stage',\n    'StandingHeight',\n    'Admin.StageInstance.duration').asSequence().last()\n  if(res.isNull().not().value()) {\n    res=Math.round(res.div(60.0).multiply(10.0).value()) / 10.0\n  }\n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_duration_standing_height", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "decimal"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "// the user who ran the onyx bone density qnaire stage just before\n// performing the dexa exam\n//\nvar q=$('clsa-dcs.QuestionnaireBoneDensity:QuestionnaireRun.user').lowerCase()\n\n// the user who ran the dexa image transfer to onyx, who may or may not\n// be the same user who actually performed the exam\n//\nvar lu=$('clsa-dcs-images.ForearmBoneDensity:InstrumentRun.user').whenNull(\n  $group('Admin.Action.stage','ForearmBoneDensity','Admin.Action.user').asSequence().last()).lowerCase()\n\nq.whenNull(lu.whenNull(null))"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_technician_forearm_bone_density", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$group('clsa-dcs.Participants:Admin.StageInstance.stage','ForearmBoneDensity',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value() \n? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_contraindicated_forearm_bone_density", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var v1=$group('Admin.Action.stage','ForearmBoneDensity','Admin.Action.actionType').asSequence()\nvar v2=$group('Admin.Action.stage','ForearmBoneDensity','Admin.Action.eventReason').asSequence()\nvar res=null\nvar arr=[]  // string array of events\nfor(var i=0; i<v1.size(); i++) {\n  if(v1.valueAt(i).any('SKIP').not().value() ||\n     v2.valueAt(i).isNull().value()) continue\n  var key=v2.valueAt(i).value().slice(14)\n  if(-1==arr.indexOf(key))\n    arr.push(key)\n}\nif(undefined!==arr && 0<arr.length) {\n  res=newValue(arr.pop(),'text')  \n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_skip_forearm_bone_density", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var stage=newValue($group('clsa-dcs.Participants:Admin.StageInstance.stage','ForearmBoneDensity','Admin.StageInstance.lastState').asSequence().last(),'text')\n$this('data_qac_forearm_bone_density').isNull().and(stage.any('Skipped','NotApplicable').not()).value() ? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_missing_forearm_bone_density", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var l=$group('OUTPUT_FA_SIDE','LEFT','RES_FA_DICOM').asSequence().last()\nvar r=$group('OUTPUT_FA_SIDE','RIGHT','RES_FA_DICOM').asSequence().last()\nvar res=null\nif(l.isNull().not().value()) {\n  res=newValue('{filesize:'+ l.length().value() + '}', 'text')\n} else if(r.isNull().not().value()) {\n  res=newValue('{filesize:'+ r.length().value() + '}', 'text')\n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_qac_forearm_bone_density", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var res=null\nif( $group(\n  'clsa-dcs.Participants:Admin.StageInstance.stage',\n  'ForearmBoneDensity',\n  'Admin.StageInstance.lastState').asSequence().last().any('Skipped','NotApplicable').not().value() ) {\n  res=$group(\n    'clsa-dcs.Participants:Admin.StageInstance.stage',\n    'ForearmBoneDensity',\n    'Admin.StageInstance.duration').asSequence().last()\n  if(res.isNull().not().value()) {\n    res=Math.round(res.div(60.0).multiply(10.0).value()) / 10.0\n  }\n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_duration_forearm_bone_density", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "decimal"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "// the user who ran the onyx bone density qnaire stage just before\n// performing the dexa exam\n//\nvar q=$('clsa-dcs.QuestionnaireBoneDensity:QuestionnaireRun.user').lowerCase()\n\n// the user who ran the dexa image transfer to onyx, who may or may not\n// be the same user who actually performed the exam\n//\nvar lu=$('clsa-dcs-images.WholeBodyBoneDensity:InstrumentRun.user').whenNull(\n  $group('Admin.Action.stage','WholeBodyBoneDensity','Admin.Action.user').asSequence().last()).lowerCase()\n\nq.whenNull(lu.whenNull(null))"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_technician_whole_body_bone_density", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$group('clsa-dcs.Participants:Admin.StageInstance.stage','WholeBodyBoneDensity',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value() \n? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_contraindicated_whole_body_bone_density", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var v1=$group('Admin.Action.stage','WholeBodyBoneDensity','Admin.Action.actionType').asSequence()\nvar v2=$group('Admin.Action.stage','WholeBodyBoneDensity','Admin.Action.eventReason').asSequence()\nvar res=null\nvar arr=[]  // string array of events\nfor(var i=0; i<v1.size(); i++) {\n  if(v1.valueAt(i).any('SKIP').not().value() ||\n     v2.valueAt(i).isNull().value()) continue\n  var key=v2.valueAt(i).value().slice(14)\n  if(-1==arr.indexOf(key))\n    arr.push(key)\n}\nif(undefined!==arr && 0<arr.length) {\n  res=newValue(arr.pop(),'text')  \n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_skip_whole_body_bone_density", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var stage=newValue($group('clsa-dcs.Participants:Admin.StageInstance.stage','WholeBodyBoneDensity','Admin.StageInstance.lastState').asSequence().last(),'text')\n$this('data_qac_whole_body_bone_density').isNull().and(stage.any('Skipped','NotApplicable').not()).value() ? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_missing_whole_body_bone_density", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var res=$('clsa-dcs-images.WholeBodyBoneDensity:RES_WB_DICOM_1')\nif(res.isNull().not().value()) {\n  res = newValue('{filesize:'+res.length()+'}','text')\n}  \nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_qac_whole_body_bone_density", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var res=null\nif( $group(\n  'clsa-dcs.Participants:Admin.StageInstance.stage',\n  'WholeBodyBoneDensity',\n  'Admin.StageInstance.lastState').asSequence().last().any('Skipped','NotApplicable').not().value() ) {\n  res=$group(\n    'clsa-dcs.Participants:Admin.StageInstance.stage',\n    'WholeBodyBoneDensity',\n    'Admin.StageInstance.duration').asSequence().last()\n  if(res.isNull().not().value()) {\n    res=Math.round(res.div(60.0).multiply(10.0).value()) / 10.0\n  }\n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_duration_whole_body_bone_density", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "decimal"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "// the user who ran the onyx bone density qnaire stage just before\n// performing the dexa exam\n//\nvar q=$('clsa-dcs.QuestionnaireBoneDensity:QuestionnaireRun.user').lowerCase()\n\n// the user who ran the dexa image transfer to onyx, who may or may not\n// be the same user who actually performed the exam\n//\nvar lu=$('clsa-dcs-images.DualHipBoneDensity:InstrumentRun.user').whenNull(\n  $group('Admin.Action.stage','DualHipBoneDensity','Admin.Action.user').asSequence().last()).lowerCase()\n\nq.whenNull(lu.whenNull(null))"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_technician_dual_hip_bone_density", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$group('clsa-dcs.Participants:Admin.StageInstance.stage','DualHipBoneDensity',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value() \n? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_contraindicated_dual_hip_bone_density", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var v1=$group('Admin.Action.stage','DualHipBoneDensity','Admin.Action.actionType').asSequence()\nvar v2=$group('Admin.Action.stage','DualHipBoneDensity','Admin.Action.eventReason').asSequence()\nvar res=null\nvar arr=[]  // string array of events\nfor(var i=0; i<v1.size(); i++) {\n  if(v1.valueAt(i).any('SKIP').not().value() ||\n     v2.valueAt(i).isNull().value()) continue\n  var key=v2.valueAt(i).value().slice(14)\n  if(-1==arr.indexOf(key))\n    arr.push(key)\n}\nif(undefined!==arr && 0<arr.length) {\n  res=newValue(arr.pop(),'text')  \n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_skip_dual_hip_bone_density", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var stage=newValue($group('clsa-dcs.Participants:Admin.StageInstance.stage','DualHipBoneDensity','Admin.StageInstance.lastState').asSequence().last(),'text')\n$this('data_qac_dual_hip_bone_density').isNull().and(stage.any('Skipped','NotApplicable').not()).value() ? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_missing_dual_hip_bone_density", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var l=$group('Measure.OUTPUT_HIP_SIDE','LEFT','Measure.RES_HIP_DICOM').asSequence().last()\nvar r=$group('Measure.OUTPUT_HIP_SIDE','RIGHT','Measure.RES_HIP_DICOM').asSequence().last()\nvar res=null\nif(!l.isNull().and(r.isNull()).value()) {\n  res=newValue(\n    '{filesize_left:'+\n    (l.isNull().value()?'0':l.length().value())+\n    ',filesize_right:'+\n    (r.isNull().value()?'0':r.length().value())+\n    '}', 'text')\n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_qac_dual_hip_bone_density", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var res=null\nif( $group(\n  'clsa-dcs.Participants:Admin.StageInstance.stage',\n  'DualHipBoneDensity',\n  'Admin.StageInstance.lastState').asSequence().last().any('Skipped','NotApplicable').not().value() ) {\n  res=$group(\n    'clsa-dcs.Participants:Admin.StageInstance.stage',\n    'DualHipBoneDensity',\n    'Admin.StageInstance.duration').asSequence().last()\n  if(res.isNull().not().value()) {\n    res=Math.round(res.div(60.0).multiply(10.0).value()) / 10.0\n  }\n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_duration_dual_hip_bone_density", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "decimal"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "// the user who ran the onyx bone density qnaire stage just before\n// performing the dexa exam\n//\nvar q=$('clsa-dcs.QuestionnaireBoneDensity:QuestionnaireRun.user').lowerCase()\n\n// the user who ran the dexa image transfer to onyx, who may or may not\n// be the same user who actually performed the exam\n//\nvar lu=$('clsa-dcs-images.CarotidIntima:InstrumentRun.user').whenNull(\n  $group('Admin.Action.stage','CarotidIntima','Admin.Action.user').asSequence().last()).lowerCase()\n\nq.whenNull(lu.whenNull(null))"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_technician_carotid_intima", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$group('clsa-dcs.Participants:Admin.StageInstance.stage','CarotidIntima',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value() \n? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_contraindicated_carotid_intima", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var v1=$group('Admin.Action.stage','CarotidIntima','Admin.Action.actionType').asSequence()\nvar v2=$group('Admin.Action.stage','CarotidIntima','Admin.Action.eventReason').asSequence()\nvar res=null\nvar arr=[]  // string array of events\nfor(var i=0; i<v1.size(); i++) {\n  if(v1.valueAt(i).any('SKIP').not().value() ||\n     v2.valueAt(i).isNull().value()) continue\n  var key=v2.valueAt(i).value().slice(14)\n  if(-1==arr.indexOf(key))\n    arr.push(key)\n}\nif(undefined!==arr && 0<arr.length) {\n  res=newValue(arr.pop(),'text')  \n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_skip_carotid_intima", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var stage=newValue($group('clsa-dcs.Participants:Admin.StageInstance.stage','CarotidIntima','Admin.StageInstance.lastState').asSequence().last(),'text')\n$this('data_qac_carotid_intima').isNull().and(stage.any('Skipped','NotApplicable').not()).value() ? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_missing_carotid_intima", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var rst=$group('clsa-dcs-images.CarotidIntima:Measure.SIDE','Right','Measure.STILL_IMAGE').asSequence().last()\nvar rsr=$group('clsa-dcs-images.CarotidIntima:Measure.SIDE','Right','Measure.SR').asSequence().last()\nvar rc1=$group('clsa-dcs-images.CarotidIntima:Measure.SIDE','Right','Measure.CINELOOP_1').asSequence().last()\nvar rc2=$group('clsa-dcs-images.CarotidIntima:Measure.SIDE','Right','Measure.CINELOOP_2').asSequence().last()\nvar rc3=$group('clsa-dcs-images.CarotidIntima:Measure.SIDE','Right','Measure.CINELOOP_3').asSequence().last()\nvar lst=$group('clsa-dcs-images.CarotidIntima:Measure.SIDE','Left','Measure.STILL_IMAGE').asSequence().last()\nvar lsr=$group('clsa-dcs-images.CarotidIntima:Measure.SIDE','Left','Measure.SR').asSequence().last()\nvar lc1=$group('clsa-dcs-images.CarotidIntima:Measure.SIDE','Left','Measure.CINELOOP_1').asSequence().last()\nvar lc2=$group('clsa-dcs-images.CarotidIntima:Measure.SIDE','Left','Measure.CINELOOP_2').asSequence().last()\nvar lc3=$group('clsa-dcs-images.CarotidIntima:Measure.SIDE','Left','Measure.CINELOOP_3').asSequence().last()\nvar res=null\nif(!rst.isNull().and(rsr.isNull(),rc1.isNull(),rc2.isNull(),rc3.isNull(),\n   lst.isNull(),lsr.isNull(),lc1.isNull(),lc2.isNull(),lc3.isNull()).value()) {\n  var str='{filesize_left_still:'+(lst.isNull().value()?'0':lst.length().value())+','\n  str+='filesize_left_sr:'+(lsr.isNull().value()?'0':lsr.length().value())+','\n  str+='filesize_left_cine_1:'+(lc1.isNull().value()?'0':lc1.length().value())+','\n  str+='filesize_left_cine_2:'+(lc2.isNull().value()?'0':lc2.length().value())+','\n  str+='filesize_left_cine_3:'+(lc3.isNull().value()?'0':lc3.length().value())+','\n  str+='filesize_right_still:'+(rst.isNull().value()?'0':rst.length().value())+','\n  str+='filesize_right_sr:'+(rsr.isNull().value()?'0':rsr.length().value())+','\n  str+='filesize_right_cine_1:'+(rc1.isNull().value()?'0':rc1.length().value())+','\n  str+='filesize_right_cine_2:'+(rc2.isNull().value()?'0':rc2.length().value())+','\n  str+='filesize_right_cine_3:'+(rc3.isNull().value()?'0':rc3.length().value())+'}'\n  res=newValue(str,'text')\n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_qac_carotid_intima", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var res=null\nif( $group(\n  'clsa-dcs.Participants:Admin.StageInstance.stage',\n  'CarotidIntima',\n  'Admin.StageInstance.lastState').asSequence().last().any('Skipped','NotApplicable').not().value() ) {\n  res=$group(\n    'clsa-dcs.Participants:Admin.StageInstance.stage',\n    'CarotidIntima',\n    'Admin.StageInstance.duration').asSequence().last()\n  if(res.isNull().not().value()) {\n    res=Math.round(res.div(60.0).multiply(10.0).value()) / 10.0\n  }\n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_duration_carotid_intima", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "decimal"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$('clsa-dcs.TUG:QuestionnaireRun.user').whenNull(\n  $group('Admin.Action.stage','TUG','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_technician_tug", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$group('clsa-dcs.Participants:Admin.StageInstance.stage','TUG',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value() \n? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_contraindicated_tug", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var v1=$group('Admin.Action.stage','TUG','Admin.Action.actionType').asSequence()\nvar v2=$group('Admin.Action.stage','TUG','Admin.Action.eventReason').asSequence()\nvar res=null\nvar arr=[]  // string array of events\nfor(var i=0; i<v1.size(); i++) {\n  if(v1.valueAt(i).any('SKIP').not().value() ||\n     v2.valueAt(i).isNull().value()) continue\n  var key=v2.valueAt(i).value().slice(14)\n  if(-1==arr.indexOf(key))\n    arr.push(key)\n}\nif(undefined!==arr && 0<arr.length) {\n  res=newValue(arr.pop(),'text')  \n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_skip_tug", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var stage=newValue($group('clsa-dcs.Participants:Admin.StageInstance.stage','TUG','Admin.StageInstance.lastState').asSequence().last(),'text')\n$this('data_qac_tug').isNull().and(stage.any('Skipped','NotApplicable').not()).value() ? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_missing_tug", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var t1=$('clsa-dcs.TUG:TUG_TIME')\nvar t2=$('clsa-dcs.TUG:TUG_TIME_2')\nvar res=null\nif(!t1.isNull().and(t2.isNull()).value()) {\n  var str = '{time:'\n  if(t1.isNull().and(t2.isNull().not()).value()) {\n    str+=t2.round(3).value()\n  } else if(t2.isNull().and(t1.isNull().not()).value()) {\n    str+=t1.round(3).value()\n  }  \n  str+='}'  \n  res=newValue(str,'text')\n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_qac_tug", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var res=null\nif( $group(\n  'clsa-dcs.Participants:Admin.StageInstance.stage',\n  'TUG',\n  'Admin.StageInstance.lastState').asSequence().last().any('Skipped','NotApplicable').not().value() ) {\n  res=$group(\n    'clsa-dcs.Participants:Admin.StageInstance.stage',\n    'TUG',\n    'Admin.StageInstance.duration').asSequence().last()\n  if(res.isNull().not().value()) {\n    res=Math.round(res.div(60.0).multiply(10.0).value()) / 10.0\n  }\n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_duration_tug", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "decimal"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$('clsa-dcs.ChairRise:QuestionnaireRun.user').whenNull(\n  $group('Admin.Action.stage','ChairRise','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_technician_chair_rise", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$group('clsa-dcs.Participants:Admin.StageInstance.stage','ChairRise',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value() \n? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_contraindicated_chair_rise", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var v1=$group('Admin.Action.stage','ChairRise','Admin.Action.actionType').asSequence()\nvar v2=$group('Admin.Action.stage','ChairRise','Admin.Action.eventReason').asSequence()\nvar res=null\nvar arr=[]  // string array of events\nfor(var i=0; i<v1.size(); i++) {\n  if(v1.valueAt(i).any('SKIP').not().value() ||\n     v2.valueAt(i).isNull().value()) continue\n  var key=v2.valueAt(i).value().slice(14)\n  if(-1==arr.indexOf(key))\n    arr.push(key)\n}\nif(undefined!==arr && 0<arr.length) {\n  res=newValue(arr.pop(),'text')  \n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_skip_chair_rise", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var stage=newValue($group('clsa-dcs.Participants:Admin.StageInstance.stage','ChairRise','Admin.StageInstance.lastState').asSequence().last(),'text')\n$this('data_qac_chair_rise').isNull().and(stage.any('Skipped','NotApplicable').not()).value() ? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_missing_chair_rise", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var t1=$('clsa-dcs.ChairRise:CR_TIME')\nvar t2=$('clsa-dcs.ChairRise:CR_TIME_2')\nvar res=null\nif(!t1.isNull().and(t2.isNull()).value()) {\n  var str = '{time:'\n  if(t1.isNull().and(t2.isNull().not()).value()) {\n    str+=t2.round(3).value()\n  } else if(t2.isNull().and(t1.isNull().not()).value()) {\n    str+=t1.round(3).value()\n  }  \n  str+='}'  \n  res=newValue(str,'text')\n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_qac_chair_rise", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var res=null\nif( $group(\n  'clsa-dcs.Participants:Admin.StageInstance.stage',\n  'ChairRise',\n  'Admin.StageInstance.lastState').asSequence().last().any('Skipped','NotApplicable').not().value() ) {\n  res=$group(\n    'clsa-dcs.Participants:Admin.StageInstance.stage',\n    'ChairRise',\n    'Admin.StageInstance.duration').asSequence().last()\n  if(res.isNull().not().value()) {\n    res=Math.round(res.div(60.0).multiply(10.0).value()) / 10.0\n  }\n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_duration_chair_rise", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "decimal"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$('clsa-dcs.HipsWaist:InstrumentRun.user').whenNull(\n  $group('Admin.Action.stage','HipsWaist','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_technician_hips_waist", 
        "occurrenceGroup": "", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "$group('clsa-dcs.Participants:Admin.StageInstance.stage','HipsWaist',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value() \n? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_contraindicated_hips_waist", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var v1=$group('Admin.Action.stage','HipsWaist','Admin.Action.actionType').asSequence()\nvar v2=$group('Admin.Action.stage','HipsWaist','Admin.Action.eventReason').asSequence()\nvar res=null\nvar arr=[]  // string array of events\nfor(var i=0; i<v1.size(); i++) {\n  if(v1.valueAt(i).any('SKIP').not().value() ||\n     v2.valueAt(i).isNull().value()) continue\n  var key=v2.valueAt(i).value().slice(14)\n  if(-1==arr.indexOf(key))\n    arr.push(key)\n}\nif(undefined!==arr && 0<arr.length) {\n  res=newValue(arr.pop(),'text')  \n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_skip_hips_waist", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var stage=newValue($group('clsa-dcs.Participants:Admin.StageInstance.stage','HipsWaist','Admin.StageInstance.lastState').asSequence().last(),'text')\n$this('data_qac_hips_waist').isNull().and(stage.any('Skipped','NotApplicable').not()).value() ? 1 : 0"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_missing_hips_waist", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "integer"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var i=$('clsa-dcs.HipsWaist:IV_MEASURE_TAKEN')\nvar w=$('clsa-dcs.HipsWaist:RES_WAIST_SIZE')\nvar h=$('clsa-dcs.HipsWaist:RES_HIPS_SIZE')\nvar r=$('clsa-dcs.HipsWaist:CALC_WAIST_TO_HIP_RATIO')\nvar res=null\nif(!i.isNull().and(w.isNull(),h.isNull(),r.isNull()).value()) {\n  var str='{iv_type:'+(i.isNull().value()?'NA':i.value())+','\n  str+='size_waist:'+(w.isNull().value()?'0':w.value())+','\n  str+='size_hips:'+(h.isNull().value()?'0':h.value())+','\n  str+='ratio:'+(r.isNull().value()?'0':r.round(3).value())+'}'\n  res=newValue(str,'text')\n}  \nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "data_qac_hips_waist", 
        "occurrenceGroup": "", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "text"
      }, 
      {
        "attributes": [
          {
            "name": "script", 
            "value": "var res=null\nif( $group(\n  'clsa-dcs.Participants:Admin.StageInstance.stage',\n  'HipsWaist',\n  'Admin.StageInstance.lastState').asSequence().last().any('Skipped','NotApplicable').not().value() ) {\n  res=$group(\n    'clsa-dcs.Participants:Admin.StageInstance.stage',\n    'HipsWaist',\n    'Admin.StageInstance.duration').asSequence().last()\n  if(res.isNull().not().value()) {\n    res=Math.round(res.div(60.0).multiply(10.0).value()) / 10.0\n  }\n}\nres"
          }
        ], 
        "entityType": "Participant", 
        "index": 0, 
        "isRepeatable": false, 
        "mimeType": "", 
        "name": "stage_duration_hips_waist", 
        "referencedEntityType": "", 
        "unit": "", 
        "valueType": "decimal"
      }
    ]
  }, 
  "datasourceName": "Quality_Control", 
  "from": [
    "clsa-dcs.Participants", 
    "clsa-dcs.BloodPressure", 
    "clsa-dcs.CognitiveTest", 
    "clsa-dcs-images.CarotidIntima", 
    "clsa-dcs-images.DualHipBoneDensity", 
    "clsa-dcs-images.ForearmBoneDensity", 
    "clsa-dcs.ECG", 
    "clsa-dcs.GripStrength", 
    "clsa-dcs.Hearing", 
    "clsa-dcs-images.LateralBoneDensity", 
    "clsa-dcs-images.RetinalScan", 
    "clsa-dcs.Spirometry", 
    "clsa-dcs.Tonometer", 
    "clsa-dcs.Weight", 
    "clsa-dcs-images.WholeBodyBoneDensity", 
    "clsa-dcs.StandingHeight", 
    "clsa-dcs.TUG", 
    "clsa-dcs.HipsWaist", 
    "clsa-dcs.ChairRise"
  ], 
  "name": "QC_BL"
}
