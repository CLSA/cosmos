{
  "Magma.VariableListViewDto.view": {
    "variables": [
      {
        "attributes": [
          {
            "name": "stage",
            "value": "Spirometry"
          },
          {
            "name": "script",
            "value": "$('clsa-dcs.Spirometry:InstrumentRun.user').whenNull(\n  $group('Admin.Action.stage','Spirometry','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_technician_spirometry",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$('Admin.ApplicationConfiguration.siteName').map({\n  'BritishColumbia':'University of BC DCS',\n  'British Columbia':'University of BC DCS',\n  'Calgary':'Calgary DCS',\n  'Dalhousie':'Dalhousie DCS',\n  'Hamilton':'Hamilton DCS',\n  'Manitoba':'Manitoba DCS',\n  'McGill':'McGill DCS',\n  'McMaster':'Hamilton DCS',\n  'Memorial':'Memorial DCS',\n  'Memorial University':'Memorial DCS',\n  'Ottawa':'Ottawa DCS',\n  'Sherbrooke':'Sherbrooke DCS',\n  'Simon Fraser':'Simon Fraser DCS',\n  'SimonFraser':'Simon Fraser DCS',\n  'UniversityofBC':'University of BC DCS',\n  'University of Manitoba':'Manitoba DCS',\n  'University of Victoria':'Victoria DCS',\n  'Victoria':'Victoria DCS'},null) "
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "interview_site",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$this('data_qac_spirometry').isNull().and(\n  $this('stage_contraindicated_spirometry').eq(0),\n  $this('stage_skip_spirometry').isNull()\n).value() ? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_missing_spirometry",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var action=$group('Admin.Action.stage','Spirometry','Admin.Action.actionType').asSequence()\nvar res=$group('Admin.Action.stage','Spirometry','Admin.Action.eventReason').asSequence().filter(function(v,i){\n  return action.indexOf('SKIP')==i\n  }).last()\nif(res.isNull().not().value()) {\n  res=newValue(res.value().slice(14),'text')  \n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_skip_spirometry",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$group('clsa-dcs.Participants:Admin.StageInstance.stage','Spirometry',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value() \n? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_contraindicated_spirometry",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "derivedFrom",
            "namespace": "opal",
            "value": "/datasource/clsa-dcs/table/Participants/variable/Admin.Interview.startDate"
          },
          {
            "name": "script",
            "value": "$('Admin.Interview.startDate')"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "interview_start_date",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "date"
      },
      {
        "attributes": [
          {
            "name": "identifier",
            "value": "true"
          },
          {
            "name": "derivedFrom",
            "namespace": "opal",
            "value": "/datasource/clsa-dcs/table/Participants/variable/Admin.Participant.barcode"
          },
          {
            "name": "script",
            "value": "$('Admin.Participant.barcode')"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "interview_barcode",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var res=$('clsa-dcs.Spirometry:OUTPUT_QUALITY_GRADE')\nif(!res.isNull().value()) {\n  res=newValue('{grade:'+res.value()+'}','text')\n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_qac_spirometry",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$('clsa-dcs.GripStrength:InstrumentRun.user').whenNull(\n  $group('Admin.Action.stage','GripStrength','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_technician_grip_strength",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$group('clsa-dcs.Participants:Admin.StageInstance.stage','GripStrength',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value() \n? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_contraindicated_grip_strength",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var action=$group('Admin.Action.stage','GripStrength','Admin.Action.actionType').asSequence()\nvar res=$group('Admin.Action.stage','GripStrength','Admin.Action.eventReason').asSequence().filter(function(v,i){\n  return action.indexOf('SKIP')==i\n  }).last()\nif(res.isNull().not().value()) {\n  res=newValue(res.value().slice(14),'text')  \n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_skip_grip_strength",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$this('data_qac_grip_strength').isNull().and(\n  $this('stage_contraindicated_grip_strength').eq(0),\n  $this('stage_skip_grip_strength').isNull()\n).value() ? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_missing_grip_strength",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var res=$('clsa-dcs.GripStrength:Measure.RES_TRIAL_MAX')\nif(res.isNull().not().value()) {\n  res=newValue('{trial_count:'+res.size()+'}','text')\n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_qac_grip_strength",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$('clsa-dcs.BloodPressure:InstrumentRun.user').whenNull(\n  $group('Admin.Action.stage','BloodPressure','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_technician_blood_pressure",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$group('clsa-dcs.Participants:Admin.StageInstance.stage','BloodPressure',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value() \n? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_contraindicated_blood_pressure",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var action=$group('Admin.Action.stage','BloodPressure','Admin.Action.actionType').asSequence()\nvar res=$group('Admin.Action.stage','BloodPressure','Admin.Action.eventReason').asSequence().filter(function(v,i){\n  return action.indexOf('SKIP')==i\n  }).last()\nif(res.isNull().not().value()) {\n  res=newValue(res.value().slice(14),'text')  \n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_skip_blood_pressure",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$this('data_qac_blood_pressure').isNull().and(\n  $this('stage_contraindicated_blood_pressure').eq(0),\n  $this('stage_skip_blood_pressure').isNull()\n).value() ? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_missing_blood_pressure",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var res=$('clsa-dcs.BloodPressure:RES_AVG_COUNT')\nif(res.isNull().not().value()) {\n  res=newValue('{trial_count:'+res.value()+'}','text')\n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_qac_blood_pressure",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$('clsa-dcs.ECG:InstrumentRun.user').whenNull(\n  $group('Admin.Action.stage','ECG','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_technician_ecg",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$group('clsa-dcs.Participants:Admin.StageInstance.stage','ECG',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value() \n? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_contraindicated_ecg",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var action=$group('Admin.Action.stage','ECG','Admin.Action.actionType').asSequence()\nvar res=$group('Admin.Action.stage','ECG','Admin.Action.eventReason').asSequence().filter(function(v,i){\n  return action.indexOf('SKIP')==i\n  }).last()\nif(res.isNull().not().value()) {\n  res=newValue(res.value().slice(14),'text')  \n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_skip_ecg",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$this('data_qac_ecg').isNull().and(\n  $this('stage_contraindicated_ecg').eq(0),\n  $this('stage_skip_ecg').isNull()\n).value() ? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_missing_ecg",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var f=$('clsa-dcs.ECG:RES_XML_FILE')\nvar q=$('clsa-dcs.ECG:RES_DIAGNOSIS')\nvar res=null\nif(f.isNull().not().value()) {\n  var str='{filesize:'+f.length()+',quality:'\n  if(q.lowerCase().matches(/poor data quality/).value()) {\n    str += '0}'\n  } else {\n    str += '1}'  \n  }\n  res = newValue(str,'text')\n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_qac_ecg",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$('clsa-dcs.CognitiveTest:InstrumentRun.user').whenNull(\n  $group('Admin.Action.stage','CognitiveTest','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_technician_cognitive_test",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$group('clsa-dcs.Participants:Admin.StageInstance.stage','CognitiveTest',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value() \n? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_contraindicated_cognitive_test",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var action=$group('Admin.Action.stage','CognitiveTest','Admin.Action.actionType').asSequence()\nvar res=$group('Admin.Action.stage','CognitiveTest','Admin.Action.eventReason').asSequence().filter(function(v,i){\n  return action.indexOf('SKIP')==i\n  }).last()\nif(res.isNull().not().value()) {\n  res=newValue(res.value().slice(14),'text')  \n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_skip_cognitive_test",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$this('data_qac_cognitive_test').isNull().and(\n  $this('stage_contraindicated_cognitive_test').eq(0),\n  $this('stage_skip_cognitive_test').isNull()\n).value() ? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_missing_cognitive_test",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var res=$('clsa-dcs.CognitiveTest:RES_RESULT_FILE')\nif(res.isNull().not().value()) {\n  res = newValue('{filesize:'+res.length()+'}','text')\n}  \nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_qac_cognitive_test",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$('clsa-dcs.Hearing:InstrumentRun.user').whenNull(\n  $group('Admin.Action.stage','Hearing','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_technician_hearing",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$group('clsa-dcs.Participants:Admin.StageInstance.stage','Hearing',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value() \n? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_contraindicated_hearing",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var action=$group('Admin.Action.stage','Hearing','Admin.Action.actionType').asSequence()\nvar res=$group('Admin.Action.stage','Hearing','Admin.Action.eventReason').asSequence().filter(function(v,i){\n  return action.indexOf('SKIP')==i\n  }).last()\nif(res.isNull().not().value()) {\n  res=newValue(res.value().slice(14),'text')  \n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_skip_hearing",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$this('data_qac_hearing').isNull().and(\n  $this('stage_contraindicated_hearing').eq(0),\n  $this('stage_skip_hearing').isNull()\n).value() ? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_missing_hearing",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var side = ['RIGHT','LEFT']\nvar freq = ['1KT','500','1K','2K','3K','4K','6K','8K']\nvar count = {RIGHT:0,LEFT:0}\nvar countfreq = {RIGHT:0,LEFT:0}\nvar counterr = {RIGHT:0,LEFT:0}\nfor(var i=0;i<side.length;i++) {\n  var s = side[i]\n  var v = 'clsa-dcs.Hearing:RES_' + s + '_'\n  for(var j=0;j<freq.length;j++) {\n    var f = v + freq[j]\n    if ($(f).isNull().not().or($(f + '_ERR').isNull().not()).value()) count[s]++;\n    if ($(f).isNull().not().value()) countfreq[s]++;\n    if ($(f + '_ERR').isNull().not().value()) counterr[s]++;\n  }\n}\nres = (0 == count.RIGHT && 0 == count.LEFT && \n  $('clsa-dcs.Hearing:RES_TEST_ID').isNull().and(\n    $('clsa-dcs.Hearing:RES_TEST_DATETIME').isNull()).value()) ?\n      null : newValue(\n        '{response_left:'+count.LEFT+\n        ',response_right:'+count.RIGHT+\n        ',error_left:'+(counterr.LEFT>0 && countfreq.LEFT==0 ? '1' : '0')+\n        ',error_right:'+(counterr.RIGHT>0 && countfreq.RIGHT==0 ? '1' : '0')+\n        '}','text')"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_qac_hearing",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$('clsa-dcs.Tonometer:InstrumentRun.user').whenNull(\n  $group('Admin.Action.stage','Tonometer','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_technician_tonometer",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$group('clsa-dcs.Participants:Admin.StageInstance.stage','Tonometer',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value() \n? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_contraindicated_tonometer",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var action=$group('Admin.Action.stage','Tonometer','Admin.Action.actionType').asSequence()\nvar res=$group('Admin.Action.stage','Tonometer','Admin.Action.eventReason').asSequence().filter(function(v,i){\n  return action.indexOf('SKIP')==i\n  }).last()\nif(res.isNull().not().value()) {\n  res=newValue(res.value().slice(14),'text')  \n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_skip_tonometer",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$this('data_qac_tonometer').isNull().and(\n  $this('stage_contraindicated_tonometer').eq(0),\n  $this('stage_skip_tonometer').isNull()\n).value() ? 1: 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_missing_tonometer",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var eye=$('clsa-dcs.Tonometer:Measure.TON_EYE').lowerCase().map({\n  'l':'L',\n  'r':'R',\n  'right':'R',\n  'left':'L',\n  'left eye':'L',\n  'right eye':'R',\n  'righr':'R',\n  'rigth':'R',\n  'rught':'R',\n  'lrft':'L',\n  '0':'L',\n  '1':'R',\n  'll':'L',\n  'rr':'R',\n  'le':'L',\n  'leeft':'L',\n  'gauche':'L',\n  'droit':'R',\n  'droite':'R'},null)\n\n// bare minimum useful data is IOPcc: Corneal Compensated Intraocular Pressure\nvar iopcc=$('clsa-dcs.Tonometer:Measure.TON_IOPCC').asSequence() \n\n// if there is raw applanation and pressure data there will be a quality index\n// for each set of measurements\nvar qual=$('clsa-dcs.Tonometer:Measure.TON_QUALITYINDEX').asSequence()\nvar appl=$('clsa-dcs.Tonometer:Measure.TON_PRESSURE').asSequence()\nvar pres=$('clsa-dcs.Tonometer:Measure.TON_APPLANATION').asSequence()\n\nvar has_iopcc=iopcc.size().eq(eye.size()).value()\nvar has_qual=qual.size().eq(eye.size()).value()\nvar has_appl=appl.size().eq(eye.size()).value()\nvar has_pres=pres.size().eq(eye.size()).value()\nvar res=null\nif(eye.isNull().not().value()) {\n  var side={L:{left_iopcc:'0',left_qi:'-1',left_appl:'0',left_pres:'0'},\n            R:{right_iopcc:'0',right_qi:'-1',right_appl:'0',right_pres:'0'}}\n  for(var i=0;i<eye.size();i++) {\n    var e=eye.valueAt(i).value()\n    if(has_iopcc) {\n      var q=newValue(iopcc.valueAt(i).value(),'text')\n      if(q.matches(/^(\\d*\\.)?\\d+$/)) {\n        if('L'==e) {\n          side[e].left_iopcc='1'\n        } else if('R'==e) {\n          side[e].right_iopcc='1'\n        }\n      }\n    }\n    if(has_qual) {\n      var q=newValue(qual.valueAt(i).round(2).value(),'text')\n      if(q.matches(/^(\\d*\\.)?\\d+$/)) {\n        if('L'==e) {\n          side[e].left_qi=q.value()\n        } else if('R'==e) {\n          side[e].right_qi=q.value()\n        }\n      }\n    }\n    if(has_appl) {\n      var q=appl.valueAt(i).value().split(',').length\n      if('L'==e) {\n        side[e].left_appl=q\n      } else if('R'==e) {\n        side[e].right_appl=q\n      }      \n    }        \n    if(has_pres) {\n      var q=pres.valueAt(i).value().split(',').length\n      if('L'==e) {\n        side[e].left_pres=q\n      } else if('R'==e) {\n        side[e].right_pres=q\n      }\n    }\n  }\n  res=newValue(\n    JSON.stringify(side.L).replace(/\"/g,'').replace(/}/g,',') +\n    JSON.stringify(side.R).replace(/\"/g,'').replace(/{/g,''), 'text')\n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_qac_tonometer",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$('clsa-dcs.Weight:InstrumentRun.user').whenNull(\n  $group('Admin.Action.stage','Weight','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_technician_weight",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$group('clsa-dcs.Participants:Admin.StageInstance.stage','Weight',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value() \n? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_contraindicated_weight",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var action=$group('Admin.Action.stage','Weight','Admin.Action.actionType').asSequence()\nvar res=$group('Admin.Action.stage','Weight','Admin.Action.eventReason').asSequence().filter(function(v,i){\n  return action.indexOf('SKIP')==i\n  }).last()\nif(res.isNull().not().value()) {\n  res=newValue(res.value().slice(14),'text')  \n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_skip_weight",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$this('data_qac_weight').isNull().and(\n  $this('stage_contraindicated_weight').eq(0),\n  $this('stage_skip_weight').isNull()\n).value() ? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_missing_weight",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var res=$('clsa-dcs.Weight:Measure.RES_WEIGHT_MEASURE')\nif(res.size().gt(1).value()){\n  res=newValue('{stddev:'+res.stddev().round(6).value()+',size:'+res.size().value()+'}','text')\n} else if(res.size().eq(1).value()) {\n  res=newValue('{stddev:0,size:1}','text')\n} \nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_qac_weight",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$('clsa-dcs-images.RetinalScan:InstrumentRun.user').whenNull(\n  $group('Admin.Action.stage','RetinalScan','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_technician_retinal_scan",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$group('clsa-dcs.Participants:Admin.StageInstance.stage','RetinalScan',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value() \n? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_contraindicated_retinal_scan",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var action=$group('Admin.Action.stage','RetinalScan','Admin.Action.actionType').asSequence()\nvar res=$group('Admin.Action.stage','RetinalScan','Admin.Action.eventReason').asSequence().filter(function(v,i){\n  return action.indexOf('SKIP')==i\n  }).last()\nif(res.isNull().not().value()) {\n  res=newValue(res.value().slice(14),'text')  \n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_skip_retinal_scan",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$this('data_qac_retinal_scan').isNull().and(\n  $this('stage_contraindicated_retinal_scan').eq(0),\n  $this('stage_skip_retinal_scan').isNull()\n).value() ? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_missing_retinal_scan",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var l=$group('clsa-dcs-images.RetinalScan:Measure.SIDE','LEFT','Measure.EYE').asSequence().last()\nvar r=$group('clsa-dcs-images.RetinalScan:Measure.SIDE','RIGHT','Measure.EYE').asSequence().last()\nvar res=null\nif(!l.isNull().and(r.isNull()).value()) {\n  res=newValue(\n    '{filesize_left:'+\n    (l.isNull().value()?'0':l.length().value())+\n    ',filesize_right:'+\n    (r.isNull().value()?'0':r.length().value())+\n    '}', 'text')\n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_qac_retinal_scan",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$('clsa-dcs-images.LateralBoneDensity:InstrumentRun.user').whenNull(\n  $group('Admin.Action.stage','LateralBoneDensity','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_technician_lateral_bone_density",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$group('clsa-dcs.Participants:Admin.StageInstance.stage','LateralBoneDensity',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value() \n? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_contraindicated_lateral_bone_density",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var action=$group('Admin.Action.stage','LateralBoneDensity','Admin.Action.actionType').asSequence()\nvar res=$group('Admin.Action.stage','LateralBoneDensity','Admin.Action.eventReason').asSequence().filter(function(v,i){\n  return action.indexOf('SKIP')==i\n  }).last()\nif(res.isNull().not().value()) {\n  res=newValue(res.value().slice(14),'text')\n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_skip_lateral_bone_density",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$this('data_qac_lateral_bone_density').isNull().and(\n  $this('stage_contraindicated_lateral_bone_density').eq(0),\n  $this('stage_skip_lateral_bone_density').isNull()\n).value() ? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_missing_lateral_bone_density",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var res=$('clsa-dcs-images.LateralBoneDensity:RES_SEL_DICOM_MEASURE')\nif(res.isNull().not().value()) {\n  res = newValue('{filesize:'+res.length()+'}','text')\n}  \nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_qac_lateral_bone_density",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$('clsa-dcs.StandingHeight:InstrumentRun.user').whenNull(\n  $group('Admin.Action.stage','StandingHeight','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_technician_standing_height",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$group('clsa-dcs.Participants:Admin.StageInstance.stage','StandingHeight',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value() \n? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_contraindicated_standing_height",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var action=$group('Admin.Action.stage','StandingHeight','Admin.Action.actionType').asSequence()\nvar res=$group('Admin.Action.stage','StandingHeight','Admin.Action.eventReason').asSequence().filter(function(v,i){\n  return action.indexOf('SKIP')==i\n  }).last()\nif(res.isNull().not().value()) {\n  res=newValue(res.value().slice(14),'text')\n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_skip_standing_height",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$this('data_qac_standing_height').isNull().and(\n  $this('stage_contraindicated_standing_height').eq(0),\n  $this('stage_skip_standing_height').isNull()\n).value() ? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_missing_standing_height",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var res=$('clsa-dcs.StandingHeight:Measure.RES_HEIGHT_MEASURE')\nif(res.size().gt(1).value()){\n  res=newValue('{stddev:'+res.stddev().round(6).value()+',size:'+res.size().value()+'}','text')\n} else if(res.size().eq(1).value()) {\n  res=newValue('{stddev:0,size:1}','text')\n} \nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_qac_standing_height",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$('clsa-dcs-images.ForearmBoneDensity:InstrumentRun.user').whenNull(\n  $group('Admin.Action.stage','ForearmBoneDensity','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_technician_forearm_bone_density",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$group('clsa-dcs.Participants:Admin.StageInstance.stage','ForearmBoneDensity',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value() \n? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_contraindicated_forearm_bone_density",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var action=$group('Admin.Action.stage','ForearmBoneDensity','Admin.Action.actionType').asSequence()\nvar res=$group('Admin.Action.stage','ForearmBoneDensity','Admin.Action.eventReason').asSequence().filter(function(v,i){\n  return action.indexOf('SKIP')==i\n  }).last()\nif(res.isNull().not().value()) {\n  res=newValue(res.value().slice(14),'text')  \n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_skip_forearm_bone_density",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$this('data_qac_forearm_bone_density').isNull().and(\n  $this('stage_contraindicated_forearm_bone_density').eq(0),\n  $this('stage_skip_forearm_bone_density').isNull()\n).value() ? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_missing_forearm_bone_density",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var res=$group('OUTPUT_FA_SIDE','LEFT','RES_FA_DICOM').asSequence().last().whenNull(\n  $group('OUTPUT_FA_SIDE','RIGHT','RES_FA_DICOM').asSequence().last())\nif(res.isNull().not().value()) {\n  res=newValue('{filesize:'+res.length().value()+'}','text')\n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_qac_forearm_bone_density",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$('clsa-dcs-images.WholeBodyBoneDensity:InstrumentRun.user').whenNull(\n  $group('Admin.Action.stage','WholeBodyBoneDensity','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_technician_whole_body_bone_density",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$group('clsa-dcs.Participants:Admin.StageInstance.stage','WholeBodyBoneDensity',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value() \n? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_contraindicated_whole_body_bone_density",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var action=$group('Admin.Action.stage','WholeBodyBoneDensity','Admin.Action.actionType').asSequence()\nvar res=$group('Admin.Action.stage','WholeBodyBoneDensity','Admin.Action.eventReason').asSequence().filter(function(v,i){\n  return action.indexOf('SKIP')==i\n  }).last()\nif(res.isNull().not().value()) {\n  res=newValue(res.value().slice(14),'text')  \n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_skip_whole_body_bone_density",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$this('data_qac_whole_body_bone_density').isNull().and(\n  $this('stage_contraindicated_whole_body_bone_density').eq(0),\n  $this('stage_skip_whole_body_bone_density').isNull()\n).value() ? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_missing_whole_body_bone_density",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var res=$('clsa-dcs-images.WholeBodyBoneDensity:RES_WB_DICOM_1')\nif(res.isNull().not().value()) {\n  res = newValue('{filesize:'+res.length()+'}','text')\n}  \nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_qac_whole_body_bone_density",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$('clsa-dcs-images.DualHipBoneDensity:InstrumentRun.user').whenNull(\n  $group('Admin.Action.stage','DualHipBoneDensity','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_technician_dual_hip_bone_density",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$group('clsa-dcs.Participants:Admin.StageInstance.stage','DualHipBoneDensity',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value() \n? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_contraindicated_dual_hip_bone_density",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var action=$group('Admin.Action.stage','DualHipBoneDensity','Admin.Action.actionType').asSequence()\nvar res=$group('Admin.Action.stage','DualHipBoneDensity','Admin.Action.eventReason').asSequence().filter(function(v,i){\n  return action.indexOf('SKIP')==i\n  }).last()\nif(res.isNull().not().value()) {\n  res=newValue(res.value().slice(14),'text')  \n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_skip_dual_hip_bone_density",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$this('data_qac_dual_hip_bone_density').isNull().and(\n  $this('stage_contraindicated_dual_hip_bone_density').eq(0),\n  $this('stage_skip_dual_hip_bone_density').isNull()\n).value() ? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_missing_dual_hip_bone_density",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var l=$group('Measure.OUTPUT_HIP_SIDE','LEFT','Measure.RES_HIP_DICOM').asSequence().last()\nvar r=$group('Measure.OUTPUT_HIP_SIDE','RIGHT','Measure.RES_HIP_DICOM').asSequence().last()\nvar res=null\nif(!l.isNull().and(r.isNull()).value()) {\n  res=newValue(\n    '{filesize_left:'+\n    (l.isNull().value()?'0':l.length().value())+\n    ',filesize_right:'+\n    (r.isNull().value()?'0':r.length().value())+\n    '}', 'text')\n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_qac_dual_hip_bone_density",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$('clsa-dcs-images.CarotidIntima:InstrumentRun.user').whenNull(\n  $group('Admin.Action.stage','CarotidIntima','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_technician_carotid_intima",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$group('clsa-dcs.Participants:Admin.StageInstance.stage','CarotidIntima',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value() \n? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_contraindicated_carotid_intima",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var action=$group('Admin.Action.stage','CarotidIntima','Admin.Action.actionType').asSequence()\nvar res=$group('Admin.Action.stage','CarotidIntima','Admin.Action.eventReason').asSequence().filter(function(v,i){\n  return action.indexOf('SKIP')==i\n  }).last()\nif(res.isNull().not().value()) {\n  res=newValue(res.value().slice(14),'text')  \n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_skip_carotid_intima",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$this('data_qac_carotid_intima').isNull().and(\n  $this('stage_contraindicated_carotid_intima').eq(0),\n  $this('stage_skip_carotid_intima').isNull()\n).value() ? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_missing_carotid_intima",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var rst=$group('clsa-dcs-images.CarotidIntima:Measure.SIDE','Right','Measure.STILL_IMAGE').asSequence().last()\nvar rsr=$group('clsa-dcs-images.CarotidIntima:Measure.SIDE','Right','Measure.SR').asSequence().last()\nvar rc1=$group('clsa-dcs-images.CarotidIntima:Measure.SIDE','Right','Measure.CINELOOP_1').asSequence().last()\nvar rc2=$group('clsa-dcs-images.CarotidIntima:Measure.SIDE','Right','Measure.CINELOOP_2').asSequence().last()\nvar rc3=$group('clsa-dcs-images.CarotidIntima:Measure.SIDE','Right','Measure.CINELOOP_3').asSequence().last()\nvar lst=$group('clsa-dcs-images.CarotidIntima:Measure.SIDE','Left','Measure.STILL_IMAGE').asSequence().last()\nvar lsr=$group('clsa-dcs-images.CarotidIntima:Measure.SIDE','Left','Measure.SR').asSequence().last()\nvar lc1=$group('clsa-dcs-images.CarotidIntima:Measure.SIDE','Left','Measure.CINELOOP_1').asSequence().last()\nvar lc2=$group('clsa-dcs-images.CarotidIntima:Measure.SIDE','Left','Measure.CINELOOP_2').asSequence().last()\nvar lc3=$group('clsa-dcs-images.CarotidIntima:Measure.SIDE','Left','Measure.CINELOOP_3').asSequence().last()\nvar res=null\nif(!rst.isNull().and(rsr.isNull(),rc1.isNull(),rc2.isNull(),rc3.isNull(),\n   lst.isNull(),lsr.isNull(),lc1.isNull(),lc2.isNull(),lc3.isNull()).value()) {\n  var str=[]\n  str.push('filesize_left_still:'+(lst.isNull().value()?'0':lst.length().value()))\n  str.push('filesize_left_sr:'+(lsr.isNull().value()?'0':lsr.length().value()))\n  str.push('filesize_left_cine_1:'+(lc1.isNull().value()?'0':lc1.length().value()))\n  str.push('filesize_left_cine_2:'+(lc2.isNull().value()?'0':lc2.length().value()))\n  str.push('filesize_left_cine_3:'+(lc3.isNull().value()?'0':lc3.length().value()))\n  str.push('filesize_right_still:'+(rst.isNull().value()?'0':rst.length().value()))\n  str.push('filesize_right_sr:'+(rsr.isNull().value()?'0':rsr.length().value()))\n  str.push('filesize_right_cine_1:'+(rc1.isNull().value()?'0':rc1.length().value()))\n  str.push('filesize_right_cine_2:'+(rc2.isNull().value()?'0':rc2.length().value()))\n  str.push('filesize_right_cine_3:'+(rc3.isNull().value()?'0':rc3.length().value()))\n  res=newValue('{'+str.join(',')+'}','text')\n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_qac_carotid_intima",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$('clsa-dcs.TUG:QuestionnaireRun.user').whenNull(\n  $group('Admin.Action.stage','TUG','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_technician_tug",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$group('clsa-dcs.Participants:Admin.StageInstance.stage','TUG',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value() \n? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_contraindicated_tug",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var action=$group('Admin.Action.stage','TUG','Admin.Action.actionType').asSequence()\nvar res=$group('Admin.Action.stage','TUG','Admin.Action.eventReason').asSequence().filter(function(v,i){\n  return action.indexOf('SKIP')==i\n  }).last()\nif(res.isNull().not().value()) {\n  res=newValue(res.value().slice(14),'text')  \n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_skip_tug",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$this('data_qac_tug').isNull().and(\n  $this('stage_contraindicated_tug').eq(0),\n  $this('stage_skip_tug').isNull()\n).value() ? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_missing_tug",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var tt=$('clsa-dcs.TUG:TUG_TIME').whenNull($('clsa-dcs.TUG:TUG_TIME_2'))\nvar res=null\nif(tt.isNull().not().value()) {\n  var wt=$('clsa-dcs.4mWalk:WLK_TIME').whenNull($('clsa-dcs.4mWalk:WLK_TIME_2'))  \n  var ct=$('clsa-dcs.ChairRise:CR_TIME').whenNull($('clsa-dcs.ChairRise:CR_TIME_2'))  \n  var str = '0'\n  if(tt.isNull().not().and(ct.isNull().not()).value()) {\n    var cv=ct.div($('clsa-dcs.ChairRise:CR_NB').whenNull(1))\n    str=Math.round(tt.minus(wt.multiply(1.5).plus(cv)).abs().value())\n  }  \n  res=newValue(\n    '{time:'+tt.round(3).value()+\n    ',congruency:'+str+\n    '}','text')\n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_qac_tug",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$('clsa-dcs.ChairRise:QuestionnaireRun.user').whenNull(\n  $group('Admin.Action.stage','ChairRise','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_technician_chair_rise",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$group('clsa-dcs.Participants:Admin.StageInstance.stage','ChairRise',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value() \n? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_contraindicated_chair_rise",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var action=$group('Admin.Action.stage','ChairRise','Admin.Action.actionType').asSequence()\nvar res=$group('Admin.Action.stage','ChairRise','Admin.Action.eventReason').asSequence().filter(function(v,i){\n  return action.indexOf('SKIP')==i\n  }).last()\nif(res.isNull().not().value()) {\n  res=newValue(res.value().slice(14),'text')  \n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_skip_chair_rise",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$this('data_qac_chair_rise').isNull().and(\n  $this('stage_contraindicated_chair_rise').eq(0),\n  $this('stage_skip_chair_rise').isNull()\n).value() ? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_missing_chair_rise",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var ct=$('clsa-dcs.ChairRise:CR_TIME').whenNull($('clsa-dcs.ChairRise:CR_TIME_2'))  \nvar res=null\nif(ct.isNull().not().value()) {\n  var wt=$('clsa-dcs.4mWalk:WLK_TIME').whenNull($('clsa-dcs.4mWalk:WLK_TIME_2'))  \n  var tt=$('clsa-dcs.TUG:TUG_TIME').whenNull($('clsa-dcs.TUG:TUG_TIME_2'))  \n  var str = '0'\n  if(tt.isNull().not().and(ct.isNull().not()).value()) {\n    var cv=ct.div($('clsa-dcs.ChairRise:CR_NB').whenNull(1))\n    str=Math.round(tt.minus(wt.multiply(1.5).plus(cv)).abs().value())\n  }  \n  res=newValue(\n    '{time:'+ct.round(3).value()+\n    ',congruency:'+str+\n    '}','text')\n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_qac_chair_rise",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$('clsa-dcs.HipsWaist:InstrumentRun.user').whenNull(\n  $group('Admin.Action.stage','HipsWaist','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_technician_hips_waist",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$group('clsa-dcs.Participants:Admin.StageInstance.stage','HipsWaist',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value() \n? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_contraindicated_hips_waist",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var action=$group('Admin.Action.stage','HipsWaist','Admin.Action.actionType').asSequence()\nvar res=$group('Admin.Action.stage','HipsWaist','Admin.Action.eventReason').asSequence().filter(function(v,i){\n  return action.indexOf('SKIP')==i\n  }).last()\nif(res.isNull().not().value()) {\n  res=newValue(res.value().slice(14),'text')  \n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_skip_hips_waist",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$this('data_qac_hips_waist').isNull().and(\n  $this('stage_contraindicated_hips_waist').eq(0),\n  $this('stage_skip_hips_waist').isNull()\n).value() ? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_missing_hips_waist",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var i=$('clsa-dcs.HipsWaist:IV_MEASURE_TAKEN')\nvar w=$('clsa-dcs.HipsWaist:RES_WAIST_SIZE')\nvar h=$('clsa-dcs.HipsWaist:RES_HIPS_SIZE')\nvar r=$('clsa-dcs.HipsWaist:CALC_WAIST_TO_HIP_RATIO')\nvar res=null\nif(!i.isNull().and(w.isNull(),h.isNull(),r.isNull()).value()) {\n  var str='{iv_type:'+(i.isNull().value()?'NA':i.value())+','\n  str+='size_waist:'+(w.isNull().value()?'0':w.value())+','\n  str+='size_hips:'+(h.isNull().value()?'0':h.value())+','\n  str+='ratio:'+(r.isNull().value()?'0':r.round(3).value())+'}'\n  res=newValue(str,'text')\n}  \nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_qac_hips_waist",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$('clsa-dcs.NeuropsychologicalBattery:QuestionnaireRun.user').whenNull(\n  $group('Admin.Action.stage','NeuropsychologicalBattery','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_technician_neuropsychological_battery",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$group('clsa-dcs.Participants:Admin.StageInstance.stage','NeuropsychologicalBattery',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value() \n? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_contraindicated_neuropsychological_battery",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var action=$group('Admin.Action.stage','NeuropsychologicalBattery','Admin.Action.actionType').asSequence()\nvar res=$group('Admin.Action.stage','NeuropsychologicalBattery','Admin.Action.eventReason').asSequence().filter(function(v,i){\n  return action.indexOf('SKIP')==i\n  }).last()\nif(res.isNull().not().value()) {\n  res=newValue(res.value().slice(14),'text')\n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_skip_neuropsychological_battery",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$this('data_qac_neuropsychological_battery').isNull().and(\n  $this('stage_contraindicated_neuropsychological_battery').eq(0),\n  $this('stage_skip_neuropsychological_battery').isNull()\n).value() ? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_missing_neuropsychological_battery",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var stage='clsa-dcs.NeuropsychologicalBattery:'\nvar p=$(stage+'QuestionnaireMetric.missingCount').asSequence()\nvar q=$(stage+'QuestionnaireMetric.questionCount').asSequence()\nvar res=null\nif(p.isNull().and(q.isNull()).not().value() && 0!=q.sum()) {\n  var str=[]\n  str.push(\n    'complete:'+\n    Math.round(q.sum().minus(p.sum()).multiply(100).div(q.sum()).value()))\n\nvar sections={\n'FAS':[\n'FAS_INSTRDY_DCS',\n'FAS_INSTRPT_DCS',\n'FAS_INSTFCTR_DCS',\n'FAS_INSTLST_DCS',\n'FAS_FRECR_DCS',\n'FAS_FCOMP_DCS',\n'FAS_ARECR_DCS',\n'FAS_ACOMP_DCS',\n'FAS_SRECR_DCS',\n'FAS_SCOMP_DCS'],\n'SN':[\n'SN_LIVH_DCS',\n'SN_LIVH_M2R_DCS',\n'SN_LIVH_M2S_DCS',\n'SN_LIVH_M2A_DCS',\n'SN_LIVH_M3R_DCS',\n'SN_LIVH_M3S_DCS',\n'SN_LIVH_M3A_DCS',\n'SN_LIVH_M4R_DCS',\n'SN_LIVH_M4S_DCS',\n'SN_LIVH_M4A_DCS',\n'SN_LIVH_M5R_DCS',\n'SN_LIVH_M5S_DCS',\n'SN_LIVH_M5A_DCS',\n'SN_LIVH_M6R_DCS',\n'SN_LIVH_M6S_DCS',\n'SN_LIVH_M6A_DCS',\n'SN_LIVH_M7R_DCS',\n'SN_LIVH_M7S_DCS',\n'SN_LIVH_M7A_DCS',\n'SN_LIVH_M8R_DCS',\n'SN_LIVH_M8S_DCS',\n'SN_LIVH_M8A_DCS',\n'SN_LIVH_M9R_DCS',\n'SN_LIVH_M9S_DCS',\n'SN_LIVH_M9A_DCS',\n'SN_LIVH_M10R_DCS',\n'SN_LIVH_M10S_DCS',\n'SN_LIVH_M10A_DCS',\n'SN_CHILD_DCS',\n'SN_CHILDBIO_DCS',\n'SN_CHILDADP_DCS',\n'SN_CHILDSTP_DCS',\n'SN_CHILDPR_DCS',\n'SN_CHILDSTPPR_DCS',\n'SN_DGHTRLIV_DCS',\n'SN_SONLIV_DCS',\n'SN_SEECHILD_DCS',\n'SN_SIBLIV_DCS',\n'SN_SEESIB_DCS',\n'SN_RELLIV_DCS',\n'SN_SEEREL_DCS',\n'SN_FRND_DCS',\n'SN_SEEFRND_DCS',\n'SN_NEIBR_DCS',\n'SN_SEENEIBR_DCS',\n'SN_PERWSCH_DCS',\n'SN_PERCOM_DCS',\n'SN_PERACT_DCS'],\n'SPA':[\n'SPA_SOAC_DCS',\n'SPA_OUTS_DCS',\n'SPA_CHRCH_DCS',\n'SPA_SPORT_DCS',\n'SPA_EDUC_DCS',\n'SPA_CLUB_DCS',\n'SPA_NEIBR_DCS',\n'SPA_VOLUN_DCS',\n'SPA_OTACT_DCS',\n'SPA_MORAC_DCS',\n'SPA_PREVAC_DCS'],\n'SSA':[\n'SSA_CONFBED_DCS',\n'SSA_NDTLK_DCS',\n'SSA_CRISIS_DCS',\n'SSA_TYTDR_DCS',\n'SSA_SHLOV_DCS',\n'SSA_GOODT_DCS',\n'SSA_INFO_DCS',\n'SSA_CONFID_DCS',\n'SSA_HUGS_DCS',\n'SSA_RELAX_DCS',\n'SSA_MEALS_DCS',\n'SSA_ADVCE_DCS',\n'SSA_MINDOFF_DCS',\n'SSA_CHORES_DCS',\n'SSA_SHFEAR_DCS',\n'SSA_SUGG_DCS',\n'SSA_ENJOY_DCS',\n'SSA_PROBLM_DCS',\n'SSA_LOVU_DCS',\n'SSA_PET_DCS'],\n'STP':[\n'NEUR_CONSREC_DCS',\n'STP_DOT_DCS',\n'STP_DOTRPT_DCS',\n'STP_DOTFCTR_DCS',\n'STP_DOTLST_DCS',\n'STP_DOTRECR_DCS',\n'STP_DOTTIMEN_DCS',\n'STP_WOR_DCS',\n'STP_WORRPT_DCS',\n'STP_WORFCTR_DCS',\n'STP_WORLST_DCS',\n'STP_WORRECR_DCS',\n'STP_WORTIMEN_DCS',\n'STP_COL_DCS',\n'STP_COLRPT_DCS',\n'STP_COLFCTR_DCS',\n'STP_COLLST_DCS',\n'STP_COLRECR_DCS',\n'STP_COLTIMEN_DCS']\n}\n\n  for(var key in sections) {\n    var rcount=0\n    var qcount=0\n    var arr=sections[key]\n    for(var i=0; i<arr.length; i++ ) {\n      var j=$(stage+arr[i])\n      if(j.isNull().value()) continue\n      qcount++      \n      rcount+=j.any('REFUSED').value()?1:0\n    }\n    if(0==qcount) {\n      str.push(key+':100')\n    } else {\n      var perc=100.0*rcount/qcount      \n      if(0<perc && 100>perc && 0!=(perc-Math.floor(perc))) {        \n        perc=perc.toFixed(3)\n      }\n      str.push(key+':'+perc)\n    }  \n  }\n\n  res=newValue('{'+str.join(',')+'}','text')\n}\nres  "
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_qac_neuropsychological_battery",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$('clsa-dcs.StandingBalance:QuestionnaireRun.user').whenNull(\n  $group('Admin.Action.stage','StandingBalance','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_technician_standing_balance",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$group('clsa-dcs.Participants:Admin.StageInstance.stage','StandingBalance',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value() \n? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_contraindicated_standing_balance",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var action=$group('Admin.Action.stage','StandingBalance','Admin.Action.actionType').asSequence()\nvar res=$group('Admin.Action.stage','StandingBalance','Admin.Action.eventReason').asSequence().filter(function(v,i){\n  return action.indexOf('SKIP')==i\n  }).last()\nif(res.isNull().not().value()) {\n  res=newValue(res.value().slice(14),'text')  \n} else {\n  var l1=$('clsa-dcs.StandingBalance:STAND_COMPLETION_LEFT')  \n  var r1=$('clsa-dcs.StandingBalance:STAND_COMPLETION_RIGHT')  \n  if(l1.any('NO').value()) {\n    var l2=$('clsa-dcs.StandingBalance:STAND_UNCOMPLETE_LEFT').map({\n      'TECHNICAL':'TechnicalProblem',\n      'PARTICIPANT-DECISION':'ParticipantDecision',\n      'INTERVIEWER-DECISION':'InterviewerDecision',\n      'OTHER-SPEFICY':'SeeComment'},null)\n    if(l2.isNull().not().value()) {\n      res=l2\n    }  \n  } \n  if (null===res && r1.any('NO').value()) {\n    var r2=$('clsa-dcs.StandingBalance:STAND_UNCOMPLETE_RIGHT').map({\n      'TECHNICAL':'TechnicalProblem',\n      'PARTICIPANT-DECISION':'ParticipantDecision',\n      'INTERVIEWER-DECISION':'InterviewerDecision',\n      'OTHER-SPEFICY':'SeeComment'},null)\n    if(r2.isNull().not().value()) {\n      res=r2\n    }\n  }\n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_skip_standing_balance",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$this('data_qac_standing_balance').isNull().and(\n  $this('stage_contraindicated_standing_balance').eq(0),\n  $this('stage_skip_standing_balance').isNull()\n).value() ? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_missing_standing_balance",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var b=$('clsa-dcs.StandingBalance:STAND_BEST').whenNull($('clsa-dcs.StandingBalance:STAND_BEST_2'))\nvar lc =$('clsa-dcs.StandingBalance:STAND_COMPLETION_LEFT')\nvar rc =$('clsa-dcs.StandingBalance:STAND_COMPLETION_RIGHT')\nvar res=null\nif(!b.isNull().and(lc.isNull(),rc.isNull()).value()) {\n  var str = '{time_best:'\n  if(b.isNull().not().value()) {\n    str+=b.round(3).value()\n  } else  {\n    str+='-1'\n  }\n  var l=$('clsa-dcs.StandingBalance:STAND_LEFT_TIME').whenNull($('clsa-dcs.StandingBalance:STAND_LEFT_TIME_2'))\n  str+=',time_left:'\n  if(l.isNull().not().value()) {\n    str+=l.round(3).value()\n  } else  {\n    str+='-1'\n  }\n  var r=$('clsa-dcs.StandingBalance:STAND_RIGHT_TIME').whenNull($('clsa-dcs.StandingBalance:STAND_RIGHT_TIME_2'))\n  str+=',time_right:'\n  if(r.isNull().not().value()) {\n    str+=r.round(3).value()\n  } else  {\n    str+='-1'\n  }\n  str+='}'  \n  res=newValue(str,'text')\n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_qac_standing_balance",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$('clsa-dcs.4mWalk:QuestionnaireRun.user').whenNull(\n  $group('Admin.Action.stage','4mWalk','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_technician_four_metre_walk",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$group('clsa-dcs.Participants:Admin.StageInstance.stage','4mWalk',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value() \n? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_contraindicated_four_metre_walk",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var action=$group('Admin.Action.stage','4mWalk','Admin.Action.actionType').asSequence()\nvar res=$group('Admin.Action.stage','4mWalk','Admin.Action.eventReason').asSequence().filter(function(v,i){\n  return action.indexOf('SKIP')==i\n  }).last()\nif(res.isNull().not().value()) {\n  res=newValue(res.value().slice(14),'text')  \n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_skip_four_metre_walk",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$this('data_qac_four_metre_walk').isNull().and(\n  $this('stage_contraindicated_four_metre_walk').eq(0),\n  $this('stage_skip_four_metre_walk').isNull()\n).value() ? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_missing_four_metre_walk",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var wt=$('clsa-dcs.4mWalk:WLK_TIME').whenNull($('clsa-dcs.4mWalk:WLK_TIME_2'))\nvar res=null\nif(wt.isNull().not().value()) {\n  var tt=$('clsa-dcs.TUG:TUG_TIME').whenNull($('clsa-dcs.TUG:TUG_TIME_2'))\n  var ct=$('clsa-dcs.ChairRise:CR_TIME').whenNull($('clsa-dcs.ChairRise:CR_TIME_2'))  \n  var str = '0'\n  if(tt.isNull().not().and(ct.isNull().not()).value()) {\n    var cv=ct.div($('clsa-dcs.ChairRise:CR_NB').whenNull(1))\n    str=Math.round(tt.minus(wt.multiply(1.5).plus(cv)).abs().value())\n  }  \n  res=newValue(\n    '{time:'+wt.round(3).value()+\n    ',congruency:'+str+\n    '}','text')\n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_qac_four_metre_walk",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$('clsa-dcs.SittingHeight:InstrumentRun.user').whenNull(\n  $group('Admin.Action.stage','SittingHeight','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_technician_sitting_height",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$group('clsa-dcs.Participants:Admin.StageInstance.stage','SittingHeight',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value() \n? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_contraindicated_sitting_height",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var action=$group('Admin.Action.stage','SittingHeight','Admin.Action.actionType').asSequence()\nvar res=$group('Admin.Action.stage','SittingHeight','Admin.Action.eventReason').asSequence().filter(function(v,i){\n  return action.indexOf('SKIP')==i\n  }).last()\nif(res.isNull().not().value()) {\n  res=newValue(res.value().slice(14),'text')\n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_skip_sitting_height",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$this('data_qac_sitting_height').isNull().and(\n  $this('stage_contraindicated_sitting_height').eq(0),\n  $this('stage_skip_sitting_height').isNull()\n).value() ? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_missing_sitting_height",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var res=$('clsa-dcs.SittingHeight:Measure.RES_SIT_HEIGHT_MEASURE')\nif(res.size().gt(1).value()){\n  res=newValue('{stddev:'+res.stddev().round(6).value()+',size:'+res.size().value()+'}','text')\n} else if(res.size().eq(1).value()) {\n  res=newValue('{stddev:0,size:1}','text')\n} \nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_qac_sitting_height",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$('clsa-dcs.VisionAcuity:QuestionnaireRun.user').whenNull(\n  $group('Admin.Action.stage','VisionAcuity','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_technician_vision_acuity",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$group('clsa-dcs.Participants:Admin.StageInstance.stage','VisionAcuity',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value() \n? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_contraindicated_vision_acuity",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var action=$group('Admin.Action.stage','VisionAcuity','Admin.Action.actionType').asSequence()\nvar res=$group('Admin.Action.stage','VisionAcuity','Admin.Action.eventReason').asSequence().filter(function(v,i){\n  return action.indexOf('SKIP')==i\n  }).last()\nif(res.isNull().not().value()) {\n  res=newValue(res.value().slice(14),'text')  \n} else {\n  var tests=['DONE_VA','DONE_BOTH_VA','DONE_LEFT_VA','DONE_RIGHT_VA','DONE_LEFT_PO_VA','DONE_RIGHT_PO_VA']\n  var reasons=['DONE_RSN_VA','DONE_RSN_BOTH_VA','DONE_RSN_LEFT_VA','DONE_RSN_RIGHT_VA','DONE_RSN_LEFT_PO_VA','DONE_RSN_RIGHT_PO_VA']\n  for(var i=0;i<tests.length;i++) {\n    var t=$('clsa-dcs.VisionAcuity:'+tests[i])\n    if(t.any('NO').value()) {\n      var r=$('clsa-dcs.VisionAcuity:'+reasons[i]).map({\n      'TECHNICAL-PROBLEM':'TechnicalProblem',\n      'PARTICIPANT-DECISION':'ParticipantDecision',\n      'INTERVIEWER-DECISION':'InterviewerDecision',\n      'OTHER':'SeeComment'},null)\n      if(r.isNull().not().value()) {\n        res=r\n        break\n      }\n    }\n  }  \n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_skip_vision_acuity",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$this('data_qac_vision_acuity').isNull().and(\n  $this('stage_contraindicated_vision_acuity').eq(0),\n  $this('stage_skip_vision_acuity').isNull()\n).value() ? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_missing_vision_acuity",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var count = {RIGHT:0,LEFT:0}\nvar rtests=['DONE_RIGHT_VA','DONE_RIGHT_PO_VA']\nvar ltests=['DONE_LEFT_VA','DONE_LEFT_PO_VA']\nvar n=0\nfor(var i=0;i<2;i++) {\n  var t=$('clsa-dcs.VisionAcuity:'+rtests[i])\n  if(t.isNull().value()) {\n    n++\n  } else if(t.any('YES').value()) {\n    count['RIGHT']++\n  }\n  t=$('clsa-dcs.VisionAcuity:'+ltests[i])\n  if(t.isNull().value()) {\n    n++\n  } else if(t.any('YES').value()) {\n    count['LEFT']++\n  }\n}\nvar res=null\nif(4!=n) {\n  res=newValue(\n    '{left_test:'+count['LEFT']+\n    ',right_test:'+count['RIGHT']+\n    '}','text')\n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_qac_vision_acuity",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$group('clsa-dcs.Participants:Admin.StageInstance.stage','Consent',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value() \n? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_contraindicated_consent",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$this('data_qac_consent').isNull().and(\n  $this('stage_contraindicated_consent').eq(0),\n  $this('stage_skip_consent').isNull()\n).value() ? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_missing_consent",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var m=$('clsa-dcs.Consent:mode')\nvar a=$('clsa-dcs.Consent:accepted')\nvar res=null\nif(m.isNull().and(a.isNull()).not().value()) {\n  res=newValue(\n    '{mode:'+m.lowerCase().value()+\n    ',accepted:'+(a.value()?1:0)+\n    '}','text')\n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_qac_consent",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$group('Admin.Action.stage','Consent','Admin.Action.user').asSequence().last().lowerCase()"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_technician_consent",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var action=$group('Admin.Action.stage','Consent','Admin.Action.actionType').asSequence()\nvar res=$group('Admin.Action.stage','Consent','Admin.Action.eventReason').asSequence().filter(function(v,i){\n  return action.indexOf('SKIP')==i\n  }).last()\nif(res.isNull().not().value()) {\n  res=newValue(res.value().slice(14),'text')  \n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_skip_consent",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$('clsa-dcs.ContraIndications:QuestionnaireRun.user').whenNull(\n  $group('Admin.Action.stage','ContraIndications','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_technician_contraindications",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var action=$group('Admin.Action.stage','ContraIndications','Admin.Action.actionType').asSequence()\nvar res=$group('Admin.Action.stage','ContraIndications','Admin.Action.eventReason').asSequence().filter(function(v,i){\n  return action.indexOf('SKIP')==i\n  }).last()\nif(res.isNull().not().value()) {\n  res=newValue(res.value().slice(14),'text')  \n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_skip_contraindications",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$group('clsa-dcs.Participants:Admin.StageInstance.stage','ContraIndications',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value() \n? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_contraindicated_contraindications",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var stage='clsa-dcs.ContraIndications:'\nvar p=$(stage+'QuestionnaireMetric.missingCount').asSequence()\nvar q=$(stage+'QuestionnaireMetric.questionCount').asSequence()\nvar res=null\nif(p.isNull().and(q.isNull()).not().value() && 0!=q.sum()) {\n  var str=[]\n  str.push(\n    'complete:'+\n    Math.round(q.sum().minus(p.sum()).multiply(100).div(q.sum()).value()))\n\nvar sections={\n'QAH_COM':[\n'QAH_INT1_COM',\n'QAH_INTIME_COM',\n'QAH_TWOVIS_COM',\n'QAH_18mo_COM',\n'QAH_INSAS_COM',\n'QAH_INKNO_COM',\n'QAH_FRIEND_COM',\n'QAH_INMED_COM',\n'QAH_HIN_COM',\n'QAH_INMEM_COM',\n'QAH_COM_COM'],\n'ICQ_COM':[\n'ICQ_DOMHAND_COM',\n'ICQ_HNDSWL_COM',\n'ICQ_HNDCST_COM',\n'ICQ_HNDHMT_COM',\n'ICQ_ARMSWL_COM',\n'ICQ_ARMCST_COM',\n'ICQ_LEGSWL_COM',\n'ICQ_LEGCST_COM',\n'ICQ_SRG3MO_COM',\n'ICQ_SRGYARM_COM',\n'ICQ_SRGYCHT_COM',\n'ICQ_SRGYHND_COM',\n'ICQ_SRGYART_COM',\n'ICQ_SRGYEYE_COM',\n'ICQ_SRGYABD_COM',\n'ICQ_SRGYHRT_COM',\n'ICQ_SRGYOT_COM',\n'ICQ_SRGYOTSPE_COM',\n'ICQ_PAINHND_COM',\n'ICQ_RISEASSI_COM',\n'ICQ_RISECANE_COM',\n'ICQ_ABLESTND_COM',\n'ICQ_ABLEWLK_COM',\n'ICQ_PREGNT_COM',\n'ICQ_PREGNTWK_COM',\n'ICQ_ILLLUNG_COM',\n'ICQ_HRTCOND_COM',\n'ICQ_EMB6WK_COM',\n'ICQ_EMBMED_COM',\n'ICQ_DERET3MO_COM',\n'ICQ_EYEINF_COM',\n'ICQ_EARINF_COM',\n'ICQ_CATRCT_COM',\n'ICQ_CATRCT2_COM',\n'ICQ_GLAUC_COM',\n'ICQ_HRAID_COM',\n'ICQ_HRAID2_COM',\n'ICQ_HRWORKING_COM',\n'ICQ_GLASSES2_COM',\n'ICQ_CTLENS2_COM',\n'ICQ_GLASSES_COM',\n'ICQ_CTLENS_COM',\n'ICQ_PROSLIM_COM',\n'ICQ_PROSARM_COM',\n'ICQ_PROSLEG_COM',\n'ICQ_PROSHND_COM',\n'ICQ_PROSFT_COM',\n'ICQ_PROSHIP_COM',\n'ICQ_PROSKNEE_COM',\n'ICQ_FX_COM',\n'ICQ_FXARM_COM',\n'ICQ_FXSHLD_COM',\n'ICQ_FXHND_COM',\n'ICQ_FXRIB_COM',\n'ICQ_FXLEG_COM',\n'ICQ_FXANK_COM',\n'ICQ_FXFT_COM',\n'ICQ_FXHIP_COM',\n'ICQ_FXKNEE_COM',\n'ICQ_FXCHK_COM',\n'ICQ_FXJAW_COM',\n'ICQ_FXNOSE_COM',\n'ICQ_FXSKL_COM',\n'ICQ_FXNECK_COM',\n'ICQ_FXBACK_COM',\n'ICQ_FXCOLLR_COM',\n'ICQ_FXPELV_COM',\n'ICQ_LAMIN_COM',\n'ICQ_POLIO_COM',\n'ICQ_BLDSP3MO_COM',\n'ICQ_ANEURY_COM',\n'ICQ_PACEMKR_COM',\n'ICQ_DEFIBR_COM',\n'ICQ_COCHLIMP_COM',\n'ICQ_NGTUBE_COM',\n'ICQ_ABDTUBE_COM',\n'ICQ_CHEMO4WK_COM',\n'ICQ_HAEMO_COM',\n'ICQ_BLDTR24H_COM',\n'ICQ_NUCLMED_COM',\n'ICQ_NUCLMED_48H_COM',\n'ICQ_NUCLMED_TEST_Q_COM',\n'ICQ_NUCLMED_IV24H_COM',\n'ICQ_BARSWAL_COM',\n'ICQ_TINNIT_COM',\n'ICQ_SMOKE_COM',\n'ICQ_SMOKETIME_COM',\n'ICQ_SMOKETIMEH_COM',\n'ICQ_INHALERLONG_COM',\n'ICQ_INHALERSHORT_COM']\n}\n\n  var skip=[]\n  if($(stage+'QuestionnaireRun.version').any('2.0','2.1','2.2').value()) {\n    skip.push('QAH_COM')\n  }\n\n  for(var key in sections) {\n    if(-1!=skip.indexOf(key)) {\n      str.push(key+':0')\n      continue\n    }\n    var rcount=0\n    var qcount=0\n    var arr=sections[key]\n    for(var i=0; i<arr.length; i++ ) {\n      var j=$(stage+arr[i])\n      if(j.isNull().value()) continue\n      qcount++      \n      rcount+=j.any('REFUSED').value()?1:0\n    }\n    if(0==qcount) {\n      str.push(key+':100')\n    } else {\n      var perc=100.0*rcount/qcount      \n      if(0<perc && 100>perc && 0!=(perc-Math.floor(perc))) {        \n        perc=perc.toFixed(3)\n      }\n      str.push(key+':'+perc)\n    }  \n  }\n\n  res=newValue('{'+str.join(',')+'}','text')\n}\nres  "
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_qac_contraindications",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$this('data_qac_contraindications').isNull().and(\n  $this('stage_contraindicated_contraindications').eq(0),\n  $this('stage_skip_contraindications').isNull()\n).value() ? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_missing_contraindications",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$('clsa-dcs.EventPMT:QuestionnaireRun.user').whenNull(\n  $group('Admin.Action.stage','EventPMT','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_technician_event_pmt",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var action=$group('Admin.Action.stage','EventPMT','Admin.Action.actionType').asSequence()\nvar res=$group('Admin.Action.stage','EventPMT','Admin.Action.eventReason').asSequence().filter(function(v,i){\n  return action.indexOf('SKIP')==i\n  }).last()\nif(res.isNull().not().value()) {\n  res=newValue(res.value().slice(14),'text')  \n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_skip_event_pmt",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$group('clsa-dcs.Participants:Admin.StageInstance.stage','EventPMT',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value() \n? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_contraindicated_event_pmt",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var stage='clsa-dcs.EventPMT:'\nvar p=$(stage+'QuestionnaireMetric.missingCount').asSequence()\nvar q=$(stage+'QuestionnaireMetric.questionCount').asSequence()\nvar res=null\nif(p.isNull().and(q.isNull()).not().value() && 0!=q.sum()) {\n  var str=[]\n  str.push(\n    'complete:'+\n    Math.round(q.sum().minus(p.sum()).multiply(100).div(q.sum()).value()))\n\nvar sections={\n'PMT':[\n'PMT_ABLE_DCS',\n'PMT_FCT_DCS',\n'PMT_TIM_DCS',\n'PMT_NOCUE_DCS',\n'PMT_ENV_DCS',\n'PMT_ENV_OBS_DCS',\n'PMT_MONEY_DCS',\n'PMT_MONEY_OBS_DCS',\n'PMT_ITP_DCS',\n'PMT_ACR_DCS',\n'PMT_REM_DCS']\n}\n\n  for(var key in sections) {\n    var rcount=0\n    var qcount=0\n    var arr=sections[key]\n    for(var i=0; i<arr.length; i++ ) {\n      var j=$(stage+arr[i])\n      if(j.isNull().value()) continue\n      qcount++      \n      rcount+=j.any('REFUSED').value()?1:0\n    }\n    if(0==qcount) {\n      str.push(key+':100')\n    } else {\n      var perc=100.0*rcount/qcount      \n      if(0<perc && 100>perc && 0!=(perc-Math.floor(perc))) {        \n        perc=perc.toFixed(3)\n      }\n      str.push(key+':'+perc)\n    }  \n  }\n\n  res=newValue('{'+str.join(',')+'}','text')\n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_qac_event_pmt",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$this('data_qac_event_pmt').isNull().and(\n  $this('stage_contraindicated_event_pmt').eq(0),\n  $this('stage_skip_event_pmt').isNull()\n).value() ? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_missing_event_pmt",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$('clsa-dcs.DiseaseSymptoms:QuestionnaireRun.user').whenNull(\n  $group('Admin.Action.stage','DiseaseSymptoms','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_technician_disease_symptoms",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var action=$group('Admin.Action.stage','DiseaseSymptoms','Admin.Action.actionType').asSequence()\nvar res=$group('Admin.Action.stage','DiseaseSymptoms','Admin.Action.eventReason').asSequence().filter(function(v,i){\n  return action.indexOf('SKIP')==i\n  }).last()\nif(res.isNull().not().value()) {\n  res=newValue(res.value().slice(14),'text')  \n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_skip_disease_symptoms",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$group('clsa-dcs.Participants:Admin.StageInstance.stage','DiseaseSymptoms',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value() \n? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_contraindicated_disease_symptoms",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var stage='clsa-dcs.DiseaseSymptoms:'\nvar p=$(stage+'QuestionnaireMetric.missingCount').asSequence()\nvar q=$(stage+'QuestionnaireMetric.questionCount').asSequence()\nvar res=null\nif(p.isNull().and(q.isNull()).not().value() && 0!=q.sum()) {\n  var str=[]\n  str.push(\n    'complete:'+\n    Math.round(q.sum().minus(p.sum()).multiply(100).div(q.sum()).value()))\n\nvar sections={\n'CAO':[\n'CCC_ASTHM_DCS',\n'CAO_ASTHMAGE_DCS',\n'CAO_WHEZ_DCS',\n'CAO_SOBFLAT_DCS',\n'CAO_EXERT_DCS',\n'CAO_SOBUP_DCS',\n'CAO_SOBPM_DCS',\n'CAO_WKWHEZ_DCS',\n'CAO_WKCOF_DCS',\n'CAO_WKSOB_DCS',\n'CCC_COPD_DCS',\n'CAO_COPDAGE_DCS',\n'CAO_COLD_DCS',\n'CAO_COFPY_DCS',\n'CAO_COFAM_DCS',\n'CAO_COFMAM_DCS',\n'CAO_PHLEGMPY_DCS',\n'CAO_MED_DCS',\n'CAO_MEDNAME_DCS',\n'CAO_MED_1_DCS',\n'CAO_MED_2_DCS',\n'CAO_MED_3_DCS',\n'CAO_MED_4_DCS',\n'CAO_MED_5_DCS',\n'CAO_MED_6_DCS',\n'CAO_MED_7_DCS',\n'CAO_MED_8_DCS',\n'CAO_MED_9_DCS',\n'CAO_MED_10_DCS',\n'CAO_MED_11_DCS',\n'CAO_MED_12_DCS',\n'CAO_MED_13_DCS',\n'CAO_MED_14_DCS',\n'CAO_MED_15_DCS',\n'CAO_MED_16_DCS',\n'CAO_MED_17_DCS',\n'CAO_MED_18_DCS',\n'CAO_MED_19_DCS',\n'CAO_MED_20_DCS',\n'CAO_MED_21_DCS',\n'CAO_MED_22_DCS',\n'CAO_MED_23_DCS',\n'CAO_MED_24_DCS',\n'CAO_MED_25_DCS',\n'CAO_MED_26_DCS',\n'CAO_MED_27_DCS',\n'CAO_MED_28_DCS',\n'CAO_MED_29_DCS',\n'CAO_MED_30_DCS',\n'CAO_MED_31_DCS',\n'CAO_MED_32_DCS',\n'CAO_MED_33_DCS',\n'CAO_MED_34_DCS',\n'CAO_MED_35_DCS',\n'CAO_MED_36_DCS',\n'CAO_MED_37_DCS',\n'CAO_MED_38_DCS',\n'CAO_MED_39_DCS',\n'CAO_MED_40_DCS'],\n'CCC_CANCER':[\n'CCC_CANC_DCS',\n'CCC_CANTP_DCS'],\n'CCC_CARDIAC':[\n'CCC_HEART_DCS',\n'CCC_PVD_DCS'],\n'CCC_GASTRO':[\n'CCC_ULCR_DCS',\n'CCC_IBDIBS_DCS',\n'CCC_BOWINC_DCS',\n'CCC_URIINC_DCS'],\n'CCC_INFECTION':[\n'CCC_DRPNEU_DCS',\n'CCC_DRFLU_DCS',\n'CCC_DRUTI_DCS',\n'CCC_DROT_DCS',\n'CCC_DROTSP_DCS'],\n'CCC_MENTAL':[\n'CCC_ANXI_DCS',\n'CCC_MOOD_DCS'],\n'CCC_NEURO':[\n'CCC_MEMPB_DCS',\n'CCC_ALZH_DCS',\n'CCC_MS_DCS',\n'CCC_EPIL_DCS',\n'CCC_MGRN_DCS'],\n'CCC_OTHER':[\n'CCC_ALLRG_DCS',\n'CCC_BCKP_DCS',\n'CCC_KIDN_DCS',\n'CCC_DITYP_DCS',\n'CCC_DITIM_DCS',\n'CCC_OTCCC_DCS'],\n'CCC_VISION':[\n'CCC_MACDEG_DCS'],\n'DEP':[\n'DEP_BOTR_DCS',\n'DEP_MIND_DCS',\n'DEP_FLDP_DCS',\n'DEP_FFRT_DCS',\n'DEP_HPFL_DCS',\n'DEP_FRFL_DCS',\n'DEP_RSTLS_DCS',\n'DEP_HAPP_DCS',\n'DEP_LONLY_DCS',\n'DEP_GTGO_DCS'],\n'DIA':[\n'DIA_DIAB_DCS',\n'DIA_TYPE_DCS',\n'DIA_AGE_DCS',\n'DIA_EVPRG_DCS',\n'DIA_PRGDIA_DCS',\n'DIA_MED_DCS',\n'DIA_MEDNAME_DCS',\n'DIA_MEDINSNAME_DCS',\n'DIA_MED_1_DCS',\n'DIA_MED_2_DCS',\n'DIA_MED_3_DCS',\n'DIA_MED_4_DCS',\n'DIA_MED_5_DCS',\n'DIA_MED_6_DCS',\n'DIA_MED_7_DCS',\n'DIA_MED_8_DCS',\n'DIA_MED_9_DCS',\n'DIA_MED_10_DCS',\n'DIA_MED_11_DCS',\n'DIA_MED_12_DCS',\n'DIA_MED_13_DCS',\n'DIA_MED_14_DCS',\n'DIA_MED_15_DCS',\n'DIA_MED_16_DCS',\n'DIA_MED_17_DCS',\n'DIA_MED_18_DCS',\n'DIA_MED_19_DCS',\n'DIA_MED_20_DCS',\n'DIA_MED_21_DCS',\n'DIA_MED_22_DCS',\n'DIA_MED_23_DCS',\n'DIA_MED_24_DCS',\n'DIA_MED_25_DCS',\n'DIA_MED_26_DCS',\n'DIA_MED_27_DCS',\n'DIA_MED_28_DCS',\n'DIA_MED_29_DCS',\n'DIA_MED_30_DCS',\n'DIA_MED_31_DCS',\n'DIA_MED_32_DCS',\n'DIA_MED_33_DCS',\n'DIA_MED_34_DCS',\n'DIA_MED_35_DCS',\n'DIA_MED_36_DCS',\n'DIA_MED_37_DCS',\n'DIA_MED_38_DCS',\n'DIA_MED_39_DCS',\n'DIA_MED_40_DCS',\n'DIA_MEDAGE_DCS'],\n'DPR':[\n'DPR_CLINDEP_DCS',\n'DPR_AGE_DCS',\n'DPR_MED_DCS',\n'DPR_MEDNAME_DCS',\n'DPR_MED_1_DCS',\n'DPR_MED_2_DCS',\n'DPR_MED_3_DCS',\n'DPR_MED_4_DCS',\n'DPR_MED_5_DCS',\n'DPR_MED_6_DCS',\n'DPR_MED_7_DCS',\n'DPR_MED_8_DCS',\n'DPR_MED_9_DCS',\n'DPR_MED_10_DCS',\n'DPR_MED_11_DCS',\n'DPR_MED_12_DCS',\n'DPR_MED_13_DCS',\n'DPR_MED_14_DCS',\n'DPR_MED_15_DCS',\n'DPR_MED_16_DCS',\n'DPR_MED_17_DCS',\n'DPR_MED_18_DCS',\n'DPR_MED_19_DCS',\n'DPR_MED_20_DCS',\n'DPR_MED_21_DCS',\n'DPR_MED_22_DCS',\n'DPR_MED_23_DCS',\n'DPR_MED_24_DCS',\n'DPR_MED_25_DCS',\n'DPR_MED_26_DCS',\n'DPR_MED_27_DCS',\n'DPR_MED_28_DCS',\n'DPR_MED_29_DCS',\n'DPR_MED_30_DCS',\n'DPR_MED_31_DCS',\n'DPR_MED_32_DCS',\n'DPR_MED_33_DCS',\n'DPR_MED_34_DCS',\n'DPR_MED_35_DCS',\n'DPR_MED_36_DCS',\n'DPR_MED_37_DCS',\n'DPR_MED_38_DCS',\n'DPR_MED_39_DCS',\n'DPR_MED_40_DCS',\n'DPR_OTHMD_DCS',\n'DPR_EVRMED_DCS'],\n'HBP':[\n'CCC_HBP_DCS',\n'HBP_AGE_DCS',\n'HBP_PRG_DCS',\n'HBP_OTPRG_DCS',\n'HBP_MED_DCS',\n'HBP_MEDNAME_DCS',\n'HBP_MED_1_DCS',\n'HBP_MED_2_DCS',\n'HBP_MED_3_DCS',\n'HBP_MED_4_DCS',\n'HBP_MED_5_DCS',\n'HBP_MED_6_DCS',\n'HBP_MED_7_DCS',\n'HBP_MED_8_DCS',\n'HBP_MED_9_DCS',\n'HBP_MED_10_DCS',\n'HBP_MED_11_DCS',\n'HBP_MED_12_DCS',\n'HBP_MED_13_DCS',\n'HBP_MED_14_DCS',\n'HBP_MED_15_DCS',\n'HBP_MED_16_DCS',\n'HBP_MED_17_DCS',\n'HBP_MED_18_DCS',\n'HBP_MED_19_DCS',\n'HBP_MED_20_DCS',\n'HBP_MED_21_DCS',\n'HBP_MED_22_DCS',\n'HBP_MED_23_DCS',\n'HBP_MED_24_DCS',\n'HBP_MED_25_DCS',\n'HBP_MED_26_DCS',\n'HBP_MED_27_DCS',\n'HBP_MED_28_DCS',\n'HBP_MED_29_DCS',\n'HBP_MED_30_DCS',\n'HBP_MED_31_DCS',\n'HBP_MED_32_DCS',\n'HBP_MED_33_DCS',\n'HBP_MED_34_DCS',\n'HBP_MED_35_DCS',\n'HBP_MED_36_DCS',\n'HBP_MED_37_DCS',\n'HBP_MED_38_DCS',\n'HBP_MED_39_DCS',\n'HBP_MED_40_DCS',\n'HBP_EVRMED_DCS',\n'HBP_TRT_DCS',\n'HBP_EVTRT_DCS'],\n'HYP':[\n'CCC_UTHYR_DCS',\n'HYP_UTHYRAGE_DCS',\n'HYP_UTHYRMED_DCS',\n'HYP_UTHYRMEDNAME_DCS',\n'HYP_UTHYRMED_1_DCS',\n'HYP_UTHYRMED_2_DCS',\n'HYP_UTHYRMED_3_DCS',\n'HYP_UTHYRMED_4_DCS',\n'HYP_UTHYRMED_5_DCS',\n'HYP_UTHYRMED_6_DCS',\n'HYP_UTHYRMED_7_DCS',\n'HYP_UTHYRMED_8_DCS',\n'HYP_UTHYRMED_9_DCS',\n'HYP_UTHYRMED_10_DCS',\n'HYP_UTHYRMED_11_DCS',\n'HYP_UTHYRMED_12_DCS',\n'HYP_UTHYRMED_13_DCS',\n'HYP_UTHYRMED_14_DCS',\n'HYP_UTHYRMED_15_DCS',\n'HYP_UTHYRMED_16_DCS',\n'HYP_UTHYRMED_17_DCS',\n'HYP_UTHYRMED_18_DCS',\n'HYP_UTHYRMED_19_DCS',\n'HYP_UTHYRMED_20_DCS',\n'HYP_UTHYRMED_21_DCS',\n'HYP_UTHYRMED_22_DCS',\n'HYP_UTHYRMED_23_DCS',\n'HYP_UTHYRMED_24_DCS',\n'HYP_UTHYRMED_25_DCS',\n'HYP_UTHYRMED_26_DCS',\n'HYP_UTHYRMED_27_DCS',\n'HYP_UTHYRMED_28_DCS',\n'HYP_UTHYRMED_29_DCS',\n'HYP_UTHYRMED_30_DCS',\n'HYP_UTHYRMED_31_DCS',\n'HYP_UTHYRMED_32_DCS',\n'HYP_UTHYRMED_33_DCS',\n'HYP_UTHYRMED_34_DCS',\n'HYP_UTHYRMED_35_DCS',\n'HYP_UTHYRMED_36_DCS',\n'HYP_UTHYRMED_37_DCS',\n'HYP_UTHYRMED_38_DCS',\n'HYP_UTHYRMED_39_DCS',\n'HYP_UTHYRMED_40_DCS',\n'HYP_UTHYREVRMED_DCS',\n'CCC_OTHYR_DCS',\n'HYP_OTHYRAGE_DCS',\n'HYP_OTHYRMED_DCS',\n'HYP_OTHYRMEDNAME_DCS',\n'HYP_OTHYRMED_1_DCS',\n'HYP_OTHYRMED_2_DCS',\n'HYP_OTHYRMED_3_DCS',\n'HYP_OTHYRMED_4_DCS',\n'HYP_OTHYRMED_5_DCS',\n'HYP_OTHYRMED_6_DCS',\n'HYP_OTHYRMED_7_DCS',\n'HYP_OTHYRMED_8_DCS',\n'HYP_OTHYRMED_9_DCS',\n'HYP_OTHYRMED_10_DCS',\n'HYP_OTHYRMED_11_DCS',\n'HYP_OTHYRMED_12_DCS',\n'HYP_OTHYRMED_13_DCS',\n'HYP_OTHYRMED_14_DCS',\n'HYP_OTHYRMED_15_DCS',\n'HYP_OTHYRMED_16_DCS',\n'HYP_OTHYRMED_17_DCS',\n'HYP_OTHYRMED_18_DCS',\n'HYP_OTHYRMED_19_DCS',\n'HYP_OTHYRMED_20_DCS',\n'HYP_OTHYRMED_21_DCS',\n'HYP_OTHYRMED_22_DCS',\n'HYP_OTHYRMED_23_DCS',\n'HYP_OTHYRMED_24_DCS',\n'HYP_OTHYRMED_25_DCS',\n'HYP_OTHYRMED_26_DCS',\n'HYP_OTHYRMED_27_DCS',\n'HYP_OTHYRMED_28_DCS',\n'HYP_OTHYRMED_29_DCS',\n'HYP_OTHYRMED_30_DCS',\n'HYP_OTHYRMED_31_DCS',\n'HYP_OTHYRMED_32_DCS',\n'HYP_OTHYRMED_33_DCS',\n'HYP_OTHYRMED_34_DCS',\n'HYP_OTHYRMED_35_DCS',\n'HYP_OTHYRMED_36_DCS',\n'HYP_OTHYRMED_37_DCS',\n'HYP_OTHYRMED_38_DCS',\n'HYP_OTHYRMED_39_DCS',\n'HYP_OTHYRMED_40_DCS',\n'HYP_OTHYREVRMD_DCS'],\n'IHD':[\n'CCC_ANGI_DCS',\n'IHD_ANGIAGE_DCS',\n'CCC_AMI_DCS',\n'IHD_AMIAGE_DCS',\n'IHD_CAB_DCS',\n'IHD_ANGIO_DCS',\n'IHD_BLOCK_DCS',\n'IHD_MED_DCS',\n'IHD_MEDNAME_DCS',\n'IHD_MED_1_DCS',\n'IHD_MED_2_DCS',\n'IHD_MED_3_DCS',\n'IHD_MED_4_DCS',\n'IHD_MED_5_DCS',\n'IHD_MED_6_DCS',\n'IHD_MED_7_DCS',\n'IHD_MED_8_DCS',\n'IHD_MED_9_DCS',\n'IHD_MED_10_DCS',\n'IHD_MED_11_DCS',\n'IHD_MED_12_DCS',\n'IHD_MED_13_DCS',\n'IHD_MED_14_DCS',\n'IHD_MED_15_DCS',\n'IHD_MED_16_DCS',\n'IHD_MED_17_DCS',\n'IHD_MED_18_DCS',\n'IHD_MED_19_DCS',\n'IHD_MED_20_DCS',\n'IHD_MED_21_DCS',\n'IHD_MED_22_DCS',\n'IHD_MED_23_DCS',\n'IHD_MED_24_DCS',\n'IHD_MED_25_DCS',\n'IHD_MED_26_DCS',\n'IHD_MED_27_DCS',\n'IHD_MED_28_DCS',\n'IHD_MED_29_DCS',\n'IHD_MED_30_DCS',\n'IHD_MED_31_DCS',\n'IHD_MED_32_DCS',\n'IHD_MED_33_DCS',\n'IHD_MED_34_DCS',\n'IHD_MED_35_DCS',\n'IHD_MED_36_DCS',\n'IHD_MED_37_DCS',\n'IHD_MED_38_DCS',\n'IHD_MED_39_DCS',\n'IHD_MED_40_DCS',\n'IHD_EVRMED_DCS'],\n'OAR':[\n'CCC_RA_DCS',\n'CCC_ARTOT_DCS',\n'OAR_AGE_DCS',\n'OAR_MED_DCS',\n'OAR_MEDOT_DCS'],\n'OSA':[\n'CCC_OAHAND_DCS',\n'OSA_AGE_DCS',\n'OSA_LGJNT_DCS',\n'OSA_NBFNG_DCS',\n'OSA_PAINJNT_DCS',\n'OSA_LGTMB_DCS',\n'OSA_PAINTMB_DCS'],\n'OSH':[\n'CCC_OAHIP_DCS',\n'OSH_AGE_DCS',\n'OSH_HIPRPL_DCS',\n'OSH_FRAC_DCS',\n'OSH_PAIN_DCS',\n'OSH_PAINSL_DCS',\n'OSH_LOM_DCS'],\n'OSK':[\n'CCC_OAKNEE_DCS',\n'OSK_AGE_DCS',\n'OSK_KNERPL_DCS',\n'OSK_PAIN_DCS',\n'OSK_PAINSL_DCS',\n'OSK_SWELL_DCS'],\n'OST':[\n'CCC_OSTPO_DCS',\n'OST_AGE_DCS',\n'OST_MED_DCS',\n'OST_MEDNAME_DCS',\n'OST_MED_1_DCS',\n'OST_MED_2_DCS',\n'OST_MED_3_DCS',\n'OST_MED_4_DCS',\n'OST_MED_5_DCS',\n'OST_MED_6_DCS',\n'OST_MED_7_DCS',\n'OST_MED_8_DCS',\n'OST_MED_9_DCS',\n'OST_MED_10_DCS',\n'OST_MED_11_DCS',\n'OST_MED_12_DCS',\n'OST_MED_13_DCS',\n'OST_MED_14_DCS',\n'OST_MED_15_DCS',\n'OST_MED_16_DCS',\n'OST_MED_17_DCS',\n'OST_MED_18_DCS',\n'OST_MED_19_DCS',\n'OST_MED_20_DCS',\n'OST_MED_21_DCS',\n'OST_MED_22_DCS',\n'OST_MED_23_DCS',\n'OST_MED_24_DCS',\n'OST_MED_25_DCS',\n'OST_MED_26_DCS',\n'OST_MED_27_DCS',\n'OST_MED_28_DCS',\n'OST_MED_29_DCS',\n'OST_MED_30_DCS',\n'OST_MED_31_DCS',\n'OST_MED_32_DCS',\n'OST_MED_33_DCS',\n'OST_MED_34_DCS',\n'OST_MED_35_DCS',\n'OST_MED_36_DCS',\n'OST_MED_37_DCS',\n'OST_MED_38_DCS',\n'OST_MED_39_DCS',\n'OST_MED_40_DCS',\n'OST_EVRMD_DCS',\n'OST_BONE_DCS',\n'OST_FRAC_DCS',\n'OST_MOM_DCS',\n'OST_DAD_DCS',\n'OST_HGT_DCS',\n'OST_CST_DCS',\n'OST_CSTAGE_DCS',\n'OST_CST_MT_DCS',\n'OST_BP_DCS',\n'OST_BP_DUR_DCS',\n'OST_BCKPPM_DCS',\n'OST_BCKPLOC_DCS'],\n'PKD':[\n'CCC_PARK_DCS',\n'PKD_AGE_DCS',\n'PKD_MED_DCS',\n'PKD_MEDNAME_DCS',\n'PKD_MED_1_DCS',\n'PKD_MED_2_DCS',\n'PKD_MED_3_DCS',\n'PKD_MED_4_DCS',\n'PKD_MED_5_DCS',\n'PKD_MED_6_DCS',\n'PKD_MED_7_DCS',\n'PKD_MED_8_DCS',\n'PKD_MED_9_DCS',\n'PKD_MED_10_DCS',\n'PKD_MED_11_DCS',\n'PKD_MED_12_DCS',\n'PKD_MED_13_DCS',\n'PKD_MED_14_DCS',\n'PKD_MED_15_DCS',\n'PKD_MED_16_DCS',\n'PKD_MED_17_DCS',\n'PKD_MED_18_DCS',\n'PKD_MED_19_DCS',\n'PKD_MED_20_DCS',\n'PKD_MED_21_DCS',\n'PKD_MED_22_DCS',\n'PKD_MED_23_DCS',\n'PKD_MED_24_DCS',\n'PKD_MED_25_DCS',\n'PKD_MED_26_DCS',\n'PKD_MED_27_DCS',\n'PKD_MED_28_DCS',\n'PKD_MED_29_DCS',\n'PKD_MED_30_DCS',\n'PKD_MED_31_DCS',\n'PKD_MED_32_DCS',\n'PKD_MED_33_DCS',\n'PKD_MED_34_DCS',\n'PKD_MED_35_DCS',\n'PKD_MED_36_DCS',\n'PKD_MED_37_DCS',\n'PKD_MED_38_DCS',\n'PKD_MED_39_DCS',\n'PKD_MED_40_DCS',\n'PKD_OTHMD_DCS',\n'PKD_EVRMED_DCS',\n'PKD_SHKE_DCS',\n'PKD_SHKSEV_DCS',\n'PKD_SMWRT_DCS',\n'PKD_BUTON_DCS',\n'PKD_VOICE_DCS',\n'PKD_FEET_DCS',\n'PKD_WALK_DCS',\n'PKD_BAL_DCS',\n'PKD_FACE_DCS',\n'PKD_RISE_DCS'],\n'ROS':[\n'ROS_PAIN_DCS',\n'ROS_HILL_DCS',\n'ROS_LEVEL_DCS',\n'ROS_BLOCK_DCS',\n'ROS_DOWLK_DCS',\n'ROS_STILL_DCS',\n'ROS_SOON_DCS',\n'ROS_LOC_DCS',\n'ROS_SEVPAIN_DCS'],\n'STR':[\n'CCC_CVA_DCS',\n'STR_CVAAGE_DCS',\n'STR_MED_DCS',\n'STR_MEDNAME_DCS',\n'STR_MED_1_DCS',\n'STR_MED_2_DCS',\n'STR_MED_3_DCS',\n'STR_MED_4_DCS',\n'STR_MED_5_DCS',\n'STR_MED_6_DCS',\n'STR_MED_7_DCS',\n'STR_MED_8_DCS',\n'STR_MED_9_DCS',\n'STR_MED_10_DCS',\n'STR_MED_11_DCS',\n'STR_MED_12_DCS',\n'STR_MED_13_DCS',\n'STR_MED_14_DCS',\n'STR_MED_15_DCS',\n'STR_MED_16_DCS',\n'STR_MED_17_DCS',\n'STR_MED_18_DCS',\n'STR_MED_19_DCS',\n'STR_MED_20_DCS',\n'STR_MED_21_DCS',\n'STR_MED_22_DCS',\n'STR_MED_23_DCS',\n'STR_MED_24_DCS',\n'STR_MED_25_DCS',\n'STR_MED_26_DCS',\n'STR_MED_27_DCS',\n'STR_MED_28_DCS',\n'STR_MED_29_DCS',\n'STR_MED_30_DCS',\n'STR_MED_31_DCS',\n'STR_MED_32_DCS',\n'STR_MED_33_DCS',\n'STR_MED_34_DCS',\n'STR_MED_35_DCS',\n'STR_MED_36_DCS',\n'STR_MED_37_DCS',\n'STR_MED_38_DCS',\n'STR_MED_39_DCS',\n'STR_MED_40_DCS',\n'STR_OTHMD_DCS',\n'STR_EVRMD_DCS',\n'CCC_TIA_DCS',\n'STR_TIAAGE_DCS',\n'STR_TIAMED_DCS',\n'STR_TIAMEDNAME_DCS',\n'STR_TIAMED_1_DCS',\n'STR_TIAMED_2_DCS',\n'STR_TIAMED_3_DCS',\n'STR_TIAMED_4_DCS',\n'STR_TIAMED_5_DCS',\n'STR_TIAMED_6_DCS',\n'STR_TIAMED_7_DCS',\n'STR_TIAMED_8_DCS',\n'STR_TIAMED_9_DCS',\n'STR_TIAMED_10_DCS',\n'STR_TIAMED_11_DCS',\n'STR_TIAMED_12_DCS',\n'STR_TIAMED_13_DCS',\n'STR_TIAMED_14_DCS',\n'STR_TIAMED_15_DCS',\n'STR_TIAMED_16_DCS',\n'STR_TIAMED_17_DCS',\n'STR_TIAMED_18_DCS',\n'STR_TIAMED_19_DCS',\n'STR_TIAMED_20_DCS',\n'STR_TIAMED_21_DCS',\n'STR_TIAMED_22_DCS',\n'STR_TIAMED_23_DCS',\n'STR_TIAMED_24_DCS',\n'STR_TIAMED_25_DCS',\n'STR_TIAMED_26_DCS',\n'STR_TIAMED_27_DCS',\n'STR_TIAMED_28_DCS',\n'STR_TIAMED_29_DCS',\n'STR_TIAMED_30_DCS',\n'STR_TIAMED_31_DCS',\n'STR_TIAMED_32_DCS',\n'STR_TIAMED_33_DCS',\n'STR_TIAMED_34_DCS',\n'STR_TIAMED_35_DCS',\n'STR_TIAMED_36_DCS',\n'STR_TIAMED_37_DCS',\n'STR_TIAMED_38_DCS',\n'STR_TIAMED_39_DCS',\n'STR_TIAMED_40_DCS',\n'STR_TIAOTHMD_DCS',\n'STR_TIAEVMD_DCS',\n'CCC_CVAFX_DCS',\n'STR_WEAK_DCS',\n'STR_WEAK_DUR_DCS',\n'STR_NUMB_DCS',\n'STR_NUMB_DUR_DCS',\n'STR_VIS_DCS',\n'STR_VIS_DUR_DCS',\n'STR_NOVIS_DCS',\n'STR_NOVIS_DUR_DCS',\n'STR_NOUND_DCS',\n'STR_NOUND_DUR_DCS',\n'STR_NOEXP_DCS',\n'STR_NOEXP_DUR_DCS'],\n'TBI':[\n'TBI_TYP_DCS',\n'TBI_NMBR_DCS',\n'TBI_RSLT_DCS',\n'TBI_MCR_DCS',\n'TBI_PROB_DCS']\n}\n\n  for(var key in sections) {\n    var rcount=0\n    var qcount=0\n    var arr=sections[key]\n    for(var i=0; i<arr.length; i++ ) {\n      var j=$(stage+arr[i])\n      if(j.isNull().value()) continue\n      qcount++      \n      rcount+=j.any('REFUSED').value()?1:0\n    }\n    if(0==qcount) {\n      str.push(key+':100')\n    } else {\n      var perc=100.0*rcount/qcount      \n      if(0<perc && 100>perc && 0!=(perc-Math.floor(perc))) {        \n        perc=perc.toFixed(3)\n      }\n      str.push(key+':'+perc)\n    }  \n  }\n\n  res=newValue('{'+str.join(',')+'}','text')\n}\nres  "
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_qac_disease_symptoms",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$this('data_qac_disease_symptoms').isNull().and(\n  $this('stage_contraindicated_disease_symptoms').eq(0),\n  $this('stage_skip_disease_symptoms').isNull()\n).value() ? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_missing_disease_symptoms",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$('clsa-dcs.ConclusionQuestionnaire:QuestionnaireRun.user').whenNull(\n  $group('Admin.Action.stage','ConclusionQuestionnaire','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_technician_conclusion_questionnaire",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var action=$group('Admin.Action.stage','ConclusionQuestionnaire','Admin.Action.actionType').asSequence()\nvar res=$group('Admin.Action.stage','ConclusionQuestionnaire','Admin.Action.eventReason').asSequence().filter(function(v,i){\n  return action.indexOf('SKIP')==i\n  }).last()\nif(res.isNull().not().value()) {\n  res=newValue(res.value().slice(14),'text')  \n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_skip_conclusion_questionnaire",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$group('clsa-dcs.Participants:Admin.StageInstance.stage','ConclusionQuestionnaire',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value() \n? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_contraindicated_conclusion_questionnaire",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var res=$('clsa-dcs.ConclusionQuestionnaire:PARTICIPANT_OFFERED_DOCUMENT').lowerCase()\nif(res.isNull().not().value()) {\n  var n=0\n  if(res.any('consent_form').value()) n++\n  if(res.any('physical_measures_report').value()) n++  \n  res=newValue('{documents:'+n+'}','text')\n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_qac_conclusion_questionnaire",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$this('data_qac_conclusion_questionnaire').isNull().and(\n  $this('stage_contraindicated_conclusion_questionnaire').eq(0),\n  $this('stage_skip_conclusion_questionnaire').isNull()\n).value() ? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_missing_conclusion_questionnaire",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$('clsa-dcs.QuestionnaireBoneDensity:QuestionnaireRun.user').whenNull(\n  $group('Admin.Action.stage','QuestionnaireBoneDensity','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_technician_bone_density_questionnaire",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var action=$group('Admin.Action.stage','QuestionnaireBoneDensity','Admin.Action.actionType').asSequence()\nvar res=$group('Admin.Action.stage','QuestionnaireBoneDensity','Admin.Action.eventReason').asSequence().filter(function(v,i){\n  return action.indexOf('SKIP')==i\n  }).last()\nif(res.isNull().not().value()) {\n  res=newValue(res.value().slice(14),'text')  \n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_skip_bone_density_questionnaire",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$group('clsa-dcs.Participants:Admin.StageInstance.stage','QuestionnaireBoneDensity',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value() \n? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_contraindicated_bone_density_questionnaire",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var p=$('clsa-dcs.QuestionnaireBoneDensity:QuestionnaireMetric.missingCount').asSequence()\nvar q=$('clsa-dcs.QuestionnaireBoneDensity:QuestionnaireMetric.questionCount').asSequence()\nvar res=null\nif(p.isNull().and(q.isNull()).not().value() && 0!=q.sum()){\n  res=newValue(\n    '{complete:'+\n    Math.round(q.sum().minus(p.sum()).multiply(100).div(q.sum()).value())\n    +'}','text')\n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_qac_bone_density_questionnaire",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$this('data_qac_bone_density_questionnaire').isNull().and(\n  $this('stage_contraindicated_bone_density_questionnaire').eq(0),\n  $this('stage_skip_bone_density_questionnaire').isNull()\n).value() ? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_missing_bone_density_questionnaire",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$('clsa-dcs.HearingQuestionnaire:QuestionnaireRun.user').whenNull(\n  $group('Admin.Action.stage','HearingQuestionnaire','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_technician_hearing_questionnaire",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var action=$group('Admin.Action.stage','HearingQuestionnaire','Admin.Action.actionType').asSequence()\nvar res=$group('Admin.Action.stage','HearingQuestionnaire','Admin.Action.eventReason').asSequence().filter(function(v,i){\n  return action.indexOf('SKIP')==i\n  }).last()\nif(res.isNull().not().value()) {\n  res=newValue(res.value().slice(14),'text')  \n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_skip_hearing_questionnaire",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$group('clsa-dcs.Participants:Admin.StageInstance.stage','HearingQuestionnaire',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value() \n? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_contraindicated_hearing_questionnaire",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var l=$('clsa-dcs.HearingQuestionnaire:STATUS_EAR.LEFT_EAR_2').lowerCase()\nvar r=$('clsa-dcs.HearingQuestionnaire:STATUS_EAR.RIGHT_EAR_2').lowerCase()\nvar res=null\nif(l.isNull().and(r.isNull()).not().value()){\n  res=newValue(\n    '{status_left:'+\n     (l.isNull().value()?'missing':l.value()) +\n    ',status_right:'+\n     (r.isNull().value()?'missing':r.value()) +\n    '}','text')\n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_qac_hearing_questionnaire",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$this('data_qac_hearing_questionnaire').isNull().and(\n  $this('stage_contraindicated_hearing_questionnaire').eq(0),\n  $this('stage_skip_hearing_questionnaire').isNull()\n).value() ? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_missing_hearing_questionnaire",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$('clsa-dcs.FunctionalStatus:QuestionnaireRun.user').whenNull(\n  $group('Admin.Action.stage','FunctionalStatus','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_technician_functional_status",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var action=$group('Admin.Action.stage','FunctionalStatus','Admin.Action.actionType').asSequence()\nvar res=$group('Admin.Action.stage','FunctionalStatus','Admin.Action.eventReason').asSequence().filter(function(v,i){\n  return action.indexOf('SKIP')==i\n  }).last()\nif(res.isNull().not().value()) {\n  res=newValue(res.value().slice(14),'text')\n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_skip_functional_status",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$group('clsa-dcs.Participants:Admin.StageInstance.stage','FunctionalStatus',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value() \n? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_contraindicated_functional_status",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var stage='clsa-dcs.FunctionalStatus:'\nvar p=$(stage+'QuestionnaireMetric.missingCount').asSequence()\nvar q=$(stage+'QuestionnaireMetric.questionCount').asSequence()\nvar res=null\nif(p.isNull().and(q.isNull()).not().value() && 0!=q.sum()) {\n  var str=[]\n  str.push(\n    'complete:'+\n    Math.round(q.sum().minus(p.sum()).multiply(100).div(q.sum()).value()))\n\nvar sections={\n'Fun':[\n'FUL_SHLD_COM',\n'FUL_SHLDDG_COM',\n'FUL_STOOP_COM',\n'FUL_STOOPDG_COM',\n'FUL_PUSH_COM',\n'FUL_PUSHDG_COM',\n'FUL_LFT10_COM',\n'FUL_LFT1ODG_COM',\n'FUL_HDLG_COM',\n'FUL_HDLGDG_COM',\n'FUL_ST15_COM',\n'FUL_ST15DG_COM',\n'FUL_SIT1H_COM',\n'FUL_SIT1HDG_COM',\n'FUL_STDUP_COM',\n'FUL_STDUPDG_COM',\n'FUL_FSTR_COM',\n'FUL_FSTRDG_COM',\n'FUL_WK23B_COM',\n'FUL_WK23BDG_COM',\n'FUL_MKBED_COM',\n'FUL_MKBEDDG_COM',\n'FUL_WSHBK_COM',\n'FUL_WSHBKDG_COM',\n'FUL_KNCUT_COM',\n'FUL_KNCUTDG_COM',\n'FUL_FORC_COM',\n'FUL_FORCDG_COM']  \n}\n\n  for(var key in sections) {\n    var rcount=0\n    var qcount=0\n    var arr=sections[key]\n    for(var i=0; i<arr.length; i++ ) {\n      var j=$(stage+arr[i])\n      if(j.isNull().value()) continue\n      qcount++      \n      rcount+=j.any('REFUSED').value()?1:0\n    }\n    if(0==qcount) {\n      str.push(key+':100')\n    } else {\n      var perc=100.0*rcount/qcount      \n      if(0<perc && 100>perc && 0!=(perc-Math.floor(perc))) {        \n        perc=perc.toFixed(3)\n      }\n      str.push(key+':'+perc)\n    }  \n  }\n\n  res=newValue('{'+str.join(',')+'}','text')\n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_qac_functional_status",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$this('data_qac_functional_status').isNull().and(\n  $this('stage_contraindicated_functional_status').eq(0),\n  $this('stage_skip_functional_status').isNull()\n).value() ? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_missing_functional_status",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$('clsa-dcs.TimeBasedProspectiveMemoryTask:QuestionnaireRun.user').whenNull(\n  $group('Admin.Action.stage','TimeBasedProspectiveMemoryTask','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_technician_time_based_pmt",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var action=$group('Admin.Action.stage','TimeBasedProspectiveMemoryTask','Admin.Action.actionType').asSequence()\nvar res=$group('Admin.Action.stage','TimeBasedProspectiveMemoryTask','Admin.Action.eventReason').asSequence().filter(function(v,i){\n  return action.indexOf('SKIP')==i\n  }).last()\nif(res.isNull().not().value()) {\n  res=newValue(res.value().slice(14),'text')  \n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_skip_time_based_pmt",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$group('clsa-dcs.Participants:Admin.StageInstance.stage','TimeBasedProspectiveMemoryTask',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value() \n? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_contraindicated_time_based_pmt",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var stage='clsa-dcs.TimeBasedProspectiveMemoryTask:'\nvar p=$(stage+'QuestionnaireMetric.missingCount').asSequence()\nvar q=$(stage+'QuestionnaireMetric.questionCount').asSequence()\nvar res=null\nif(p.isNull().and(q.isNull()).not().value() && 0!=q.sum()) {\n  var str=[]\n  str.push(\n    'complete:'+\n    Math.round(q.sum().minus(p.sum()).multiply(100).div(q.sum()).value()))\n\nvar sections={\n'TMT':[\n'TMT_PASS_DCS',\n'TMT_TST_DCS',\n'TMT_FCT_DCS',\n'TMT_DOTIM_DCS',\n'TMT_DOTIM_REP_DCS',\n'TMT_DOTIM_OBS_DCS',\n'TMT_DOENV_DCS',\n'TMT_DOENV_OBS_DCS',\n'TMT_DOCARD_DCS',\n'TMT_DOCARD_OBS_DCS',\n'TMT_ITPEXACT_DCS',\n'TMT_ACC_DCS',\n'TMT_RMD_DCS']  \n}\n\n  for(var key in sections) {\n    var rcount=0\n    var qcount=0\n    var arr=sections[key]\n    for(var i=0; i<arr.length; i++ ) {\n      var j=$(stage+arr[i])\n      if(j.isNull().value()) continue\n      qcount++      \n      rcount+=j.any('REFUSED').value()?1:0\n    }\n    if(0==qcount) {\n      str.push(key+':100')\n    } else {\n      var perc=100.0*rcount/qcount      \n      if(0<perc && 100>perc && 0!=(perc-Math.floor(perc))) {        \n        perc=perc.toFixed(3)\n      }\n      str.push(key+':'+perc)\n    }  \n  }\n\n  res=newValue('{'+str.join(',')+'}','text')\n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_qac_time_based_pmt",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$this('data_qac_time_based_pmt').isNull().and(\n  $this('stage_contraindicated_time_based_pmt').eq(0),\n  $this('stage_skip_time_based_pmt').isNull()\n).value() ? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_missing_time_based_pmt",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var s=$('clsa-dcs.Participants:Admin.StageInstance.stage').asSequence()\ns.filter(function(v,i){\n return s.indexOf(v)==i  \n}).join(',')"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "test_stage",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$('clsa-dcs.Urine:QuestionnaireRun.user').whenNull(\n  $group('Admin.Action.stage','Urine','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_technician_urine",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var action=$group('Admin.Action.stage','Urine','Admin.Action.actionType').asSequence()\nvar res=$group('Admin.Action.stage','Urine','Admin.Action.eventReason').asSequence().filter(function(v,i){\n  return action.indexOf('SKIP')==i\n  }).last()\nif(res.isNull().not().value()) {\n  res=newValue(res.value().slice(14),'text')  \n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_skip_urine",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$group('clsa-dcs.Participants:Admin.StageInstance.stage','Urine',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value() \n? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_contraindicated_urine",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var stage='clsa-dcs.Urine:'\nvar p=$(stage+'QuestionnaireMetric.missingCount').asSequence()\nvar q=$(stage+'QuestionnaireMetric.questionCount').asSequence()\nvar res=null\nif(p.isNull().and(q.isNull()).not().value() && 0!=q.sum()) {\n  var str=[]\n  str.push(\n    'complete:'+\n    Math.round(q.sum().minus(p.sum()).multiply(100).div(q.sum()).value()))\n\nvar sections={\n'URINE':[\n'FOOD_DRINK_24_U',\n'CAFFEINE_24_U',\n'TOBACCO_24_U',\n'ALCOHOL_24_U',\n'CURRENTLY_MENSTRUAL_U',\n'AGREE_URINE_U',\n'WHY_NOT_AGREE_URINE_U',\n'PART_DECLINED_URINE_U',\n'TECH_REASON_URINE_U']\n}\n\n  for(var key in sections) {\n    var rcount=0\n    var qcount=0\n    var arr=sections[key]\n    for(var i=0; i<arr.length; i++ ) {\n      var j=$(stage+arr[i])\n      if(j.isNull().value()) continue\n      qcount++      \n      rcount+=j.any('REFUSED').value()?1:0\n    }\n    if(0==qcount) {\n      str.push(key+':100')\n    } else {\n      var perc=100.0*rcount/qcount      \n      if(0<perc && 100>perc && 0!=(perc-Math.floor(perc))) {        \n        perc=perc.toFixed(3)\n      }\n      str.push(key+':'+perc)\n    }  \n  }\n\n  res=newValue('{'+str.join(',')+'}','text')\n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_qac_urine",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$this('data_qac_urine').isNull().and(\n  $this('stage_contraindicated_urine').eq(0),\n  $this('stage_skip_urine').isNull()\n).value() ? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_missing_urine",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var stage=$this('group_blood')\nvar res=null\nif(stage.isNull().not().value()) {\n  stage=stage.value()\n  res=$('clsa-dcs.'+stage+':QuestionnaireRun.user').whenNull(\n    $group('Admin.Action.stage',stage,'Admin.Action.user').asSequence().last()).lowerCase()\n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_technician_blood",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var stage=$this('group_blood')\nvar res=null\nif(stage.isNull().not().value()) {\n  stage=stage.value()\n  var action=$group('Admin.Action.stage',stage,'Admin.Action.actionType').asSequence()\n  var res=$group('Admin.Action.stage',stage,'Admin.Action.eventReason').asSequence().filter(function(v,i){\n    return action.indexOf('SKIP')==i\n    }).last()\n  if(res.isNull().not().value()) {\n    res=newValue(res.value().slice(14),'text')\n  }\n}  \nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_skip_blood",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var stage=$this('group_blood')\nvar res=null\nif(stage.isNull().not().value()) {\n  stage='clsa-dcs.'+stage.value()+':'\n  var p=$(stage+'QuestionnaireMetric.missingCount').asSequence()\n  var q=$(stage+'QuestionnaireMetric.questionCount').asSequence()\n  if(p.isNull().and(q.isNull()).not().value() && 0!=q.sum()) {\n    var str=[]\n    str.push(\n      'complete:'+\n      Math.round(q.sum().minus(p.sum()).multiply(100).div(q.sum()).value()))\n\nvar sections={\n'BLOOD':[\n'AGREE_BS_B',\n'ALCOHOL_24_B',\n'BLOOD_COLLECTED_B',\n'CAFFEINE_24_B',\n'CURRENTLY_MENSTRUAL_B',\n'DECLINE_POST_B',\n'FIRST_ATTEMPT_B',\n'FOOD_DRINK_24_B',\n'NEEDLE_B',\n'NOTE_DRAW_SITE_B.FIBROSED_INFLAMED',\n'NOTE_DRAW_SITE_B.HEMATOMA',\n'NOTE_DRAW_SITE_B.PARALYZED',\n'NOTE_DRAW_SITE_B.PETECHIAE',\n'NOTE_DRAW_SITE_B.PICC_LINE',\n'NOTE_DRAW_SITE_B.RED_SWOLLEN',\n'NOTE_DRAW_SITE_B.SCARRING',\n'NOTE_DRAW_SITE_B.SCLEROTIC_HARDVEINS',\n'NOTE_DRAW_SITE_B.SEVERE_PROBLEM',\n'NOTE_DRAW_SITE_B.TATTOOS',\n'NOTE_DRAW_SITE_B.VASCULAR_GRAFT',\n'NOTE_OTHER_B.OTHER',\n'PART_DECLINED_B',\n'PART_POSTPONED_B',\n'SIT_RECLIN_B',\n'TECH_REASON_B',\n'TOBACCO_24_B',\n'WHICH_ARM_CHOSEN_2_B',\n'WHY_NOT_AGREE_BLOOD_B',\n'WHY_NO_BLOOD_B']\n}\n  \n  if($this('group_blood').any('Blood2').value()) {\n    sections['BLOOD'].splice(sections['BLOOD'].indexOf('DECLINE_POST_B'),1)\n    sections['BLOOD'].splice(sections['BLOOD'].indexOf('PART_POSTPONED_B'),1)\n  }\n\n    for(var key in sections) {\n      var rcount=0\n      var qcount=0\n      var arr=sections[key]\n      for(var i=0; i<arr.length; i++ ) {\n        var j=$(stage+arr[i])\n        if(j.isNull().value()) continue\n        qcount++      \n        rcount+=j.any('REFUSED').value()?1:0\n      }\n      if(0==qcount) {\n        str.push(key+':100')\n      } else {\n        var perc=100.0*rcount/qcount      \n        if(0<perc && 100>perc && 0!=(perc-Math.floor(perc))) {        \n          perc=perc.toFixed(3)\n        }\n        str.push(key+':'+perc)\n      }\n    }\n    res=newValue('{'+str.join(',')+'}','text')\n  }\n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_qac_blood",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$this('data_qac_blood').isNull().and(\n  $this('stage_contraindicated_blood').eq(0),\n  $this('stage_skip_blood').isNull()\n).value() ? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_missing_blood",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var stage=$this('group_blood')\nvar res=null\nif(stage.isNull().not().value()) {\n  stage=stage.value()\n  res=$group('clsa-dcs.Participants:Admin.StageInstance.stage',stage,'Admin.StageInstance.lastState').whenNull(\n      $group('clsa-dcs.Participants:Admin.StageInstance.stage',stage,'Admin.StageInstance.lastState')).any(\n        'Contraindicated','NotApplicable').value() ? 1 : 0\n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_contraindicated_blood",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var res=null\nvar u=$group('Admin.StageInstance.stage','Phlebotomy','Admin.StageInstance.lastState').asSequence().last()\nvar v=$group('Admin.StageInstance.stage','Blood','Admin.StageInstance.lastState').asSequence().last()\nvar w=$group('Admin.StageInstance.stage','Blood2','Admin.StageInstance.lastState').asSequence().last()\nvar p=$('Admin.StageInstance.stage').any('Phlebotomy').and(w.isNull().not()).value()\nvar q=$('Admin.StageInstance.stage').any('Blood').and(u.isNull().not()).value()\nvar r=$('Admin.StageInstance.stage').any('Blood2').and(v.isNull().not()).value()\nif(p && !(q || r)) {\n  res=newValue( 'Phlebotomy', 'text') \n} else if(q && !(p || r)) {\n  res=newValue( 'Blood', 'text') \n} else if(r && !(p || q)) {\n  res=newValue( 'Blood2', 'text') \n} else if(p || q || r) {\n  var s=[]\n  var n=['Phlebotomy','Blood','Blood2']\n  if(p) s.push(u)\n  if(q) s.push(v)\n  if(r) s.push(w)\n  var x=[]\n  var y=[]\n  for(var i=0;i<s.length; i++) {\n    if(s[i].any('Completed').value()) x.push(n[i])\n    if(s[i].any('NotApplicable').value()) y.push(n[i])\n  }\n  if(0<x.length) {\n    res=newValue(x[x.length-1],'text')\n  } else if(0<y.length) {\n    res=newValue(y[y.length-1],'text')\n  }\n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "group_blood",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$('clsa-dcs.NeuropsychologicalBatteryScoring:QuestionnaireRun.user').whenNull(\n  $group('Admin.Action.stage','NeuropsychologicalBatteryScoring','Admin.Action.user').asSequence().last()).lowerCase()"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_technician_neuropsychological_battery_scoring",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var action=$group('Admin.Action.stage','NeuropsychologicalBatteryScoring','Admin.Action.actionType').asSequence()\nvar res=$group('Admin.Action.stage','NeuropsychologicalBatteryScoring','Admin.Action.eventReason').asSequence().filter(function(v,i){\n  return action.indexOf('SKIP')==i\n  }).last()\nif(res.isNull().not().value()) {\n  res=newValue(res.value().slice(14),'text')  \n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_skip_neuropsychological_battery_scoring",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$group('clsa-dcs.Participants:Admin.StageInstance.stage','NeuropsychologicalBatteryScoring',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable').value() \n? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_contraindicated_neuropsychological_battery_scoring",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var p=$('clsa-dcs.NeuropsychologicalBatteryScoring:QuestionnaireMetric.missingCount').asSequence()\nvar q=$('clsa-dcs.NeuropsychologicalBatteryScoring:QuestionnaireMetric.questionCount').asSequence()\nvar res=null\nif(p.isNull().and(q.isNull()).not().value() && 0!=q.sum()){\n  res=newValue(\n    '{complete:'+\n    Math.round(q.sum().minus(p.sum()).multiply(100).div(q.sum()).value())\n    +'}','text')\n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_qac_neuropsychological_battery_scoring",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$this('data_qac_neuropsychological_battery_scoring').isNull().and(\n  $this('stage_contraindicated_neuropsychological_battery_scoring').eq(0),\n  $this('stage_skip_neuropsychological_battery_scoring').isNull()\n).value() ? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_missing_neuropsychological_battery_scoring",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "var res=null\nvar d=$('clsa-dcs.NeuropsychologicalBattery:STP_DOTREC_DCS')\nvar w=$('clsa-dcs.NeuropsychologicalBattery:STP_WORREC_DCS')\nvar c=$('clsa-dcs.NeuropsychologicalBattery:STP_COLREC_DCS')\nvar f=$('clsa-dcs.NeuropsychologicalBattery:FAS_FREC_DCS')\nvar a=$('clsa-dcs.NeuropsychologicalBattery:FAS_AREC_DCS')\nvar s=$('clsa-dcs.NeuropsychologicalBattery:FAS_SREC_DCS')\nif(!d.isNull().and(w.isNull(),c.isNull,f.isNull(),a.isNull(),s.isNull()).value()) {\n  var str=[]\n  str.push('filesize_dot:'+(d.isNull().value()?'0':d.length().value()))\n  str.push('filesize_wor:'+(w.isNull().value()?'0':w.length().value()))\n  str.push('filesize_col:'+(c.isNull().value()?'0':c.length().value()))\n  str.push('filesize_f:'+(f.isNull().value()?'0':f.length().value()))\n  str.push('filesize_a:'+(a.isNull().value()?'0':a.length().value()))\n  str.push('filesize_s:'+(s.isNull().value()?'0':s.length().value()))    \n  res=newValue('{'+str.join(',')+'}','text')\n}\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_qac_cognition_recording",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$this('stage_technician_neuropsychological_battery')"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_technician_cognition_recording",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$this('stage_skip_neuropsychological_battery')"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_skip_cognition_recording",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$this('stage_contraindicated_neuropsychological_battery')"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_contraindicated_cognition_recording",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "$this('data_qac_cognition_recording').isNull().and(\n  $this('stage_contraindicated_cognition_recording').eq(0),\n  $this('stage_skip_cognition_recording').isNull()\n).value() ? 1 : 0"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_missing_cognition_recording",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "res=null\nvar tech=[]\nvar types=['forearm','dual_hip','whole_body','lateral']\nfor(var i=0;i<types.length;i++) {\n  var name = $('Quality_Control.QC_BL:stage_technician_'+types[i]+'_bone_density')\n  if(name.isNull().not().value()) tech.push(name)\n}\nif(0<tech.length) {\n  tech=tech.filter(function(value,index,self){return self.indexOf(value)===index;})\n  res=tech[0]\n}  \nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_technician_dexa",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "res=null\nvar c=0\nvar types=['forearm','dual_hip','whole_body','lateral']\nfor(var i=0;i<types.length;i++) {\n  var v = $('Quality_Control.QC_BL:stage_contraindicated_'+types[i]+'_bone_density')\n  if(v.eq(0).value()) c++  \n}\nres=newValue(c==0 ? 1 : 0,'integer')\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_contraindicated_dexa",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "res=null\nvar c=0\nvar types=['forearm','dual_hip','whole_body','lateral']\nfor(var i=0;i<types.length;i++) {\n  var v = $('Quality_Control.QC_BL:data_missing_'+types[i]+'_bone_density')\n  if(v.eq(1).value()) c++\n}\nres=newValue(c==0 ? 0 : 1,'integer')\nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_missing_dexa",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "integer"
      },
      {
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "stage_skip_dexa",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      },
      {
        "attributes": [
          {
            "name": "script",
            "value": "res=null\nvar types=['forearm','dual_hip','whole_body','lateral']\nvar n=0\nvar d=types.length\nfor(var i=0;i<types.length;i++) {\n  var v = $('Quality_Control.QC_BL:stage_contraindicated_'+types[i]+'_bone_density')\n  var q = $('Quality_Control.QC_BL:data_qac_'+types[i]+'_bone_density')\n  if(v.eq(0).and(q.isNull().not()).value()) n++  \n  if(v.eq(1).value()) d--\n}\nif(d>0) {\n  res=newValue('{file_capture:'+ 100.0*n/d +'}','text')\n}  \nres"
          }
        ],
        "entityType": "Participant",
        "index": 0,
        "isRepeatable": false,
        "mimeType": "",
        "name": "data_qac_dexa",
        "referencedEntityType": "",
        "unit": "",
        "valueType": "text"
      }
    ]
  },
  "datasourceName": "Quality_Control",
  "from": [
    "clsa-dcs.Participants",
    "clsa-dcs.BloodPressure",
    "clsa-dcs.CognitiveTest",
    "clsa-dcs-images.CarotidIntima",
    "clsa-dcs-images.DualHipBoneDensity",
    "clsa-dcs-images.ForearmBoneDensity",
    "clsa-dcs.ECG",
    "clsa-dcs.GripStrength",
    "clsa-dcs.Hearing",
    "clsa-dcs-images.LateralBoneDensity",
    "clsa-dcs-images.RetinalScan",
    "clsa-dcs.Spirometry",
    "clsa-dcs.Tonometer",
    "clsa-dcs.Weight",
    "clsa-dcs-images.WholeBodyBoneDensity",
    "clsa-dcs.StandingHeight",
    "clsa-dcs.TUG",
    "clsa-dcs.HipsWaist",
    "clsa-dcs.ChairRise",
    "clsa-dcs.NeuropsychologicalBattery",
    "clsa-dcs.StandingBalance",
    "clsa-dcs.4mWalk",
    "clsa-dcs.SittingHeight",
    "clsa-dcs.VisionAcuity",
    "clsa-dcs.Consent",
    "clsa-dcs.ContraIndications",
    "clsa-dcs.EventPMT",
    "clsa-dcs.DiseaseSymptoms",
    "clsa-dcs.ConclusionQuestionnaire",
    "clsa-dcs.TimeBasedProspectiveMemoryTask",
    "clsa-dcs.HearingQuestionnaire",
    "clsa-dcs.FunctionalStatus",
    "clsa-dcs.QuestionnaireBoneDensity",
    "clsa-dcs.Urine",
    "clsa-dcs.Blood",
    "clsa-dcs.Blood2",
    "clsa-dcs.Phlebotomy"
  ],
  "name": "QC_BL"
}
