{"from": ["clsa-dcs-f2.Participants","clsa-dcs-f2.OSIPV"],"name": "QC_F2_osipv","datasourceName": "cosmos_dcs","Magma.VariableListViewDto.view": {"variables": [{"name": "technician","entityType": "Participant","valueType": "text","mimeType": "","isRepeatable": false,"attributes": [{"name": "script","value": "$('clsa-dcs-f2.OSIPV:QuestionnaireRun.user').whenNull(\n  $group('Admin.Action.stage','OSIPV','Admin.Action.user').asSequence().last()).lowerCase()"}],"unit": "","index": 0,"referencedEntityType": ""},{"name": "skip","entityType": "Participant","valueType": "text","mimeType": "","isRepeatable": false,"attributes": [{"name": "script","value": "var stage = 'OSIPV'\nvar action = $group('Admin.Action.stage',stage,'Admin.Action.actionType').asSequence()\nvar res = $group('Admin.Action.stage',stage,'Admin.Action.eventReason').asSequence().filter(function(v,i){\n  return i == action.indexOf('SKIP')\n  }).last()\nif(res.isNull().not().value()) {\n  res = newValue(res.value().slice(14),'text')  \n}\nres"}],"unit": "","index": 0,"referencedEntityType": ""},{"name": "contraindicated","entityType": "Participant","valueType": "boolean","mimeType": "","isRepeatable": false,"attributes": [{"name": "script","value": "$group('clsa-dcs-f2.Participants:Admin.StageInstance.stage','OSIPV',\n'Admin.StageInstance.lastState').any('Contraindicated','NotApplicable')"}],"unit": "","index": 0,"referencedEntityType": ""},{"name": "comment","entityType": "Participant","valueType": "text","mimeType": "","isRepeatable": false,"attributes": [{"name": "script","value": "// this script compounds repeated comments by using lowercase comment strings as array keys\n//\nvar stage = 'OSIPV'\nvar c_seq = $group('Admin.Action.stage',stage,'Admin.Action.comment').asSequence()\nvar e_seq = $group('Admin.Action.stage',stage,'Admin.Action.eventReason').asSequence()\nvar res = null\nif(c_seq.size().eq(e_seq.size()).value())\n{\n  var c_str = []  // string array of comments\n  var e_str = []  // string array of event reasons\n\n  for(var i = 0; i < c_seq.size(); i++) {\n    var c = c_seq.valueAt(i).value()\n    if(null == c) continue\n    c = c.replace(/[^a-zA-Z0-9 àâäèéêëîïôœùûüÿçÀÂÄÈÉÊËÎÏÔŒÙÛÜŸÇ]/g,\"\")\n    var e = e_seq.valueAt(i).value()\n    if(0 < c.length) {\n      c_str.push(c)\n      if(null != e && 0 < e.length) {\n        e = e.slice(14)\n      } else {\n        e = 'SeeComment'\n      }\n      e_str.push(e)\n    }\n  }\n\n  if(0 < c_str.length) {\n    var arr = []  // array of event reasons\n    var key_orig = []  // array of lower cased comments as unique keys\n    for(var i = 0; i < c_str.length; i++) {\n      var key = c_str[i]\n      var key_lower = key.toLowerCase()\n      // retain the first encountered instance of the comment\n      //\n      if(undefined === key_orig[key_lower])\n        key_orig[key_lower] = key\n\n      if(undefined === arr[e_str[i]])\n        arr[e_str[i]] = []\n\n      if(-1===arr[e_str[i]].indexOf(key_orig[key_lower]))\n        arr[e_str[i]].push(key_orig[key_lower])\n    }\n\n    // loop over the final array of event reasons and their sets of comments\n    //\n    var str = '{'\n    for(var key in arr) {\n      str += '\"' + key + '\":['\n      var t = []\n      for(var i = 0; i < arr[key].length; i++) {\n        t.push('\"' + arr[key][i] + '\"')\n      }\n      str += t.join(',') + '],'\n    }\n\n    res = newValue(str.substring(0,str.length-1)+'}','text')\n  }\n}\nres"}],"unit": "","index": 0,"referencedEntityType": ""},{"name": "qnaire_complete","entityType": "Participant","valueType": "decimal","mimeType": "","isRepeatable": false,"attributes": [{"name": "script","value": "var stage = 'OSIPV'\nvar p = $('clsa-dcs-f2.' + stage + ':QuestionnaireMetric.missingCount').asSequence()\nvar q = $('clsa-dcs-f2.' + stage + ':QuestionnaireMetric.questionCount').asSequence()\nvar res = null\nif(p.isNull().or(q.isNull(),q.sum().eq(0)).not().value()) {\n  res = q.sum().minus(p.sum()).multiply(100).div(q.sum())\n}\nres"}],"unit": "","index": 0,"referencedEntityType": ""},{"name": "missing","entityType": "Participant","valueType": "boolean","mimeType": "","isRepeatable": false,"attributes": [{"name": "script","value": "$this('contraindicated').not().and(\n  $this('skip').isNull(),\n  $this('qnaire_complete').isNull(),\n  $this('meta_stage_duration').isNull())"}],"unit": "","index": 0,"referencedEntityType": ""},{"name": "meta_module_name","entityType": "Participant","valueType": "text","mimeType": "","isRepeatable": true,"occurrenceGroup": "","attributes": [{"name": "script","value": "newSequence(['IPV','ORH','SLE'], 'text')"}],"unit": "","index": 0,"referencedEntityType": ""},{"name": "duration_name","entityType": "Participant","valueType": "text","mimeType": "","isRepeatable": true,"occurrenceGroup": "","attributes": [{"name": "script","value": "newSequence(['stage'], 'text').append($this('meta_module_name'))"}],"unit": "","index": 0,"referencedEntityType": ""},{"name": "meta_stage_duration","entityType": "Participant","valueType": "integer","mimeType": "","isRepeatable": false,"attributes": [{"name": "script","value": "var stage = 'OSIPV'\nvar res = null\nvar post = $('clsa-dcs-f2.'+stage+':QuestionnaireRun.timeEnd')\nvar pre = $('clsa-dcs-f2.'+stage+':QuestionnaireRun.timeStart')\nif(pre.before(post).value()) {\n    res = post.time().minus(pre.time()).div(1000)\n}\nif(null === res) {\n  res = $group(\n    'clsa-dcs-f2.Participants:Admin.StageInstance.stage',\n    stage,\n    'Admin.StageInstance.duration').asSequence().sum()\n}\nif(res.eq(0).value()) res = null\nres"}],"unit": "","index": 0,"referencedEntityType": ""},{"name": "meta_module_duration","entityType": "Participant","valueType": "integer","mimeType": "","isRepeatable": true,"occurrenceGroup": "","attributes": [{"name": "script","value": "var res = null\nif($this('meta_stage_duration').isNull().not().value()) {\n  var stage = 'OSIPV'\n  var list = $this('meta_module_name')\n  var str = []\n  var section = $('clsa-dcs-f2.'+stage+':QuestionnaireMetric.section').asSequence()\n  var duration = $('clsa-dcs-f2.'+stage+':QuestionnaireMetric.duration').asSequence()\n  for(var i = 0; i < list.size(); i++) {\n    str.push(\n      duration.filter(\n        function(v, k) {\n          return list.valueAt(i).eq(section.valueAt(k))\n        }\n      ).asSequence().sum()\n    )\n  }\n  res = newSequence(str, 'integer') \n} else {\n  var str = []\n  for(var i = 0; i < $this('meta_module_name').size(); i++) str.push(null)\n  res = newSequence(str,'integer')\n}\nres"}],"unit": "","index": 0,"referencedEntityType": ""},{"name": "duration_value","entityType": "Participant","valueType": "integer","mimeType": "","isRepeatable": true,"occurrenceGroup": "","attributes": [{"name": "script","value": "newSequence($this('meta_stage_duration'),'integer').append($this('meta_module_duration'))"}],"unit": "","index": 0,"referencedEntityType": ""},{"name": "refusal_name","entityType": "Participant","valueType": "text","mimeType": "","isRepeatable": true,"occurrenceGroup": "","attributes": [{"name": "script","value": "$this('meta_module_name')"}],"unit": "","index": 0,"referencedEntityType": ""},{"name": "refusal_value","entityType": "Participant","valueType": "decimal","mimeType": "","isRepeatable": true,"occurrenceGroup": "","attributes": [{"name": "script","value": "var stage = 'clsa-dcs-f2.OSIPV:'\nvar sections={\n'IPV':[\n'IPV_ADULTINT_COF2',\n'IPV_RELATN_COF2',\n'IPV_AFRAID_COF2',\n'IPV_PASTFRAID_COF2',\n'IPV_BLAME_COF2',\n'IPV_BLAMEAMT_COF2',\n'IPV_SHOOK_COF2',\n'IPV_SHOOKAMT_COF2',\n'IPV_CRAZY_COF2',\n'IPV_CRAZYAMT_COF2',\n'IPV_THREAT_COF2',\n'IPV_THREATAMT_COF2',\n'IPV_PERFORM_COF2',\n'IPV_PERFORMAMT_COF2',\n'IPV_FOLLOW_COF2',\n'IPV_FOLLOWAMT_COF2',\n'IPV_HARM_COF2',\n'IPV_HARMAMT_COF2',\n'IPV_CHOKE_COF2',\n'IPV_CHOKEAMT_COF2',\n'IPV_FORCE_COF2',\n'IPV_FORCEAMT_COF2',\n'IPV_HARASS_COF2',\n'IPV_HARASSAMT_COF2',\n'IPV_STUPID_COF2',\n'IPV_STUPIDAMT_COF2',\n'IPV_HIT_COF2',\n'IPV_HITAMT_COF2',\n'IPV_KEPT_COF2',\n'IPV_KEPTAMT_COF2',\n'IPV_LOCK_COF2',\n'IPV_LOCKAMT_COF2',\n'IPV_ACCESS_COF2',\n'IPV_ACCESSAMT_COF2'],\n'ORH':[\n'ORH_HLTH_COF2',\n'ORH_TEETH_COF2',\n'ORH_TEETHCHANGE_COF2',\n'ORH_TETH20_COF2',\n'ORH_DENT_COF2',\n'ORH_DNUSE_COF2',\n'ORH_UNCEAT_COF2',\n'ORH_EXP_DNB_COF2',\n'ORH_EXP_DNBTTH_COF2',\n'ORH_DNVST_COF2',\n'ORH_WYNDN_COF2',\n'ORH_TYPINS_COF2',\n'ORH_COST_COF2',\n'ORH_PRBHT_COF2',\n'ORH_BRUSDN_COF2',\n'ORH_WHO_COF2',\n'ORH_OFTN_COF2',\n'ORH_FLSFQ_COF2'],\n'SLE':[\n'SLE_QLTY_COF2',\n'SLS_HOUR_COF2',\n'SLE_30MIN_COF2',\n'SLE_30DUR_COF2',\n'SLE_30INTRF_COF2',\n'SLE_MIDFQ_COF2',\n'SLE_MIDDUR_COF2',\n'SLE_MIDINTRF_COF2',\n'SLE_STAYFQ_COF2',\n'SLE_STAYDUR_COF2',\n'SLE_STAYINTRF_COF2',\n'SLE_DREAM_COF2',\n'SLE_DRMDUR_COF2',\n'SLE_LEGS_COF2',\n'SLE_LGURG_COF2',\n'SLE_LGDUR_COF2',\n'SLE_LGFQ_COF2',\n'SLE_LGIMPR_COF2',\n'SLE_LGEVE_COF2',\n'SNO_SNORE_COF2',\n'SNO_STOPBREATH_COF2']  \n}\n\nvar skip=[]\nif($(stage+'QuestionnaireRun.version').eq('2.0').value()) {\n  skip.push('IPV')\n}\n\nvar str = []\nfor(var key in sections) {\n  if(-1!=skip.indexOf(key)) {\n    str.push(null)\n    continue\n  }    \n  var rcount = 0\n  var qcount = 0\n  var arr = sections[key]\n  for(var i = 0; i < arr.length; i++) {\n    var j = $(stage + arr[i])\n    if(j.isNull().value()) {\n      continue\n    }  \n    qcount++\n    rcount += j.any('REFUSED').value() ? 1 : 0\n  }\n  if(0 == qcount) {\n    str.push(null)\n  } else {\n    str.push(100.0*rcount/qcount)\n  }\n}\nnewSequence(str, 'decimal')"}],"unit": "","index": 0,"referencedEntityType": ""}]}}