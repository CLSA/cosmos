<org.obiba.magma.views.View>
  <name>QC_BL</name>
  <from class="org.obiba.magma.views.JoinTable">
    <list>
      <table inner="false" class="org.obiba.magma.support.ValueTableReference">
        <reference>clsa-dcs.Participants</reference>
      </table>
      <table inner="false" class="org.obiba.magma.support.ValueTableReference">
        <reference>clsa-dcs.BloodPressure</reference>
      </table>
      <table inner="false" class="org.obiba.magma.support.ValueTableReference">
        <reference>clsa-dcs.CognitiveTest</reference>
      </table>
      <table inner="false" class="org.obiba.magma.support.ValueTableReference">
        <reference>clsa-dcs-images.CarotidIntima</reference>
      </table>
      <table inner="false" class="org.obiba.magma.support.ValueTableReference">
        <reference>clsa-dcs-images.DualHipBoneDensity</reference>
      </table>
      <table inner="false" class="org.obiba.magma.support.ValueTableReference">
        <reference>clsa-dcs-images.ForearmBoneDensity</reference>
      </table>
      <table inner="false" class="org.obiba.magma.support.ValueTableReference">
        <reference>clsa-dcs.ECG</reference>
      </table>
      <table inner="false" class="org.obiba.magma.support.ValueTableReference">
        <reference>clsa-dcs.GripStrength</reference>
      </table>
      <table inner="false" class="org.obiba.magma.support.ValueTableReference">
        <reference>clsa-dcs.Hearing</reference>
      </table>
      <table inner="false" class="org.obiba.magma.support.ValueTableReference">
        <reference>clsa-dcs-images.LateralBoneDensity</reference>
      </table>
      <table inner="false" class="org.obiba.magma.support.ValueTableReference">
        <reference>clsa-dcs-images.RetinalScan</reference>
      </table>
      <table inner="false" class="org.obiba.magma.support.ValueTableReference">
        <reference>clsa-dcs.Spirometry</reference>
      </table>
      <table inner="false" class="org.obiba.magma.support.ValueTableReference">
        <reference>clsa-dcs.Tonometer</reference>
      </table>
      <table inner="false" class="org.obiba.magma.support.ValueTableReference">
        <reference>clsa-dcs.Weight</reference>
      </table>
      <table inner="false" class="org.obiba.magma.support.ValueTableReference">
        <reference>clsa-dcs-images.WholeBodyBoneDensity</reference>
      </table>
      <table inner="false" class="org.obiba.magma.support.ValueTableReference">
        <reference>clsa-dcs.StandingHeight</reference>
      </table>
      <table inner="false" class="org.obiba.magma.support.ValueTableReference">
        <reference>clsa-dcs.TUG</reference>
      </table>
      <table inner="false" class="org.obiba.magma.support.ValueTableReference">
        <reference>clsa-dcs.HipsWaist</reference>
      </table>
      <table inner="false" class="org.obiba.magma.support.ValueTableReference">
        <reference>clsa-dcs.ChairRise</reference>
      </table>
      <table inner="false" class="org.obiba.magma.support.ValueTableReference">
        <reference>clsa-dcs.NeuropsychologicalBattery</reference>
      </table>
      <table inner="false" class="org.obiba.magma.support.ValueTableReference">
        <reference>clsa-dcs.StandingBalance</reference>
      </table>
      <table inner="false" class="org.obiba.magma.support.ValueTableReference">
        <reference>clsa-dcs.4mWalk</reference>
      </table>
      <table inner="false" class="org.obiba.magma.support.ValueTableReference">
        <reference>clsa-dcs.SittingHeight</reference>
      </table>
      <table inner="false" class="org.obiba.magma.support.ValueTableReference">
        <reference>clsa-dcs.VisionAcuity</reference>
      </table>
      <table inner="false" class="org.obiba.magma.support.ValueTableReference">
        <reference>clsa-dcs.Consent</reference>
      </table>
      <table inner="false" class="org.obiba.magma.support.ValueTableReference">
        <reference>clsa-dcs.ContraIndications</reference>
      </table>
      <table inner="false" class="org.obiba.magma.support.ValueTableReference">
        <reference>clsa-dcs.EventPMT</reference>
      </table>
      <table inner="false" class="org.obiba.magma.support.ValueTableReference">
        <reference>clsa-dcs.DiseaseSymptoms</reference>
      </table>
      <table inner="false" class="org.obiba.magma.support.ValueTableReference">
        <reference>clsa-dcs.ConclusionQuestionnaire</reference>
      </table>
      <table inner="false" class="org.obiba.magma.support.ValueTableReference">
        <reference>clsa-dcs.TimeBasedProspectiveMemoryTask</reference>
      </table>
      <table inner="false" class="org.obiba.magma.support.ValueTableReference">
        <reference>clsa-dcs.HearingQuestionnaire</reference>
      </table>
      <table inner="false" class="org.obiba.magma.support.ValueTableReference">
        <reference>clsa-dcs.FunctionalStatus</reference>
      </table>
      <table inner="false" class="org.obiba.magma.support.ValueTableReference">
        <reference>clsa-dcs.QuestionnaireBoneDensity</reference>
      </table>
      <table inner="false" class="org.obiba.magma.support.ValueTableReference">
        <reference>clsa-dcs.Urine</reference>
      </table>
      <table inner="false" class="org.obiba.magma.support.ValueTableReference">
        <reference>clsa-dcs.Blood</reference>
      </table>
      <table inner="false" class="org.obiba.magma.support.ValueTableReference">
        <reference>clsa-dcs.Blood2</reference>
      </table>
      <table inner="false" class="org.obiba.magma.support.ValueTableReference">
        <reference>clsa-dcs.Phlebotomy</reference>
      </table>
    </list>
  </from>
  <select class="org.obiba.magma.views.support.NoneClause"/>
  <where class="org.obiba.magma.views.support.AllClause"/>
  <variables class="org.obiba.magma.js.views.VariablesClause">
    <variables class="linked-hash-set">
      <variable name="stage_technician_spirometry" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="stage" valueType="text">Spirometry</attribute>
          <attribute name="script" valueType="text">$(&apos;clsa-dcs.Spirometry:InstrumentRun.user&apos;).whenNull(
  $group(&apos;Admin.Action.stage&apos;,&apos;Spirometry&apos;,&apos;Admin.Action.user&apos;).asSequence().last()).lowerCase()</attribute>
        </attributes>
      </variable>
      <variable name="interview_site" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">$(&apos;Admin.ApplicationConfiguration.siteName&apos;).map({
  &apos;BritishColumbia&apos;:&apos;University of BC DCS&apos;,
  &apos;British Columbia&apos;:&apos;University of BC DCS&apos;,
  &apos;Calgary&apos;:&apos;Calgary DCS&apos;,
  &apos;Dalhousie&apos;:&apos;Dalhousie DCS&apos;,
  &apos;Hamilton&apos;:&apos;Hamilton DCS&apos;,
  &apos;Manitoba&apos;:&apos;Manitoba DCS&apos;,
  &apos;McGill&apos;:&apos;McGill DCS&apos;,
  &apos;McMaster&apos;:&apos;Hamilton DCS&apos;,
  &apos;Memorial&apos;:&apos;Memorial DCS&apos;,
  &apos;Memorial University&apos;:&apos;Memorial DCS&apos;,
  &apos;Ottawa&apos;:&apos;Ottawa DCS&apos;,
  &apos;Sherbrooke&apos;:&apos;Sherbrooke DCS&apos;,
  &apos;Simon Fraser&apos;:&apos;Simon Fraser DCS&apos;,
  &apos;SimonFraser&apos;:&apos;Simon Fraser DCS&apos;,
  &apos;UniversityofBC&apos;:&apos;University of BC DCS&apos;,
  &apos;University of Manitoba&apos;:&apos;Manitoba DCS&apos;,
  &apos;University of Victoria&apos;:&apos;Victoria DCS&apos;,
  &apos;Victoria&apos;:&apos;Victoria DCS&apos;},null) </attribute>
        </attributes>
      </variable>
      <variable name="data_missing_spirometry" valueType="integer" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">$this(&apos;data_qac_spirometry&apos;).isNull().and(
  $this(&apos;stage_contraindicated_spirometry&apos;).eq(0),
  $this(&apos;stage_skip_spirometry&apos;).isNull()
).value() ? 1 : 0</attribute>
        </attributes>
      </variable>
      <variable name="stage_skip_spirometry" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">var action=$group(&apos;Admin.Action.stage&apos;,&apos;Spirometry&apos;,&apos;Admin.Action.actionType&apos;).asSequence()
var res=$group(&apos;Admin.Action.stage&apos;,&apos;Spirometry&apos;,&apos;Admin.Action.eventReason&apos;).asSequence().filter(function(v,i){
  return action.indexOf(&apos;SKIP&apos;)==i
  }).last()
if(res.isNull().not().value()) {
  res=newValue(res.value().slice(14),&apos;text&apos;)  
}
res</attribute>
        </attributes>
      </variable>
      <variable name="stage_contraindicated_spirometry" valueType="integer" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">$group(&apos;clsa-dcs.Participants:Admin.StageInstance.stage&apos;,&apos;Spirometry&apos;,
&apos;Admin.StageInstance.lastState&apos;).any(&apos;Contraindicated&apos;,&apos;NotApplicable&apos;).value() 
? 1 : 0</attribute>
        </attributes>
      </variable>
      <variable name="interview_start_date" valueType="date" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="derivedFrom" namespace="opal" valueType="text">/datasource/clsa-dcs/table/Participants/variable/Admin.Interview.startDate</attribute>
          <attribute name="script" valueType="text">$(&apos;Admin.Interview.startDate&apos;)</attribute>
        </attributes>
      </variable>
      <variable name="interview_barcode" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="identifier" valueType="text">true</attribute>
          <attribute name="derivedFrom" namespace="opal" valueType="text">/datasource/clsa-dcs/table/Participants/variable/Admin.Participant.barcode</attribute>
          <attribute name="script" valueType="text">$(&apos;Admin.Participant.barcode&apos;)</attribute>
        </attributes>
      </variable>
      <variable name="data_qac_spirometry" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">var res=$(&apos;clsa-dcs.Spirometry:OUTPUT_QUALITY_GRADE&apos;)
if(!res.isNull().value()) {
  res=newValue(&apos;{grade:&apos;+res.value()+&apos;}&apos;,&apos;text&apos;)
}
res</attribute>
        </attributes>
      </variable>
      <variable name="stage_technician_grip_strength" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">$(&apos;clsa-dcs.GripStrength:InstrumentRun.user&apos;).whenNull(
  $group(&apos;Admin.Action.stage&apos;,&apos;GripStrength&apos;,&apos;Admin.Action.user&apos;).asSequence().last()).lowerCase()</attribute>
        </attributes>
      </variable>
      <variable name="stage_contraindicated_grip_strength" valueType="integer" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">$group(&apos;clsa-dcs.Participants:Admin.StageInstance.stage&apos;,&apos;GripStrength&apos;,
&apos;Admin.StageInstance.lastState&apos;).any(&apos;Contraindicated&apos;,&apos;NotApplicable&apos;).value() 
? 1 : 0</attribute>
        </attributes>
      </variable>
      <variable name="stage_skip_grip_strength" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">var action=$group(&apos;Admin.Action.stage&apos;,&apos;GripStrength&apos;,&apos;Admin.Action.actionType&apos;).asSequence()
var res=$group(&apos;Admin.Action.stage&apos;,&apos;GripStrength&apos;,&apos;Admin.Action.eventReason&apos;).asSequence().filter(function(v,i){
  return action.indexOf(&apos;SKIP&apos;)==i
  }).last()
if(res.isNull().not().value()) {
  res=newValue(res.value().slice(14),&apos;text&apos;)  
}
res</attribute>
        </attributes>
      </variable>
      <variable name="data_missing_grip_strength" valueType="integer" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">$this(&apos;data_qac_grip_strength&apos;).isNull().and(
  $this(&apos;stage_contraindicated_grip_strength&apos;).eq(0),
  $this(&apos;stage_skip_grip_strength&apos;).isNull()
).value() ? 1 : 0</attribute>
        </attributes>
      </variable>
      <variable name="data_qac_grip_strength" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">var res=$(&apos;clsa-dcs.GripStrength:Measure.RES_TRIAL_MAX&apos;)
if(res.isNull().not().value()) {
  res=newValue(&apos;{trial_count:&apos;+res.size()+&apos;}&apos;,&apos;text&apos;)
}
res</attribute>
        </attributes>
      </variable>
      <variable name="stage_technician_blood_pressure" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">$(&apos;clsa-dcs.BloodPressure:InstrumentRun.user&apos;).whenNull(
  $group(&apos;Admin.Action.stage&apos;,&apos;BloodPressure&apos;,&apos;Admin.Action.user&apos;).asSequence().last()).lowerCase()</attribute>
        </attributes>
      </variable>
      <variable name="stage_contraindicated_blood_pressure" valueType="integer" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">$group(&apos;clsa-dcs.Participants:Admin.StageInstance.stage&apos;,&apos;BloodPressure&apos;,
&apos;Admin.StageInstance.lastState&apos;).any(&apos;Contraindicated&apos;,&apos;NotApplicable&apos;).value() 
? 1 : 0</attribute>
        </attributes>
      </variable>
      <variable name="stage_skip_blood_pressure" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">var action=$group(&apos;Admin.Action.stage&apos;,&apos;BloodPressure&apos;,&apos;Admin.Action.actionType&apos;).asSequence()
var res=$group(&apos;Admin.Action.stage&apos;,&apos;BloodPressure&apos;,&apos;Admin.Action.eventReason&apos;).asSequence().filter(function(v,i){
  return action.indexOf(&apos;SKIP&apos;)==i
  }).last()
if(res.isNull().not().value()) {
  res=newValue(res.value().slice(14),&apos;text&apos;)  
}
res</attribute>
        </attributes>
      </variable>
      <variable name="data_missing_blood_pressure" valueType="integer" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">$this(&apos;data_qac_blood_pressure&apos;).isNull().and(
  $this(&apos;stage_contraindicated_blood_pressure&apos;).eq(0),
  $this(&apos;stage_skip_blood_pressure&apos;).isNull()
).value() ? 1 : 0</attribute>
        </attributes>
      </variable>
      <variable name="data_qac_blood_pressure" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">var res=$(&apos;clsa-dcs.BloodPressure:RES_AVG_COUNT&apos;)
if(res.isNull().not().value()) {
  res=newValue(&apos;{trial_count:&apos;+res.value()+&apos;}&apos;,&apos;text&apos;)
}
res</attribute>
        </attributes>
      </variable>
      <variable name="stage_technician_ecg" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">$(&apos;clsa-dcs.ECG:InstrumentRun.user&apos;).whenNull(
  $group(&apos;Admin.Action.stage&apos;,&apos;ECG&apos;,&apos;Admin.Action.user&apos;).asSequence().last()).lowerCase()</attribute>
        </attributes>
      </variable>
      <variable name="stage_contraindicated_ecg" valueType="integer" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">$group(&apos;clsa-dcs.Participants:Admin.StageInstance.stage&apos;,&apos;ECG&apos;,
&apos;Admin.StageInstance.lastState&apos;).any(&apos;Contraindicated&apos;,&apos;NotApplicable&apos;).value() 
? 1 : 0</attribute>
        </attributes>
      </variable>
      <variable name="stage_skip_ecg" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">var action=$group(&apos;Admin.Action.stage&apos;,&apos;ECG&apos;,&apos;Admin.Action.actionType&apos;).asSequence()
var res=$group(&apos;Admin.Action.stage&apos;,&apos;ECG&apos;,&apos;Admin.Action.eventReason&apos;).asSequence().filter(function(v,i){
  return action.indexOf(&apos;SKIP&apos;)==i
  }).last()
if(res.isNull().not().value()) {
  res=newValue(res.value().slice(14),&apos;text&apos;)  
}
res</attribute>
        </attributes>
      </variable>
      <variable name="data_missing_ecg" valueType="integer" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">$this(&apos;data_qac_ecg&apos;).isNull().and(
  $this(&apos;stage_contraindicated_ecg&apos;).eq(0),
  $this(&apos;stage_skip_ecg&apos;).isNull()
).value() ? 1 : 0</attribute>
        </attributes>
      </variable>
      <variable name="data_qac_ecg" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">var f=$(&apos;clsa-dcs.ECG:RES_XML_FILE&apos;)
var q=$(&apos;clsa-dcs.ECG:RES_DIAGNOSIS&apos;)
var res=null
if(f.isNull().not().value()) {
  var str=&apos;{filesize:&apos;+f.length()+&apos;,quality:&apos;
  if(q.lowerCase().matches(/poor data quality/).value()) {
    str += &apos;0}&apos;
  } else {
    str += &apos;1}&apos;  
  }
  res = newValue(str,&apos;text&apos;)
}
res</attribute>
        </attributes>
      </variable>
      <variable name="stage_technician_cognitive_test" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">$(&apos;clsa-dcs.CognitiveTest:InstrumentRun.user&apos;).whenNull(
  $group(&apos;Admin.Action.stage&apos;,&apos;CognitiveTest&apos;,&apos;Admin.Action.user&apos;).asSequence().last()).lowerCase()</attribute>
        </attributes>
      </variable>
      <variable name="stage_contraindicated_cognitive_test" valueType="integer" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">$group(&apos;clsa-dcs.Participants:Admin.StageInstance.stage&apos;,&apos;CognitiveTest&apos;,
&apos;Admin.StageInstance.lastState&apos;).any(&apos;Contraindicated&apos;,&apos;NotApplicable&apos;).value() 
? 1 : 0</attribute>
        </attributes>
      </variable>
      <variable name="stage_skip_cognitive_test" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">var action=$group(&apos;Admin.Action.stage&apos;,&apos;CognitiveTest&apos;,&apos;Admin.Action.actionType&apos;).asSequence()
var res=$group(&apos;Admin.Action.stage&apos;,&apos;CognitiveTest&apos;,&apos;Admin.Action.eventReason&apos;).asSequence().filter(function(v,i){
  return action.indexOf(&apos;SKIP&apos;)==i
  }).last()
if(res.isNull().not().value()) {
  res=newValue(res.value().slice(14),&apos;text&apos;)  
}
res</attribute>
        </attributes>
      </variable>
      <variable name="data_missing_cognitive_test" valueType="integer" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">$this(&apos;data_qac_cognitive_test&apos;).isNull().and(
  $this(&apos;stage_contraindicated_cognitive_test&apos;).eq(0),
  $this(&apos;stage_skip_cognitive_test&apos;).isNull()
).value() ? 1 : 0</attribute>
        </attributes>
      </variable>
      <variable name="data_qac_cognitive_test" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">var res=$(&apos;clsa-dcs.CognitiveTest:RES_RESULT_FILE&apos;)
if(res.isNull().not().value()) {
  res = newValue(&apos;{filesize:&apos;+res.length()+&apos;}&apos;,&apos;text&apos;)
}  
res</attribute>
        </attributes>
      </variable>
      <variable name="stage_technician_hearing" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">$(&apos;clsa-dcs.Hearing:InstrumentRun.user&apos;).whenNull(
  $group(&apos;Admin.Action.stage&apos;,&apos;Hearing&apos;,&apos;Admin.Action.user&apos;).asSequence().last()).lowerCase()</attribute>
        </attributes>
      </variable>
      <variable name="stage_contraindicated_hearing" valueType="integer" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">$group(&apos;clsa-dcs.Participants:Admin.StageInstance.stage&apos;,&apos;Hearing&apos;,
&apos;Admin.StageInstance.lastState&apos;).any(&apos;Contraindicated&apos;,&apos;NotApplicable&apos;).value() 
? 1 : 0</attribute>
        </attributes>
      </variable>
      <variable name="stage_skip_hearing" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">var action=$group(&apos;Admin.Action.stage&apos;,&apos;Hearing&apos;,&apos;Admin.Action.actionType&apos;).asSequence()
var res=$group(&apos;Admin.Action.stage&apos;,&apos;Hearing&apos;,&apos;Admin.Action.eventReason&apos;).asSequence().filter(function(v,i){
  return action.indexOf(&apos;SKIP&apos;)==i
  }).last()
if(res.isNull().not().value()) {
  res=newValue(res.value().slice(14),&apos;text&apos;)  
}
res</attribute>
        </attributes>
      </variable>
      <variable name="data_missing_hearing" valueType="integer" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">$this(&apos;data_qac_hearing&apos;).isNull().and(
  $this(&apos;stage_contraindicated_hearing&apos;).eq(0),
  $this(&apos;stage_skip_hearing&apos;).isNull()
).value() ? 1 : 0</attribute>
        </attributes>
      </variable>
      <variable name="data_qac_hearing" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">var side = [&apos;RIGHT&apos;,&apos;LEFT&apos;]
var freq = [&apos;1KT&apos;,&apos;500&apos;,&apos;1K&apos;,&apos;2K&apos;,&apos;3K&apos;,&apos;4K&apos;,&apos;6K&apos;,&apos;8K&apos;]
var count = {RIGHT:0,LEFT:0}
var countfreq = {RIGHT:0,LEFT:0}
var counterr = {RIGHT:0,LEFT:0}
for(var i=0;i&lt;side.length;i++) {
  var s = side[i]
  var v = &apos;clsa-dcs.Hearing:RES_&apos; + s + &apos;_&apos;
  for(var j=0;j&lt;freq.length;j++) {
    var f = v + freq[j]
    if ($(f).isNull().not().or($(f + &apos;_ERR&apos;).isNull().not()).value()) count[s]++;
    if ($(f).isNull().not().value()) countfreq[s]++;
    if ($(f + &apos;_ERR&apos;).isNull().not().value()) counterr[s]++;
  }
}
res = (0 == count.RIGHT &amp;&amp; 0 == count.LEFT &amp;&amp; 
  $(&apos;clsa-dcs.Hearing:RES_TEST_ID&apos;).isNull().and(
    $(&apos;clsa-dcs.Hearing:RES_TEST_DATETIME&apos;).isNull()).value()) ?
      null : newValue(
        &apos;{response_left:&apos;+count.LEFT+
        &apos;,response_right:&apos;+count.RIGHT+
        &apos;,error_left:&apos;+(counterr.LEFT&gt;0 &amp;&amp; countfreq.LEFT==0 ? &apos;1&apos; : &apos;0&apos;)+
        &apos;,error_right:&apos;+(counterr.RIGHT&gt;0 &amp;&amp; countfreq.RIGHT==0 ? &apos;1&apos; : &apos;0&apos;)+
        &apos;}&apos;,&apos;text&apos;)</attribute>
        </attributes>
      </variable>
      <variable name="stage_technician_tonometer" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">$(&apos;clsa-dcs.Tonometer:InstrumentRun.user&apos;).whenNull(
  $group(&apos;Admin.Action.stage&apos;,&apos;Tonometer&apos;,&apos;Admin.Action.user&apos;).asSequence().last()).lowerCase()</attribute>
        </attributes>
      </variable>
      <variable name="stage_contraindicated_tonometer" valueType="integer" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">$group(&apos;clsa-dcs.Participants:Admin.StageInstance.stage&apos;,&apos;Tonometer&apos;,
&apos;Admin.StageInstance.lastState&apos;).any(&apos;Contraindicated&apos;,&apos;NotApplicable&apos;).value() 
? 1 : 0</attribute>
        </attributes>
      </variable>
      <variable name="stage_skip_tonometer" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">var action=$group(&apos;Admin.Action.stage&apos;,&apos;Tonometer&apos;,&apos;Admin.Action.actionType&apos;).asSequence()
var res=$group(&apos;Admin.Action.stage&apos;,&apos;Tonometer&apos;,&apos;Admin.Action.eventReason&apos;).asSequence().filter(function(v,i){
  return action.indexOf(&apos;SKIP&apos;)==i
  }).last()
if(res.isNull().not().value()) {
  res=newValue(res.value().slice(14),&apos;text&apos;)  
}
res</attribute>
        </attributes>
      </variable>
      <variable name="data_missing_tonometer" valueType="integer" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">$this(&apos;data_qac_tonometer&apos;).isNull().and(
  $this(&apos;stage_contraindicated_tonometer&apos;).eq(0),
  $this(&apos;stage_skip_tonometer&apos;).isNull()
).value() ? 1: 0</attribute>
        </attributes>
      </variable>
      <variable name="data_qac_tonometer" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">var eye=$(&apos;clsa-dcs.Tonometer:Measure.TON_EYE&apos;).lowerCase().map({
  &apos;l&apos;:&apos;L&apos;,
  &apos;r&apos;:&apos;R&apos;,
  &apos;right&apos;:&apos;R&apos;,
  &apos;left&apos;:&apos;L&apos;,
  &apos;left eye&apos;:&apos;L&apos;,
  &apos;right eye&apos;:&apos;R&apos;,
  &apos;righr&apos;:&apos;R&apos;,
  &apos;rigth&apos;:&apos;R&apos;,
  &apos;rught&apos;:&apos;R&apos;,
  &apos;lrft&apos;:&apos;L&apos;,
  &apos;0&apos;:&apos;L&apos;,
  &apos;1&apos;:&apos;R&apos;,
  &apos;ll&apos;:&apos;L&apos;,
  &apos;rr&apos;:&apos;R&apos;,
  &apos;le&apos;:&apos;L&apos;,
  &apos;leeft&apos;:&apos;L&apos;,
  &apos;gauche&apos;:&apos;L&apos;,
  &apos;droit&apos;:&apos;R&apos;,
  &apos;droite&apos;:&apos;R&apos;},null)

// bare minimum useful data is IOPcc: Corneal Compensated Intraocular Pressure
var iopcc=$(&apos;clsa-dcs.Tonometer:Measure.TON_IOPCC&apos;).asSequence() 

// if there is raw applanation and pressure data there will be a quality index
// for each set of measurements
var qual=$(&apos;clsa-dcs.Tonometer:Measure.TON_QUALITYINDEX&apos;).asSequence()
var appl=$(&apos;clsa-dcs.Tonometer:Measure.TON_PRESSURE&apos;).asSequence()
var pres=$(&apos;clsa-dcs.Tonometer:Measure.TON_APPLANATION&apos;).asSequence()

var has_iopcc=iopcc.size().eq(eye.size()).value()
var has_qual=qual.size().eq(eye.size()).value()
var has_appl=appl.size().eq(eye.size()).value()
var has_pres=pres.size().eq(eye.size()).value()
var res=null
if(eye.isNull().not().value()) {
  var side={L:{left_iopcc:&apos;0&apos;,left_qi:&apos;-1&apos;,left_appl:&apos;0&apos;,left_pres:&apos;0&apos;},
            R:{right_iopcc:&apos;0&apos;,right_qi:&apos;-1&apos;,right_appl:&apos;0&apos;,right_pres:&apos;0&apos;}}
  for(var i=0;i&lt;eye.size();i++) {
    var e=eye.valueAt(i).value()
    if(has_iopcc) {
      var q=newValue(iopcc.valueAt(i).value(),&apos;text&apos;)
      if(q.matches(/^(\d*\.)?\d+$/)) {
        if(&apos;L&apos;==e) {
          side[e].left_iopcc=&apos;1&apos;
        } else if(&apos;R&apos;==e) {
          side[e].right_iopcc=&apos;1&apos;
        }
      }
    }
    if(has_qual) {
      var q=newValue(qual.valueAt(i).round(2).value(),&apos;text&apos;)
      if(q.matches(/^(\d*\.)?\d+$/)) {
        if(&apos;L&apos;==e) {
          side[e].left_qi=q.value()
        } else if(&apos;R&apos;==e) {
          side[e].right_qi=q.value()
        }
      }
    }
    if(has_appl) {
      var q=appl.valueAt(i).value().split(&apos;,&apos;).length
      if(&apos;L&apos;==e) {
        side[e].left_appl=q
      } else if(&apos;R&apos;==e) {
        side[e].right_appl=q
      }      
    }        
    if(has_pres) {
      var q=pres.valueAt(i).value().split(&apos;,&apos;).length
      if(&apos;L&apos;==e) {
        side[e].left_pres=q
      } else if(&apos;R&apos;==e) {
        side[e].right_pres=q
      }
    }
  }
  res=newValue(
    JSON.stringify(side.L).replace(/&quot;/g,&apos;&apos;).replace(/}/g,&apos;,&apos;) +
    JSON.stringify(side.R).replace(/&quot;/g,&apos;&apos;).replace(/{/g,&apos;&apos;), &apos;text&apos;)
}
res</attribute>
        </attributes>
      </variable>
      <variable name="stage_technician_weight" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">$(&apos;clsa-dcs.Weight:InstrumentRun.user&apos;).whenNull(
  $group(&apos;Admin.Action.stage&apos;,&apos;Weight&apos;,&apos;Admin.Action.user&apos;).asSequence().last()).lowerCase()</attribute>
        </attributes>
      </variable>
      <variable name="stage_contraindicated_weight" valueType="integer" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">$group(&apos;clsa-dcs.Participants:Admin.StageInstance.stage&apos;,&apos;Weight&apos;,
&apos;Admin.StageInstance.lastState&apos;).any(&apos;Contraindicated&apos;,&apos;NotApplicable&apos;).value() 
? 1 : 0</attribute>
        </attributes>
      </variable>
      <variable name="stage_skip_weight" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">var action=$group(&apos;Admin.Action.stage&apos;,&apos;Weight&apos;,&apos;Admin.Action.actionType&apos;).asSequence()
var res=$group(&apos;Admin.Action.stage&apos;,&apos;Weight&apos;,&apos;Admin.Action.eventReason&apos;).asSequence().filter(function(v,i){
  return action.indexOf(&apos;SKIP&apos;)==i
  }).last()
if(res.isNull().not().value()) {
  res=newValue(res.value().slice(14),&apos;text&apos;)  
}
res</attribute>
        </attributes>
      </variable>
      <variable name="data_missing_weight" valueType="integer" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">$this(&apos;data_qac_weight&apos;).isNull().and(
  $this(&apos;stage_contraindicated_weight&apos;).eq(0),
  $this(&apos;stage_skip_weight&apos;).isNull()
).value() ? 1 : 0</attribute>
        </attributes>
      </variable>
      <variable name="data_qac_weight" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">var res=$(&apos;clsa-dcs.Weight:Measure.RES_WEIGHT_MEASURE&apos;)
if(res.size().gt(1).value()){
  res=newValue(&apos;{stddev:&apos;+res.stddev().round(6).value()+&apos;,size:&apos;+res.size().value()+&apos;}&apos;,&apos;text&apos;)
} else if(res.size().eq(1).value()) {
  res=newValue(&apos;{stddev:0,size:1}&apos;,&apos;text&apos;)
} 
res</attribute>
        </attributes>
      </variable>
      <variable name="stage_technician_retinal_scan" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">$(&apos;clsa-dcs-images.RetinalScan:InstrumentRun.user&apos;).whenNull(
  $group(&apos;Admin.Action.stage&apos;,&apos;RetinalScan&apos;,&apos;Admin.Action.user&apos;).asSequence().last()).lowerCase()</attribute>
        </attributes>
      </variable>
      <variable name="stage_contraindicated_retinal_scan" valueType="integer" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">$group(&apos;clsa-dcs.Participants:Admin.StageInstance.stage&apos;,&apos;RetinalScan&apos;,
&apos;Admin.StageInstance.lastState&apos;).any(&apos;Contraindicated&apos;,&apos;NotApplicable&apos;).value() 
? 1 : 0</attribute>
        </attributes>
      </variable>
      <variable name="stage_skip_retinal_scan" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">var action=$group(&apos;Admin.Action.stage&apos;,&apos;RetinalScan&apos;,&apos;Admin.Action.actionType&apos;).asSequence()
var res=$group(&apos;Admin.Action.stage&apos;,&apos;RetinalScan&apos;,&apos;Admin.Action.eventReason&apos;).asSequence().filter(function(v,i){
  return action.indexOf(&apos;SKIP&apos;)==i
  }).last()
if(res.isNull().not().value()) {
  res=newValue(res.value().slice(14),&apos;text&apos;)  
}
res</attribute>
        </attributes>
      </variable>
      <variable name="data_missing_retinal_scan" valueType="integer" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">$this(&apos;data_qac_retinal_scan&apos;).isNull().and(
  $this(&apos;stage_contraindicated_retinal_scan&apos;).eq(0),
  $this(&apos;stage_skip_retinal_scan&apos;).isNull()
).value() ? 1 : 0</attribute>
        </attributes>
      </variable>
      <variable name="data_qac_retinal_scan" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">var l=$group(&apos;clsa-dcs-images.RetinalScan:Measure.SIDE&apos;,&apos;LEFT&apos;,&apos;Measure.EYE&apos;).asSequence().last()
var r=$group(&apos;clsa-dcs-images.RetinalScan:Measure.SIDE&apos;,&apos;RIGHT&apos;,&apos;Measure.EYE&apos;).asSequence().last()
var res=null
if(!l.isNull().and(r.isNull()).value()) {
  res=newValue(
    &apos;{filesize_left:&apos;+
    (l.isNull().value()?&apos;0&apos;:l.length().value())+
    &apos;,filesize_right:&apos;+
    (r.isNull().value()?&apos;0&apos;:r.length().value())+
    &apos;}&apos;, &apos;text&apos;)
}
res</attribute>
        </attributes>
      </variable>
      <variable name="stage_technician_lateral_bone_density" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">$(&apos;clsa-dcs-images.LateralBoneDensity:InstrumentRun.user&apos;).whenNull(
  $group(&apos;Admin.Action.stage&apos;,&apos;LateralBoneDensity&apos;,&apos;Admin.Action.user&apos;).asSequence().last()).lowerCase()</attribute>
        </attributes>
      </variable>
      <variable name="stage_contraindicated_lateral_bone_density" valueType="integer" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">$group(&apos;clsa-dcs.Participants:Admin.StageInstance.stage&apos;,&apos;LateralBoneDensity&apos;,
&apos;Admin.StageInstance.lastState&apos;).any(&apos;Contraindicated&apos;,&apos;NotApplicable&apos;).value() 
? 1 : 0</attribute>
        </attributes>
      </variable>
      <variable name="stage_skip_lateral_bone_density" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">var action=$group(&apos;Admin.Action.stage&apos;,&apos;LateralBoneDensity&apos;,&apos;Admin.Action.actionType&apos;).asSequence()
var res=$group(&apos;Admin.Action.stage&apos;,&apos;LateralBoneDensity&apos;,&apos;Admin.Action.eventReason&apos;).asSequence().filter(function(v,i){
  return action.indexOf(&apos;SKIP&apos;)==i
  }).last()
if(res.isNull().not().value()) {
  res=newValue(res.value().slice(14),&apos;text&apos;)
}
res</attribute>
        </attributes>
      </variable>
      <variable name="data_missing_lateral_bone_density" valueType="integer" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">$this(&apos;data_qac_lateral_bone_density&apos;).isNull().and(
  $this(&apos;stage_contraindicated_lateral_bone_density&apos;).eq(0),
  $this(&apos;stage_skip_lateral_bone_density&apos;).isNull()
).value() ? 1 : 0</attribute>
        </attributes>
      </variable>
      <variable name="data_qac_lateral_bone_density" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">var res=$(&apos;clsa-dcs-images.LateralBoneDensity:RES_SEL_DICOM_MEASURE&apos;)
if(res.isNull().not().value()) {
  res = newValue(&apos;{filesize:&apos;+res.length()+&apos;}&apos;,&apos;text&apos;)
}  
res</attribute>
        </attributes>
      </variable>
      <variable name="stage_technician_standing_height" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">$(&apos;clsa-dcs.StandingHeight:InstrumentRun.user&apos;).whenNull(
  $group(&apos;Admin.Action.stage&apos;,&apos;StandingHeight&apos;,&apos;Admin.Action.user&apos;).asSequence().last()).lowerCase()</attribute>
        </attributes>
      </variable>
      <variable name="stage_contraindicated_standing_height" valueType="integer" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">$group(&apos;clsa-dcs.Participants:Admin.StageInstance.stage&apos;,&apos;StandingHeight&apos;,
&apos;Admin.StageInstance.lastState&apos;).any(&apos;Contraindicated&apos;,&apos;NotApplicable&apos;).value() 
? 1 : 0</attribute>
        </attributes>
      </variable>
      <variable name="stage_skip_standing_height" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">var action=$group(&apos;Admin.Action.stage&apos;,&apos;StandingHeight&apos;,&apos;Admin.Action.actionType&apos;).asSequence()
var res=$group(&apos;Admin.Action.stage&apos;,&apos;StandingHeight&apos;,&apos;Admin.Action.eventReason&apos;).asSequence().filter(function(v,i){
  return action.indexOf(&apos;SKIP&apos;)==i
  }).last()
if(res.isNull().not().value()) {
  res=newValue(res.value().slice(14),&apos;text&apos;)
}
res</attribute>
        </attributes>
      </variable>
      <variable name="data_missing_standing_height" valueType="integer" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">$this(&apos;data_qac_standing_height&apos;).isNull().and(
  $this(&apos;stage_contraindicated_standing_height&apos;).eq(0),
  $this(&apos;stage_skip_standing_height&apos;).isNull()
).value() ? 1 : 0</attribute>
        </attributes>
      </variable>
      <variable name="data_qac_standing_height" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">var res=$(&apos;clsa-dcs.StandingHeight:Measure.RES_HEIGHT_MEASURE&apos;)
if(res.size().gt(1).value()){
  res=newValue(&apos;{stddev:&apos;+res.stddev().round(6).value()+&apos;,size:&apos;+res.size().value()+&apos;}&apos;,&apos;text&apos;)
} else if(res.size().eq(1).value()) {
  res=newValue(&apos;{stddev:0,size:1}&apos;,&apos;text&apos;)
} 
res</attribute>
        </attributes>
      </variable>
      <variable name="stage_technician_forearm_bone_density" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">$(&apos;clsa-dcs-images.ForearmBoneDensity:InstrumentRun.user&apos;).whenNull(
  $group(&apos;Admin.Action.stage&apos;,&apos;ForearmBoneDensity&apos;,&apos;Admin.Action.user&apos;).asSequence().last()).lowerCase()</attribute>
        </attributes>
      </variable>
      <variable name="stage_contraindicated_forearm_bone_density" valueType="integer" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">$group(&apos;clsa-dcs.Participants:Admin.StageInstance.stage&apos;,&apos;ForearmBoneDensity&apos;,
&apos;Admin.StageInstance.lastState&apos;).any(&apos;Contraindicated&apos;,&apos;NotApplicable&apos;).value() 
? 1 : 0</attribute>
        </attributes>
      </variable>
      <variable name="stage_skip_forearm_bone_density" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">var action=$group(&apos;Admin.Action.stage&apos;,&apos;ForearmBoneDensity&apos;,&apos;Admin.Action.actionType&apos;).asSequence()
var res=$group(&apos;Admin.Action.stage&apos;,&apos;ForearmBoneDensity&apos;,&apos;Admin.Action.eventReason&apos;).asSequence().filter(function(v,i){
  return action.indexOf(&apos;SKIP&apos;)==i
  }).last()
if(res.isNull().not().value()) {
  res=newValue(res.value().slice(14),&apos;text&apos;)  
}
res</attribute>
        </attributes>
      </variable>
      <variable name="data_missing_forearm_bone_density" valueType="integer" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">$this(&apos;data_qac_forearm_bone_density&apos;).isNull().and(
  $this(&apos;stage_contraindicated_forearm_bone_density&apos;).eq(0),
  $this(&apos;stage_skip_forearm_bone_density&apos;).isNull()
).value() ? 1 : 0</attribute>
        </attributes>
      </variable>
      <variable name="data_qac_forearm_bone_density" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">var res=$group(&apos;OUTPUT_FA_SIDE&apos;,&apos;LEFT&apos;,&apos;RES_FA_DICOM&apos;).asSequence().last().whenNull(
  $group(&apos;OUTPUT_FA_SIDE&apos;,&apos;RIGHT&apos;,&apos;RES_FA_DICOM&apos;).asSequence().last())
if(res.isNull().not().value()) {
  res=newValue(&apos;{filesize:&apos;+res.length().value()+&apos;}&apos;,&apos;text&apos;)
}
res</attribute>
        </attributes>
      </variable>
      <variable name="stage_technician_whole_body_bone_density" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">$(&apos;clsa-dcs-images.WholeBodyBoneDensity:InstrumentRun.user&apos;).whenNull(
  $group(&apos;Admin.Action.stage&apos;,&apos;WholeBodyBoneDensity&apos;,&apos;Admin.Action.user&apos;).asSequence().last()).lowerCase()</attribute>
        </attributes>
      </variable>
      <variable name="stage_contraindicated_whole_body_bone_density" valueType="integer" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">$group(&apos;clsa-dcs.Participants:Admin.StageInstance.stage&apos;,&apos;WholeBodyBoneDensity&apos;,
&apos;Admin.StageInstance.lastState&apos;).any(&apos;Contraindicated&apos;,&apos;NotApplicable&apos;).value() 
? 1 : 0</attribute>
        </attributes>
      </variable>
      <variable name="stage_skip_whole_body_bone_density" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">var action=$group(&apos;Admin.Action.stage&apos;,&apos;WholeBodyBoneDensity&apos;,&apos;Admin.Action.actionType&apos;).asSequence()
var res=$group(&apos;Admin.Action.stage&apos;,&apos;WholeBodyBoneDensity&apos;,&apos;Admin.Action.eventReason&apos;).asSequence().filter(function(v,i){
  return action.indexOf(&apos;SKIP&apos;)==i
  }).last()
if(res.isNull().not().value()) {
  res=newValue(res.value().slice(14),&apos;text&apos;)  
}
res</attribute>
        </attributes>
      </variable>
      <variable name="data_missing_whole_body_bone_density" valueType="integer" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">$this(&apos;data_qac_whole_body_bone_density&apos;).isNull().and(
  $this(&apos;stage_contraindicated_whole_body_bone_density&apos;).eq(0),
  $this(&apos;stage_skip_whole_body_bone_density&apos;).isNull()
).value() ? 1 : 0</attribute>
        </attributes>
      </variable>
      <variable name="data_qac_whole_body_bone_density" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">var res=$(&apos;clsa-dcs-images.WholeBodyBoneDensity:RES_WB_DICOM_1&apos;)
if(res.isNull().not().value()) {
  res = newValue(&apos;{filesize:&apos;+res.length()+&apos;}&apos;,&apos;text&apos;)
}  
res</attribute>
        </attributes>
      </variable>
      <variable name="stage_technician_dual_hip_bone_density" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">$(&apos;clsa-dcs-images.DualHipBoneDensity:InstrumentRun.user&apos;).whenNull(
  $group(&apos;Admin.Action.stage&apos;,&apos;DualHipBoneDensity&apos;,&apos;Admin.Action.user&apos;).asSequence().last()).lowerCase()</attribute>
        </attributes>
      </variable>
      <variable name="stage_contraindicated_dual_hip_bone_density" valueType="integer" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">$group(&apos;clsa-dcs.Participants:Admin.StageInstance.stage&apos;,&apos;DualHipBoneDensity&apos;,
&apos;Admin.StageInstance.lastState&apos;).any(&apos;Contraindicated&apos;,&apos;NotApplicable&apos;).value() 
? 1 : 0</attribute>
        </attributes>
      </variable>
      <variable name="stage_skip_dual_hip_bone_density" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">var action=$group(&apos;Admin.Action.stage&apos;,&apos;DualHipBoneDensity&apos;,&apos;Admin.Action.actionType&apos;).asSequence()
var res=$group(&apos;Admin.Action.stage&apos;,&apos;DualHipBoneDensity&apos;,&apos;Admin.Action.eventReason&apos;).asSequence().filter(function(v,i){
  return action.indexOf(&apos;SKIP&apos;)==i
  }).last()
if(res.isNull().not().value()) {
  res=newValue(res.value().slice(14),&apos;text&apos;)  
}
res</attribute>
        </attributes>
      </variable>
      <variable name="data_missing_dual_hip_bone_density" valueType="integer" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">$this(&apos;data_qac_dual_hip_bone_density&apos;).isNull().and(
  $this(&apos;stage_contraindicated_dual_hip_bone_density&apos;).eq(0),
  $this(&apos;stage_skip_dual_hip_bone_density&apos;).isNull()
).value() ? 1 : 0</attribute>
        </attributes>
      </variable>
      <variable name="data_qac_dual_hip_bone_density" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">var l=$group(&apos;Measure.OUTPUT_HIP_SIDE&apos;,&apos;LEFT&apos;,&apos;Measure.RES_HIP_DICOM&apos;).asSequence().last()
var r=$group(&apos;Measure.OUTPUT_HIP_SIDE&apos;,&apos;RIGHT&apos;,&apos;Measure.RES_HIP_DICOM&apos;).asSequence().last()
var res=null
if(!l.isNull().and(r.isNull()).value()) {
  res=newValue(
    &apos;{filesize_left:&apos;+
    (l.isNull().value()?&apos;0&apos;:l.length().value())+
    &apos;,filesize_right:&apos;+
    (r.isNull().value()?&apos;0&apos;:r.length().value())+
    &apos;}&apos;, &apos;text&apos;)
}
res</attribute>
        </attributes>
      </variable>
      <variable name="stage_technician_carotid_intima" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">$(&apos;clsa-dcs-images.CarotidIntima:InstrumentRun.user&apos;).whenNull(
  $group(&apos;Admin.Action.stage&apos;,&apos;CarotidIntima&apos;,&apos;Admin.Action.user&apos;).asSequence().last()).lowerCase()</attribute>
        </attributes>
      </variable>
      <variable name="stage_contraindicated_carotid_intima" valueType="integer" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">$group(&apos;clsa-dcs.Participants:Admin.StageInstance.stage&apos;,&apos;CarotidIntima&apos;,
&apos;Admin.StageInstance.lastState&apos;).any(&apos;Contraindicated&apos;,&apos;NotApplicable&apos;).value() 
? 1 : 0</attribute>
        </attributes>
      </variable>
      <variable name="stage_skip_carotid_intima" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">var action=$group(&apos;Admin.Action.stage&apos;,&apos;CarotidIntima&apos;,&apos;Admin.Action.actionType&apos;).asSequence()
var res=$group(&apos;Admin.Action.stage&apos;,&apos;CarotidIntima&apos;,&apos;Admin.Action.eventReason&apos;).asSequence().filter(function(v,i){
  return action.indexOf(&apos;SKIP&apos;)==i
  }).last()
if(res.isNull().not().value()) {
  res=newValue(res.value().slice(14),&apos;text&apos;)  
}
res</attribute>
        </attributes>
      </variable>
      <variable name="data_missing_carotid_intima" valueType="integer" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">$this(&apos;data_qac_carotid_intima&apos;).isNull().and(
  $this(&apos;stage_contraindicated_carotid_intima&apos;).eq(0),
  $this(&apos;stage_skip_carotid_intima&apos;).isNull()
).value() ? 1 : 0</attribute>
        </attributes>
      </variable>
      <variable name="data_qac_carotid_intima" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">var rst=$group(&apos;clsa-dcs-images.CarotidIntima:Measure.SIDE&apos;,&apos;Right&apos;,&apos;Measure.STILL_IMAGE&apos;).asSequence().last()
var rsr=$group(&apos;clsa-dcs-images.CarotidIntima:Measure.SIDE&apos;,&apos;Right&apos;,&apos;Measure.SR&apos;).asSequence().last()
var rc1=$group(&apos;clsa-dcs-images.CarotidIntima:Measure.SIDE&apos;,&apos;Right&apos;,&apos;Measure.CINELOOP_1&apos;).asSequence().last()
var rc2=$group(&apos;clsa-dcs-images.CarotidIntima:Measure.SIDE&apos;,&apos;Right&apos;,&apos;Measure.CINELOOP_2&apos;).asSequence().last()
var rc3=$group(&apos;clsa-dcs-images.CarotidIntima:Measure.SIDE&apos;,&apos;Right&apos;,&apos;Measure.CINELOOP_3&apos;).asSequence().last()
var lst=$group(&apos;clsa-dcs-images.CarotidIntima:Measure.SIDE&apos;,&apos;Left&apos;,&apos;Measure.STILL_IMAGE&apos;).asSequence().last()
var lsr=$group(&apos;clsa-dcs-images.CarotidIntima:Measure.SIDE&apos;,&apos;Left&apos;,&apos;Measure.SR&apos;).asSequence().last()
var lc1=$group(&apos;clsa-dcs-images.CarotidIntima:Measure.SIDE&apos;,&apos;Left&apos;,&apos;Measure.CINELOOP_1&apos;).asSequence().last()
var lc2=$group(&apos;clsa-dcs-images.CarotidIntima:Measure.SIDE&apos;,&apos;Left&apos;,&apos;Measure.CINELOOP_2&apos;).asSequence().last()
var lc3=$group(&apos;clsa-dcs-images.CarotidIntima:Measure.SIDE&apos;,&apos;Left&apos;,&apos;Measure.CINELOOP_3&apos;).asSequence().last()
var res=null
if(!rst.isNull().and(rsr.isNull(),rc1.isNull(),rc2.isNull(),rc3.isNull(),
   lst.isNull(),lsr.isNull(),lc1.isNull(),lc2.isNull(),lc3.isNull()).value()) {
  var str=[]
  str.push(&apos;filesize_left_still:&apos;+(lst.isNull().value()?&apos;0&apos;:lst.length().value()))
  str.push(&apos;filesize_left_sr:&apos;+(lsr.isNull().value()?&apos;0&apos;:lsr.length().value()))
  str.push(&apos;filesize_left_cine_1:&apos;+(lc1.isNull().value()?&apos;0&apos;:lc1.length().value()))
  str.push(&apos;filesize_left_cine_2:&apos;+(lc2.isNull().value()?&apos;0&apos;:lc2.length().value()))
  str.push(&apos;filesize_left_cine_3:&apos;+(lc3.isNull().value()?&apos;0&apos;:lc3.length().value()))
  str.push(&apos;filesize_right_still:&apos;+(rst.isNull().value()?&apos;0&apos;:rst.length().value()))
  str.push(&apos;filesize_right_sr:&apos;+(rsr.isNull().value()?&apos;0&apos;:rsr.length().value()))
  str.push(&apos;filesize_right_cine_1:&apos;+(rc1.isNull().value()?&apos;0&apos;:rc1.length().value()))
  str.push(&apos;filesize_right_cine_2:&apos;+(rc2.isNull().value()?&apos;0&apos;:rc2.length().value()))
  str.push(&apos;filesize_right_cine_3:&apos;+(rc3.isNull().value()?&apos;0&apos;:rc3.length().value()))
  res=newValue(&apos;{&apos;+str.join(&apos;,&apos;)+&apos;}&apos;,&apos;text&apos;)
}
res</attribute>
        </attributes>
      </variable>
      <variable name="stage_technician_tug" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">$(&apos;clsa-dcs.TUG:QuestionnaireRun.user&apos;).whenNull(
  $group(&apos;Admin.Action.stage&apos;,&apos;TUG&apos;,&apos;Admin.Action.user&apos;).asSequence().last()).lowerCase()</attribute>
        </attributes>
      </variable>
      <variable name="stage_contraindicated_tug" valueType="integer" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">$group(&apos;clsa-dcs.Participants:Admin.StageInstance.stage&apos;,&apos;TUG&apos;,
&apos;Admin.StageInstance.lastState&apos;).any(&apos;Contraindicated&apos;,&apos;NotApplicable&apos;).value() 
? 1 : 0</attribute>
        </attributes>
      </variable>
      <variable name="stage_skip_tug" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">var action=$group(&apos;Admin.Action.stage&apos;,&apos;TUG&apos;,&apos;Admin.Action.actionType&apos;).asSequence()
var res=$group(&apos;Admin.Action.stage&apos;,&apos;TUG&apos;,&apos;Admin.Action.eventReason&apos;).asSequence().filter(function(v,i){
  return action.indexOf(&apos;SKIP&apos;)==i
  }).last()
if(res.isNull().not().value()) {
  res=newValue(res.value().slice(14),&apos;text&apos;)  
}
res</attribute>
        </attributes>
      </variable>
      <variable name="data_missing_tug" valueType="integer" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">$this(&apos;data_qac_tug&apos;).isNull().and(
  $this(&apos;stage_contraindicated_tug&apos;).eq(0),
  $this(&apos;stage_skip_tug&apos;).isNull()
).value() ? 1 : 0</attribute>
        </attributes>
      </variable>
      <variable name="data_qac_tug" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">var tt=$(&apos;clsa-dcs.TUG:TUG_TIME&apos;).whenNull($(&apos;clsa-dcs.TUG:TUG_TIME_2&apos;))
var res=null
if(tt.isNull().not().value()) {
  var wt=$(&apos;clsa-dcs.4mWalk:WLK_TIME&apos;).whenNull($(&apos;clsa-dcs.4mWalk:WLK_TIME_2&apos;))  
  var ct=$(&apos;clsa-dcs.ChairRise:CR_TIME&apos;).whenNull($(&apos;clsa-dcs.ChairRise:CR_TIME_2&apos;))  
  var str = &apos;0&apos;
  if(tt.isNull().not().and(ct.isNull().not()).value()) {
    var cv=ct.div($(&apos;clsa-dcs.ChairRise:CR_NB&apos;).whenNull(1))
    str=Math.round(tt.minus(wt.multiply(1.5).plus(cv)).abs().value())
  }  
  res=newValue(
    &apos;{time:&apos;+tt.round(3).value()+
    &apos;,congruency:&apos;+str+
    &apos;}&apos;,&apos;text&apos;)
}
res</attribute>
        </attributes>
      </variable>
      <variable name="stage_technician_chair_rise" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">$(&apos;clsa-dcs.ChairRise:QuestionnaireRun.user&apos;).whenNull(
  $group(&apos;Admin.Action.stage&apos;,&apos;ChairRise&apos;,&apos;Admin.Action.user&apos;).asSequence().last()).lowerCase()</attribute>
        </attributes>
      </variable>
      <variable name="stage_contraindicated_chair_rise" valueType="integer" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">$group(&apos;clsa-dcs.Participants:Admin.StageInstance.stage&apos;,&apos;ChairRise&apos;,
&apos;Admin.StageInstance.lastState&apos;).any(&apos;Contraindicated&apos;,&apos;NotApplicable&apos;).value() 
? 1 : 0</attribute>
        </attributes>
      </variable>
      <variable name="stage_skip_chair_rise" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">var action=$group(&apos;Admin.Action.stage&apos;,&apos;ChairRise&apos;,&apos;Admin.Action.actionType&apos;).asSequence()
var res=$group(&apos;Admin.Action.stage&apos;,&apos;ChairRise&apos;,&apos;Admin.Action.eventReason&apos;).asSequence().filter(function(v,i){
  return action.indexOf(&apos;SKIP&apos;)==i
  }).last()
if(res.isNull().not().value()) {
  res=newValue(res.value().slice(14),&apos;text&apos;)  
}
res</attribute>
        </attributes>
      </variable>
      <variable name="data_missing_chair_rise" valueType="integer" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">$this(&apos;data_qac_chair_rise&apos;).isNull().and(
  $this(&apos;stage_contraindicated_chair_rise&apos;).eq(0),
  $this(&apos;stage_skip_chair_rise&apos;).isNull()
).value() ? 1 : 0</attribute>
        </attributes>
      </variable>
      <variable name="data_qac_chair_rise" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">var ct=$(&apos;clsa-dcs.ChairRise:CR_TIME&apos;).whenNull($(&apos;clsa-dcs.ChairRise:CR_TIME_2&apos;))  
var res=null
if(ct.isNull().not().value()) {
  var wt=$(&apos;clsa-dcs.4mWalk:WLK_TIME&apos;).whenNull($(&apos;clsa-dcs.4mWalk:WLK_TIME_2&apos;))  
  var tt=$(&apos;clsa-dcs.TUG:TUG_TIME&apos;).whenNull($(&apos;clsa-dcs.TUG:TUG_TIME_2&apos;))  
  var str = &apos;0&apos;
  if(tt.isNull().not().and(ct.isNull().not()).value()) {
    var cv=ct.div($(&apos;clsa-dcs.ChairRise:CR_NB&apos;).whenNull(1))
    str=Math.round(tt.minus(wt.multiply(1.5).plus(cv)).abs().value())
  }  
  res=newValue(
    &apos;{time:&apos;+ct.round(3).value()+
    &apos;,congruency:&apos;+str+
    &apos;}&apos;,&apos;text&apos;)
}
res</attribute>
        </attributes>
      </variable>
      <variable name="stage_technician_hips_waist" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">$(&apos;clsa-dcs.HipsWaist:InstrumentRun.user&apos;).whenNull(
  $group(&apos;Admin.Action.stage&apos;,&apos;HipsWaist&apos;,&apos;Admin.Action.user&apos;).asSequence().last()).lowerCase()</attribute>
        </attributes>
      </variable>
      <variable name="stage_contraindicated_hips_waist" valueType="integer" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">$group(&apos;clsa-dcs.Participants:Admin.StageInstance.stage&apos;,&apos;HipsWaist&apos;,
&apos;Admin.StageInstance.lastState&apos;).any(&apos;Contraindicated&apos;,&apos;NotApplicable&apos;).value() 
? 1 : 0</attribute>
        </attributes>
      </variable>
      <variable name="stage_skip_hips_waist" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">var action=$group(&apos;Admin.Action.stage&apos;,&apos;HipsWaist&apos;,&apos;Admin.Action.actionType&apos;).asSequence()
var res=$group(&apos;Admin.Action.stage&apos;,&apos;HipsWaist&apos;,&apos;Admin.Action.eventReason&apos;).asSequence().filter(function(v,i){
  return action.indexOf(&apos;SKIP&apos;)==i
  }).last()
if(res.isNull().not().value()) {
  res=newValue(res.value().slice(14),&apos;text&apos;)  
}
res</attribute>
        </attributes>
      </variable>
      <variable name="data_missing_hips_waist" valueType="integer" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">$this(&apos;data_qac_hips_waist&apos;).isNull().and(
  $this(&apos;stage_contraindicated_hips_waist&apos;).eq(0),
  $this(&apos;stage_skip_hips_waist&apos;).isNull()
).value() ? 1 : 0</attribute>
        </attributes>
      </variable>
      <variable name="data_qac_hips_waist" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">var i=$(&apos;clsa-dcs.HipsWaist:IV_MEASURE_TAKEN&apos;)
var w=$(&apos;clsa-dcs.HipsWaist:RES_WAIST_SIZE&apos;)
var h=$(&apos;clsa-dcs.HipsWaist:RES_HIPS_SIZE&apos;)
var r=$(&apos;clsa-dcs.HipsWaist:CALC_WAIST_TO_HIP_RATIO&apos;)
var res=null
if(!i.isNull().and(w.isNull(),h.isNull(),r.isNull()).value()) {
  var str=&apos;{iv_type:&apos;+(i.isNull().value()?&apos;NA&apos;:i.value())+&apos;,&apos;
  str+=&apos;size_waist:&apos;+(w.isNull().value()?&apos;0&apos;:w.value())+&apos;,&apos;
  str+=&apos;size_hips:&apos;+(h.isNull().value()?&apos;0&apos;:h.value())+&apos;,&apos;
  str+=&apos;ratio:&apos;+(r.isNull().value()?&apos;0&apos;:r.round(3).value())+&apos;}&apos;
  res=newValue(str,&apos;text&apos;)
}  
res</attribute>
        </attributes>
      </variable>
      <variable name="stage_technician_neuropsychological_battery" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">$(&apos;clsa-dcs.NeuropsychologicalBattery:QuestionnaireRun.user&apos;).whenNull(
  $group(&apos;Admin.Action.stage&apos;,&apos;NeuropsychologicalBattery&apos;,&apos;Admin.Action.user&apos;).asSequence().last()).lowerCase()</attribute>
        </attributes>
      </variable>
      <variable name="stage_contraindicated_neuropsychological_battery" valueType="integer" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">$group(&apos;clsa-dcs.Participants:Admin.StageInstance.stage&apos;,&apos;NeuropsychologicalBattery&apos;,
&apos;Admin.StageInstance.lastState&apos;).any(&apos;Contraindicated&apos;,&apos;NotApplicable&apos;).value() 
? 1 : 0</attribute>
        </attributes>
      </variable>
      <variable name="stage_skip_neuropsychological_battery" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">var action=$group(&apos;Admin.Action.stage&apos;,&apos;NeuropsychologicalBattery&apos;,&apos;Admin.Action.actionType&apos;).asSequence()
var res=$group(&apos;Admin.Action.stage&apos;,&apos;NeuropsychologicalBattery&apos;,&apos;Admin.Action.eventReason&apos;).asSequence().filter(function(v,i){
  return action.indexOf(&apos;SKIP&apos;)==i
  }).last()
if(res.isNull().not().value()) {
  res=newValue(res.value().slice(14),&apos;text&apos;)
}
res</attribute>
        </attributes>
      </variable>
      <variable name="data_missing_neuropsychological_battery" valueType="integer" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">$this(&apos;data_qac_neuropsychological_battery&apos;).isNull().and(
  $this(&apos;stage_contraindicated_neuropsychological_battery&apos;).eq(0),
  $this(&apos;stage_skip_neuropsychological_battery&apos;).isNull()
).value() ? 1 : 0</attribute>
        </attributes>
      </variable>
      <variable name="data_qac_neuropsychological_battery" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">var stage=&apos;clsa-dcs.NeuropsychologicalBattery:&apos;
var p=$(stage+&apos;QuestionnaireMetric.missingCount&apos;).asSequence()
var q=$(stage+&apos;QuestionnaireMetric.questionCount&apos;).asSequence()
var res=null
if(p.isNull().and(q.isNull()).not().value() &amp;&amp; 0!=q.sum()) {
  var str=[]
  str.push(
    &apos;complete:&apos;+
    Math.round(q.sum().minus(p.sum()).multiply(100).div(q.sum()).value()))

var sections={
&apos;FAS&apos;:[
&apos;FAS_INSTRDY_DCS&apos;,
&apos;FAS_INSTRPT_DCS&apos;,
&apos;FAS_INSTFCTR_DCS&apos;,
&apos;FAS_INSTLST_DCS&apos;,
&apos;FAS_FRECR_DCS&apos;,
&apos;FAS_FCOMP_DCS&apos;,
&apos;FAS_ARECR_DCS&apos;,
&apos;FAS_ACOMP_DCS&apos;,
&apos;FAS_SRECR_DCS&apos;,
&apos;FAS_SCOMP_DCS&apos;],
&apos;SN&apos;:[
&apos;SN_LIVH_DCS&apos;,
&apos;SN_LIVH_M2R_DCS&apos;,
&apos;SN_LIVH_M2S_DCS&apos;,
&apos;SN_LIVH_M2A_DCS&apos;,
&apos;SN_LIVH_M3R_DCS&apos;,
&apos;SN_LIVH_M3S_DCS&apos;,
&apos;SN_LIVH_M3A_DCS&apos;,
&apos;SN_LIVH_M4R_DCS&apos;,
&apos;SN_LIVH_M4S_DCS&apos;,
&apos;SN_LIVH_M4A_DCS&apos;,
&apos;SN_LIVH_M5R_DCS&apos;,
&apos;SN_LIVH_M5S_DCS&apos;,
&apos;SN_LIVH_M5A_DCS&apos;,
&apos;SN_LIVH_M6R_DCS&apos;,
&apos;SN_LIVH_M6S_DCS&apos;,
&apos;SN_LIVH_M6A_DCS&apos;,
&apos;SN_LIVH_M7R_DCS&apos;,
&apos;SN_LIVH_M7S_DCS&apos;,
&apos;SN_LIVH_M7A_DCS&apos;,
&apos;SN_LIVH_M8R_DCS&apos;,
&apos;SN_LIVH_M8S_DCS&apos;,
&apos;SN_LIVH_M8A_DCS&apos;,
&apos;SN_LIVH_M9R_DCS&apos;,
&apos;SN_LIVH_M9S_DCS&apos;,
&apos;SN_LIVH_M9A_DCS&apos;,
&apos;SN_LIVH_M10R_DCS&apos;,
&apos;SN_LIVH_M10S_DCS&apos;,
&apos;SN_LIVH_M10A_DCS&apos;,
&apos;SN_CHILD_DCS&apos;,
&apos;SN_CHILDBIO_DCS&apos;,
&apos;SN_CHILDADP_DCS&apos;,
&apos;SN_CHILDSTP_DCS&apos;,
&apos;SN_CHILDPR_DCS&apos;,
&apos;SN_CHILDSTPPR_DCS&apos;,
&apos;SN_DGHTRLIV_DCS&apos;,
&apos;SN_SONLIV_DCS&apos;,
&apos;SN_SEECHILD_DCS&apos;,
&apos;SN_SIBLIV_DCS&apos;,
&apos;SN_SEESIB_DCS&apos;,
&apos;SN_RELLIV_DCS&apos;,
&apos;SN_SEEREL_DCS&apos;,
&apos;SN_FRND_DCS&apos;,
&apos;SN_SEEFRND_DCS&apos;,
&apos;SN_NEIBR_DCS&apos;,
&apos;SN_SEENEIBR_DCS&apos;,
&apos;SN_PERWSCH_DCS&apos;,
&apos;SN_PERCOM_DCS&apos;,
&apos;SN_PERACT_DCS&apos;],
&apos;SPA&apos;:[
&apos;SPA_SOAC_DCS&apos;,
&apos;SPA_OUTS_DCS&apos;,
&apos;SPA_CHRCH_DCS&apos;,
&apos;SPA_SPORT_DCS&apos;,
&apos;SPA_EDUC_DCS&apos;,
&apos;SPA_CLUB_DCS&apos;,
&apos;SPA_NEIBR_DCS&apos;,
&apos;SPA_VOLUN_DCS&apos;,
&apos;SPA_OTACT_DCS&apos;,
&apos;SPA_MORAC_DCS&apos;,
&apos;SPA_PREVAC_DCS&apos;],
&apos;SSA&apos;:[
&apos;SSA_CONFBED_DCS&apos;,
&apos;SSA_NDTLK_DCS&apos;,
&apos;SSA_CRISIS_DCS&apos;,
&apos;SSA_TYTDR_DCS&apos;,
&apos;SSA_SHLOV_DCS&apos;,
&apos;SSA_GOODT_DCS&apos;,
&apos;SSA_INFO_DCS&apos;,
&apos;SSA_CONFID_DCS&apos;,
&apos;SSA_HUGS_DCS&apos;,
&apos;SSA_RELAX_DCS&apos;,
&apos;SSA_MEALS_DCS&apos;,
&apos;SSA_ADVCE_DCS&apos;,
&apos;SSA_MINDOFF_DCS&apos;,
&apos;SSA_CHORES_DCS&apos;,
&apos;SSA_SHFEAR_DCS&apos;,
&apos;SSA_SUGG_DCS&apos;,
&apos;SSA_ENJOY_DCS&apos;,
&apos;SSA_PROBLM_DCS&apos;,
&apos;SSA_LOVU_DCS&apos;,
&apos;SSA_PET_DCS&apos;],
&apos;STP&apos;:[
&apos;NEUR_CONSREC_DCS&apos;,
&apos;STP_DOT_DCS&apos;,
&apos;STP_DOTRPT_DCS&apos;,
&apos;STP_DOTFCTR_DCS&apos;,
&apos;STP_DOTLST_DCS&apos;,
&apos;STP_DOTRECR_DCS&apos;,
&apos;STP_DOTTIMEN_DCS&apos;,
&apos;STP_WOR_DCS&apos;,
&apos;STP_WORRPT_DCS&apos;,
&apos;STP_WORFCTR_DCS&apos;,
&apos;STP_WORLST_DCS&apos;,
&apos;STP_WORRECR_DCS&apos;,
&apos;STP_WORTIMEN_DCS&apos;,
&apos;STP_COL_DCS&apos;,
&apos;STP_COLRPT_DCS&apos;,
&apos;STP_COLFCTR_DCS&apos;,
&apos;STP_COLLST_DCS&apos;,
&apos;STP_COLRECR_DCS&apos;,
&apos;STP_COLTIMEN_DCS&apos;]
}

  for(var key in sections) {
    var rcount=0
    var qcount=0
    var arr=sections[key]
    for(var i=0; i&lt;arr.length; i++ ) {
      var j=$(stage+arr[i])
      if(j.isNull().value()) continue
      qcount++      
      rcount+=j.any(&apos;REFUSED&apos;).value()?1:0
    }
    if(0==qcount) {
      str.push(key+&apos;:100&apos;)
    } else {
      var perc=100.0*rcount/qcount      
      if(0&lt;perc &amp;&amp; 100&gt;perc &amp;&amp; 0!=(perc-Math.floor(perc))) {        
        perc=perc.toFixed(3)
      }
      str.push(key+&apos;:&apos;+perc)
    }  
  }

  res=newValue(&apos;{&apos;+str.join(&apos;,&apos;)+&apos;}&apos;,&apos;text&apos;)
}
res  </attribute>
        </attributes>
      </variable>
      <variable name="stage_technician_standing_balance" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">$(&apos;clsa-dcs.StandingBalance:QuestionnaireRun.user&apos;).whenNull(
  $group(&apos;Admin.Action.stage&apos;,&apos;StandingBalance&apos;,&apos;Admin.Action.user&apos;).asSequence().last()).lowerCase()</attribute>
        </attributes>
      </variable>
      <variable name="stage_contraindicated_standing_balance" valueType="integer" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">$group(&apos;clsa-dcs.Participants:Admin.StageInstance.stage&apos;,&apos;StandingBalance&apos;,
&apos;Admin.StageInstance.lastState&apos;).any(&apos;Contraindicated&apos;,&apos;NotApplicable&apos;).value() 
? 1 : 0</attribute>
        </attributes>
      </variable>
      <variable name="stage_skip_standing_balance" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">var action=$group(&apos;Admin.Action.stage&apos;,&apos;StandingBalance&apos;,&apos;Admin.Action.actionType&apos;).asSequence()
var res=$group(&apos;Admin.Action.stage&apos;,&apos;StandingBalance&apos;,&apos;Admin.Action.eventReason&apos;).asSequence().filter(function(v,i){
  return action.indexOf(&apos;SKIP&apos;)==i
  }).last()
if(res.isNull().not().value()) {
  res=newValue(res.value().slice(14),&apos;text&apos;)  
} else {
  var l1=$(&apos;clsa-dcs.StandingBalance:STAND_COMPLETION_LEFT&apos;)  
  var r1=$(&apos;clsa-dcs.StandingBalance:STAND_COMPLETION_RIGHT&apos;)  
  if(l1.any(&apos;NO&apos;).value()) {
    var l2=$(&apos;clsa-dcs.StandingBalance:STAND_UNCOMPLETE_LEFT&apos;).map({
      &apos;TECHNICAL&apos;:&apos;TechnicalProblem&apos;,
      &apos;PARTICIPANT-DECISION&apos;:&apos;ParticipantDecision&apos;,
      &apos;INTERVIEWER-DECISION&apos;:&apos;InterviewerDecision&apos;,
      &apos;OTHER-SPEFICY&apos;:&apos;SeeComment&apos;},null)
    if(l2.isNull().not().value()) {
      res=l2
    }  
  } 
  if (null===res &amp;&amp; r1.any(&apos;NO&apos;).value()) {
    var r2=$(&apos;clsa-dcs.StandingBalance:STAND_UNCOMPLETE_RIGHT&apos;).map({
      &apos;TECHNICAL&apos;:&apos;TechnicalProblem&apos;,
      &apos;PARTICIPANT-DECISION&apos;:&apos;ParticipantDecision&apos;,
      &apos;INTERVIEWER-DECISION&apos;:&apos;InterviewerDecision&apos;,
      &apos;OTHER-SPEFICY&apos;:&apos;SeeComment&apos;},null)
    if(r2.isNull().not().value()) {
      res=r2
    }
  }
}
res</attribute>
        </attributes>
      </variable>
      <variable name="data_missing_standing_balance" valueType="integer" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">$this(&apos;data_qac_standing_balance&apos;).isNull().and(
  $this(&apos;stage_contraindicated_standing_balance&apos;).eq(0),
  $this(&apos;stage_skip_standing_balance&apos;).isNull()
).value() ? 1 : 0</attribute>
        </attributes>
      </variable>
      <variable name="data_qac_standing_balance" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">var b=$(&apos;clsa-dcs.StandingBalance:STAND_BEST&apos;).whenNull($(&apos;clsa-dcs.StandingBalance:STAND_BEST_2&apos;))
var lc =$(&apos;clsa-dcs.StandingBalance:STAND_COMPLETION_LEFT&apos;)
var rc =$(&apos;clsa-dcs.StandingBalance:STAND_COMPLETION_RIGHT&apos;)
var res=null
if(!b.isNull().and(lc.isNull(),rc.isNull()).value()) {
  var str = &apos;{time_best:&apos;
  if(b.isNull().not().value()) {
    str+=b.round(3).value()
  } else  {
    str+=&apos;-1&apos;
  }
  var l=$(&apos;clsa-dcs.StandingBalance:STAND_LEFT_TIME&apos;).whenNull($(&apos;clsa-dcs.StandingBalance:STAND_LEFT_TIME_2&apos;))
  str+=&apos;,time_left:&apos;
  if(l.isNull().not().value()) {
    str+=l.round(3).value()
  } else  {
    str+=&apos;-1&apos;
  }
  var r=$(&apos;clsa-dcs.StandingBalance:STAND_RIGHT_TIME&apos;).whenNull($(&apos;clsa-dcs.StandingBalance:STAND_RIGHT_TIME_2&apos;))
  str+=&apos;,time_right:&apos;
  if(r.isNull().not().value()) {
    str+=r.round(3).value()
  } else  {
    str+=&apos;-1&apos;
  }
  str+=&apos;}&apos;  
  res=newValue(str,&apos;text&apos;)
}
res</attribute>
        </attributes>
      </variable>
      <variable name="stage_technician_four_metre_walk" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">$(&apos;clsa-dcs.4mWalk:QuestionnaireRun.user&apos;).whenNull(
  $group(&apos;Admin.Action.stage&apos;,&apos;4mWalk&apos;,&apos;Admin.Action.user&apos;).asSequence().last()).lowerCase()</attribute>
        </attributes>
      </variable>
      <variable name="stage_contraindicated_four_metre_walk" valueType="integer" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">$group(&apos;clsa-dcs.Participants:Admin.StageInstance.stage&apos;,&apos;4mWalk&apos;,
&apos;Admin.StageInstance.lastState&apos;).any(&apos;Contraindicated&apos;,&apos;NotApplicable&apos;).value() 
? 1 : 0</attribute>
        </attributes>
      </variable>
      <variable name="stage_skip_four_metre_walk" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">var action=$group(&apos;Admin.Action.stage&apos;,&apos;4mWalk&apos;,&apos;Admin.Action.actionType&apos;).asSequence()
var res=$group(&apos;Admin.Action.stage&apos;,&apos;4mWalk&apos;,&apos;Admin.Action.eventReason&apos;).asSequence().filter(function(v,i){
  return action.indexOf(&apos;SKIP&apos;)==i
  }).last()
if(res.isNull().not().value()) {
  res=newValue(res.value().slice(14),&apos;text&apos;)  
}
res</attribute>
        </attributes>
      </variable>
      <variable name="data_missing_four_metre_walk" valueType="integer" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">$this(&apos;data_qac_four_metre_walk&apos;).isNull().and(
  $this(&apos;stage_contraindicated_four_metre_walk&apos;).eq(0),
  $this(&apos;stage_skip_four_metre_walk&apos;).isNull()
).value() ? 1 : 0</attribute>
        </attributes>
      </variable>
      <variable name="data_qac_four_metre_walk" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">var wt=$(&apos;clsa-dcs.4mWalk:WLK_TIME&apos;).whenNull($(&apos;clsa-dcs.4mWalk:WLK_TIME_2&apos;))
var res=null
if(wt.isNull().not().value()) {
  var tt=$(&apos;clsa-dcs.TUG:TUG_TIME&apos;).whenNull($(&apos;clsa-dcs.TUG:TUG_TIME_2&apos;))
  var ct=$(&apos;clsa-dcs.ChairRise:CR_TIME&apos;).whenNull($(&apos;clsa-dcs.ChairRise:CR_TIME_2&apos;))  
  var str = &apos;0&apos;
  if(tt.isNull().not().and(ct.isNull().not()).value()) {
    var cv=ct.div($(&apos;clsa-dcs.ChairRise:CR_NB&apos;).whenNull(1))
    str=Math.round(tt.minus(wt.multiply(1.5).plus(cv)).abs().value())
  }  
  res=newValue(
    &apos;{time:&apos;+wt.round(3).value()+
    &apos;,congruency:&apos;+str+
    &apos;}&apos;,&apos;text&apos;)
}
res</attribute>
        </attributes>
      </variable>
      <variable name="stage_technician_sitting_height" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">$(&apos;clsa-dcs.SittingHeight:InstrumentRun.user&apos;).whenNull(
  $group(&apos;Admin.Action.stage&apos;,&apos;SittingHeight&apos;,&apos;Admin.Action.user&apos;).asSequence().last()).lowerCase()</attribute>
        </attributes>
      </variable>
      <variable name="stage_contraindicated_sitting_height" valueType="integer" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">$group(&apos;clsa-dcs.Participants:Admin.StageInstance.stage&apos;,&apos;SittingHeight&apos;,
&apos;Admin.StageInstance.lastState&apos;).any(&apos;Contraindicated&apos;,&apos;NotApplicable&apos;).value() 
? 1 : 0</attribute>
        </attributes>
      </variable>
      <variable name="stage_skip_sitting_height" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">var action=$group(&apos;Admin.Action.stage&apos;,&apos;SittingHeight&apos;,&apos;Admin.Action.actionType&apos;).asSequence()
var res=$group(&apos;Admin.Action.stage&apos;,&apos;SittingHeight&apos;,&apos;Admin.Action.eventReason&apos;).asSequence().filter(function(v,i){
  return action.indexOf(&apos;SKIP&apos;)==i
  }).last()
if(res.isNull().not().value()) {
  res=newValue(res.value().slice(14),&apos;text&apos;)
}
res</attribute>
        </attributes>
      </variable>
      <variable name="data_missing_sitting_height" valueType="integer" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">$this(&apos;data_qac_sitting_height&apos;).isNull().and(
  $this(&apos;stage_contraindicated_sitting_height&apos;).eq(0),
  $this(&apos;stage_skip_sitting_height&apos;).isNull()
).value() ? 1 : 0</attribute>
        </attributes>
      </variable>
      <variable name="data_qac_sitting_height" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">var res=$(&apos;clsa-dcs.SittingHeight:Measure.RES_SIT_HEIGHT_MEASURE&apos;)
if(res.size().gt(1).value()){
  res=newValue(&apos;{stddev:&apos;+res.stddev().round(6).value()+&apos;,size:&apos;+res.size().value()+&apos;}&apos;,&apos;text&apos;)
} else if(res.size().eq(1).value()) {
  res=newValue(&apos;{stddev:0,size:1}&apos;,&apos;text&apos;)
} 
res</attribute>
        </attributes>
      </variable>
      <variable name="stage_technician_vision_acuity" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">$(&apos;clsa-dcs.VisionAcuity:QuestionnaireRun.user&apos;).whenNull(
  $group(&apos;Admin.Action.stage&apos;,&apos;VisionAcuity&apos;,&apos;Admin.Action.user&apos;).asSequence().last()).lowerCase()</attribute>
        </attributes>
      </variable>
      <variable name="stage_contraindicated_vision_acuity" valueType="integer" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">$group(&apos;clsa-dcs.Participants:Admin.StageInstance.stage&apos;,&apos;VisionAcuity&apos;,
&apos;Admin.StageInstance.lastState&apos;).any(&apos;Contraindicated&apos;,&apos;NotApplicable&apos;).value() 
? 1 : 0</attribute>
        </attributes>
      </variable>
      <variable name="stage_skip_vision_acuity" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">var action=$group(&apos;Admin.Action.stage&apos;,&apos;VisionAcuity&apos;,&apos;Admin.Action.actionType&apos;).asSequence()
var res=$group(&apos;Admin.Action.stage&apos;,&apos;VisionAcuity&apos;,&apos;Admin.Action.eventReason&apos;).asSequence().filter(function(v,i){
  return action.indexOf(&apos;SKIP&apos;)==i
  }).last()
if(res.isNull().not().value()) {
  res=newValue(res.value().slice(14),&apos;text&apos;)  
} else {
  var tests=[&apos;DONE_VA&apos;,&apos;DONE_BOTH_VA&apos;,&apos;DONE_LEFT_VA&apos;,&apos;DONE_RIGHT_VA&apos;,&apos;DONE_LEFT_PO_VA&apos;,&apos;DONE_RIGHT_PO_VA&apos;]
  var reasons=[&apos;DONE_RSN_VA&apos;,&apos;DONE_RSN_BOTH_VA&apos;,&apos;DONE_RSN_LEFT_VA&apos;,&apos;DONE_RSN_RIGHT_VA&apos;,&apos;DONE_RSN_LEFT_PO_VA&apos;,&apos;DONE_RSN_RIGHT_PO_VA&apos;]
  for(var i=0;i&lt;tests.length;i++) {
    var t=$(&apos;clsa-dcs.VisionAcuity:&apos;+tests[i])
    if(t.any(&apos;NO&apos;).value()) {
      var r=$(&apos;clsa-dcs.VisionAcuity:&apos;+reasons[i]).map({
      &apos;TECHNICAL-PROBLEM&apos;:&apos;TechnicalProblem&apos;,
      &apos;PARTICIPANT-DECISION&apos;:&apos;ParticipantDecision&apos;,
      &apos;INTERVIEWER-DECISION&apos;:&apos;InterviewerDecision&apos;,
      &apos;OTHER&apos;:&apos;SeeComment&apos;},null)
      if(r.isNull().not().value()) {
        res=r
        break
      }
    }
  }  
}
res</attribute>
        </attributes>
      </variable>
      <variable name="data_missing_vision_acuity" valueType="integer" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">$this(&apos;data_qac_vision_acuity&apos;).isNull().and(
  $this(&apos;stage_contraindicated_vision_acuity&apos;).eq(0),
  $this(&apos;stage_skip_vision_acuity&apos;).isNull()
).value() ? 1 : 0</attribute>
        </attributes>
      </variable>
      <variable name="data_qac_vision_acuity" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">var count = {RIGHT:0,LEFT:0}
var rtests=[&apos;DONE_RIGHT_VA&apos;,&apos;DONE_RIGHT_PO_VA&apos;]
var ltests=[&apos;DONE_LEFT_VA&apos;,&apos;DONE_LEFT_PO_VA&apos;]
var n=0
for(var i=0;i&lt;2;i++) {
  var t=$(&apos;clsa-dcs.VisionAcuity:&apos;+rtests[i])
  if(t.isNull().value()) {
    n++
  } else if(t.any(&apos;YES&apos;).value()) {
    count[&apos;RIGHT&apos;]++
  }
  t=$(&apos;clsa-dcs.VisionAcuity:&apos;+ltests[i])
  if(t.isNull().value()) {
    n++
  } else if(t.any(&apos;YES&apos;).value()) {
    count[&apos;LEFT&apos;]++
  }
}
var res=null
if(4!=n) {
  res=newValue(
    &apos;{left_test:&apos;+count[&apos;LEFT&apos;]+
    &apos;,right_test:&apos;+count[&apos;RIGHT&apos;]+
    &apos;}&apos;,&apos;text&apos;)
}
res</attribute>
        </attributes>
      </variable>
      <variable name="stage_contraindicated_consent" valueType="integer" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">$group(&apos;clsa-dcs.Participants:Admin.StageInstance.stage&apos;,&apos;Consent&apos;,
&apos;Admin.StageInstance.lastState&apos;).any(&apos;Contraindicated&apos;,&apos;NotApplicable&apos;).value() 
? 1 : 0</attribute>
        </attributes>
      </variable>
      <variable name="data_missing_consent" valueType="integer" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">$this(&apos;data_qac_consent&apos;).isNull().and(
  $this(&apos;stage_contraindicated_consent&apos;).eq(0),
  $this(&apos;stage_skip_consent&apos;).isNull()
).value() ? 1 : 0</attribute>
        </attributes>
      </variable>
      <variable name="data_qac_consent" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">var m=$(&apos;clsa-dcs.Consent:mode&apos;)
var a=$(&apos;clsa-dcs.Consent:accepted&apos;)
var res=null
if(m.isNull().and(a.isNull()).not().value()) {
  res=newValue(
    &apos;{mode:&apos;+m.lowerCase().value()+
    &apos;,accepted:&apos;+(a.value()?1:0)+
    &apos;}&apos;,&apos;text&apos;)
}
res</attribute>
        </attributes>
      </variable>
      <variable name="stage_technician_consent" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">$group(&apos;Admin.Action.stage&apos;,&apos;Consent&apos;,&apos;Admin.Action.user&apos;).asSequence().last().lowerCase()</attribute>
        </attributes>
      </variable>
      <variable name="stage_skip_consent" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">var action=$group(&apos;Admin.Action.stage&apos;,&apos;Consent&apos;,&apos;Admin.Action.actionType&apos;).asSequence()
var res=$group(&apos;Admin.Action.stage&apos;,&apos;Consent&apos;,&apos;Admin.Action.eventReason&apos;).asSequence().filter(function(v,i){
  return action.indexOf(&apos;SKIP&apos;)==i
  }).last()
if(res.isNull().not().value()) {
  res=newValue(res.value().slice(14),&apos;text&apos;)  
}
res</attribute>
        </attributes>
      </variable>
      <variable name="stage_technician_contraindications" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">$(&apos;clsa-dcs.ContraIndications:QuestionnaireRun.user&apos;).whenNull(
  $group(&apos;Admin.Action.stage&apos;,&apos;ContraIndications&apos;,&apos;Admin.Action.user&apos;).asSequence().last()).lowerCase()</attribute>
        </attributes>
      </variable>
      <variable name="stage_skip_contraindications" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">var action=$group(&apos;Admin.Action.stage&apos;,&apos;ContraIndications&apos;,&apos;Admin.Action.actionType&apos;).asSequence()
var res=$group(&apos;Admin.Action.stage&apos;,&apos;ContraIndications&apos;,&apos;Admin.Action.eventReason&apos;).asSequence().filter(function(v,i){
  return action.indexOf(&apos;SKIP&apos;)==i
  }).last()
if(res.isNull().not().value()) {
  res=newValue(res.value().slice(14),&apos;text&apos;)  
}
res</attribute>
        </attributes>
      </variable>
      <variable name="stage_contraindicated_contraindications" valueType="integer" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">$group(&apos;clsa-dcs.Participants:Admin.StageInstance.stage&apos;,&apos;ContraIndications&apos;,
&apos;Admin.StageInstance.lastState&apos;).any(&apos;Contraindicated&apos;,&apos;NotApplicable&apos;).value() 
? 1 : 0</attribute>
        </attributes>
      </variable>
      <variable name="data_qac_contraindications" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">var stage=&apos;clsa-dcs.ContraIndications:&apos;
var p=$(stage+&apos;QuestionnaireMetric.missingCount&apos;).asSequence()
var q=$(stage+&apos;QuestionnaireMetric.questionCount&apos;).asSequence()
var res=null
if(p.isNull().and(q.isNull()).not().value() &amp;&amp; 0!=q.sum()) {
  var str=[]
  str.push(
    &apos;complete:&apos;+
    Math.round(q.sum().minus(p.sum()).multiply(100).div(q.sum()).value()))

var sections={
&apos;QAH_COM&apos;:[
&apos;QAH_INT1_COM&apos;,
&apos;QAH_INTIME_COM&apos;,
&apos;QAH_TWOVIS_COM&apos;,
&apos;QAH_18mo_COM&apos;,
&apos;QAH_INSAS_COM&apos;,
&apos;QAH_INKNO_COM&apos;,
&apos;QAH_FRIEND_COM&apos;,
&apos;QAH_INMED_COM&apos;,
&apos;QAH_HIN_COM&apos;,
&apos;QAH_INMEM_COM&apos;,
&apos;QAH_COM_COM&apos;],
&apos;ICQ_COM&apos;:[
&apos;ICQ_DOMHAND_COM&apos;,
&apos;ICQ_HNDSWL_COM&apos;,
&apos;ICQ_HNDCST_COM&apos;,
&apos;ICQ_HNDHMT_COM&apos;,
&apos;ICQ_ARMSWL_COM&apos;,
&apos;ICQ_ARMCST_COM&apos;,
&apos;ICQ_LEGSWL_COM&apos;,
&apos;ICQ_LEGCST_COM&apos;,
&apos;ICQ_SRG3MO_COM&apos;,
&apos;ICQ_SRGYARM_COM&apos;,
&apos;ICQ_SRGYCHT_COM&apos;,
&apos;ICQ_SRGYHND_COM&apos;,
&apos;ICQ_SRGYART_COM&apos;,
&apos;ICQ_SRGYEYE_COM&apos;,
&apos;ICQ_SRGYABD_COM&apos;,
&apos;ICQ_SRGYHRT_COM&apos;,
&apos;ICQ_SRGYOT_COM&apos;,
&apos;ICQ_SRGYOTSPE_COM&apos;,
&apos;ICQ_PAINHND_COM&apos;,
&apos;ICQ_RISEASSI_COM&apos;,
&apos;ICQ_RISECANE_COM&apos;,
&apos;ICQ_ABLESTND_COM&apos;,
&apos;ICQ_ABLEWLK_COM&apos;,
&apos;ICQ_PREGNT_COM&apos;,
&apos;ICQ_PREGNTWK_COM&apos;,
&apos;ICQ_ILLLUNG_COM&apos;,
&apos;ICQ_HRTCOND_COM&apos;,
&apos;ICQ_EMB6WK_COM&apos;,
&apos;ICQ_EMBMED_COM&apos;,
&apos;ICQ_DERET3MO_COM&apos;,
&apos;ICQ_EYEINF_COM&apos;,
&apos;ICQ_EARINF_COM&apos;,
&apos;ICQ_CATRCT_COM&apos;,
&apos;ICQ_CATRCT2_COM&apos;,
&apos;ICQ_GLAUC_COM&apos;,
&apos;ICQ_HRAID_COM&apos;,
&apos;ICQ_HRAID2_COM&apos;,
&apos;ICQ_HRWORKING_COM&apos;,
&apos;ICQ_GLASSES2_COM&apos;,
&apos;ICQ_CTLENS2_COM&apos;,
&apos;ICQ_GLASSES_COM&apos;,
&apos;ICQ_CTLENS_COM&apos;,
&apos;ICQ_PROSLIM_COM&apos;,
&apos;ICQ_PROSARM_COM&apos;,
&apos;ICQ_PROSLEG_COM&apos;,
&apos;ICQ_PROSHND_COM&apos;,
&apos;ICQ_PROSFT_COM&apos;,
&apos;ICQ_PROSHIP_COM&apos;,
&apos;ICQ_PROSKNEE_COM&apos;,
&apos;ICQ_FX_COM&apos;,
&apos;ICQ_FXARM_COM&apos;,
&apos;ICQ_FXSHLD_COM&apos;,
&apos;ICQ_FXHND_COM&apos;,
&apos;ICQ_FXRIB_COM&apos;,
&apos;ICQ_FXLEG_COM&apos;,
&apos;ICQ_FXANK_COM&apos;,
&apos;ICQ_FXFT_COM&apos;,
&apos;ICQ_FXHIP_COM&apos;,
&apos;ICQ_FXKNEE_COM&apos;,
&apos;ICQ_FXCHK_COM&apos;,
&apos;ICQ_FXJAW_COM&apos;,
&apos;ICQ_FXNOSE_COM&apos;,
&apos;ICQ_FXSKL_COM&apos;,
&apos;ICQ_FXNECK_COM&apos;,
&apos;ICQ_FXBACK_COM&apos;,
&apos;ICQ_FXCOLLR_COM&apos;,
&apos;ICQ_FXPELV_COM&apos;,
&apos;ICQ_LAMIN_COM&apos;,
&apos;ICQ_POLIO_COM&apos;,
&apos;ICQ_BLDSP3MO_COM&apos;,
&apos;ICQ_ANEURY_COM&apos;,
&apos;ICQ_PACEMKR_COM&apos;,
&apos;ICQ_DEFIBR_COM&apos;,
&apos;ICQ_COCHLIMP_COM&apos;,
&apos;ICQ_NGTUBE_COM&apos;,
&apos;ICQ_ABDTUBE_COM&apos;,
&apos;ICQ_CHEMO4WK_COM&apos;,
&apos;ICQ_HAEMO_COM&apos;,
&apos;ICQ_BLDTR24H_COM&apos;,
&apos;ICQ_NUCLMED_COM&apos;,
&apos;ICQ_NUCLMED_48H_COM&apos;,
&apos;ICQ_NUCLMED_TEST_Q_COM&apos;,
&apos;ICQ_NUCLMED_IV24H_COM&apos;,
&apos;ICQ_BARSWAL_COM&apos;,
&apos;ICQ_TINNIT_COM&apos;,
&apos;ICQ_SMOKE_COM&apos;,
&apos;ICQ_SMOKETIME_COM&apos;,
&apos;ICQ_SMOKETIMEH_COM&apos;,
&apos;ICQ_INHALERLONG_COM&apos;,
&apos;ICQ_INHALERSHORT_COM&apos;]
}

  var skip=[]
  if($(stage+&apos;QuestionnaireRun.version&apos;).any(&apos;2.0&apos;,&apos;2.1&apos;,&apos;2.2&apos;).value()) {
    skip.push(&apos;QAH_COM&apos;)
  }

  for(var key in sections) {
    if(-1!=skip.indexOf(key)) {
      str.push(key+&apos;:0&apos;)
      continue
    }
    var rcount=0
    var qcount=0
    var arr=sections[key]
    for(var i=0; i&lt;arr.length; i++ ) {
      var j=$(stage+arr[i])
      if(j.isNull().value()) continue
      qcount++      
      rcount+=j.any(&apos;REFUSED&apos;).value()?1:0
    }
    if(0==qcount) {
      str.push(key+&apos;:100&apos;)
    } else {
      var perc=100.0*rcount/qcount      
      if(0&lt;perc &amp;&amp; 100&gt;perc &amp;&amp; 0!=(perc-Math.floor(perc))) {        
        perc=perc.toFixed(3)
      }
      str.push(key+&apos;:&apos;+perc)
    }  
  }

  res=newValue(&apos;{&apos;+str.join(&apos;,&apos;)+&apos;}&apos;,&apos;text&apos;)
}
res  </attribute>
        </attributes>
      </variable>
      <variable name="data_missing_contraindications" valueType="integer" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">$this(&apos;data_qac_contraindications&apos;).isNull().and(
  $this(&apos;stage_contraindicated_contraindications&apos;).eq(0),
  $this(&apos;stage_skip_contraindications&apos;).isNull()
).value() ? 1 : 0</attribute>
        </attributes>
      </variable>
      <variable name="stage_technician_event_pmt" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">$(&apos;clsa-dcs.EventPMT:QuestionnaireRun.user&apos;).whenNull(
  $group(&apos;Admin.Action.stage&apos;,&apos;EventPMT&apos;,&apos;Admin.Action.user&apos;).asSequence().last()).lowerCase()</attribute>
        </attributes>
      </variable>
      <variable name="stage_skip_event_pmt" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">var action=$group(&apos;Admin.Action.stage&apos;,&apos;EventPMT&apos;,&apos;Admin.Action.actionType&apos;).asSequence()
var res=$group(&apos;Admin.Action.stage&apos;,&apos;EventPMT&apos;,&apos;Admin.Action.eventReason&apos;).asSequence().filter(function(v,i){
  return action.indexOf(&apos;SKIP&apos;)==i
  }).last()
if(res.isNull().not().value()) {
  res=newValue(res.value().slice(14),&apos;text&apos;)  
}
res</attribute>
        </attributes>
      </variable>
      <variable name="stage_contraindicated_event_pmt" valueType="integer" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">$group(&apos;clsa-dcs.Participants:Admin.StageInstance.stage&apos;,&apos;EventPMT&apos;,
&apos;Admin.StageInstance.lastState&apos;).any(&apos;Contraindicated&apos;,&apos;NotApplicable&apos;).value() 
? 1 : 0</attribute>
        </attributes>
      </variable>
      <variable name="data_qac_event_pmt" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">var stage=&apos;clsa-dcs.EventPMT:&apos;
var p=$(stage+&apos;QuestionnaireMetric.missingCount&apos;).asSequence()
var q=$(stage+&apos;QuestionnaireMetric.questionCount&apos;).asSequence()
var res=null
if(p.isNull().and(q.isNull()).not().value() &amp;&amp; 0!=q.sum()) {
  var str=[]
  str.push(
    &apos;complete:&apos;+
    Math.round(q.sum().minus(p.sum()).multiply(100).div(q.sum()).value()))

var sections={
&apos;PMT&apos;:[
&apos;PMT_ABLE_DCS&apos;,
&apos;PMT_FCT_DCS&apos;,
&apos;PMT_TIM_DCS&apos;,
&apos;PMT_NOCUE_DCS&apos;,
&apos;PMT_ENV_DCS&apos;,
&apos;PMT_ENV_OBS_DCS&apos;,
&apos;PMT_MONEY_DCS&apos;,
&apos;PMT_MONEY_OBS_DCS&apos;,
&apos;PMT_ITP_DCS&apos;,
&apos;PMT_ACR_DCS&apos;,
&apos;PMT_REM_DCS&apos;]
}

  for(var key in sections) {
    var rcount=0
    var qcount=0
    var arr=sections[key]
    for(var i=0; i&lt;arr.length; i++ ) {
      var j=$(stage+arr[i])
      if(j.isNull().value()) continue
      qcount++      
      rcount+=j.any(&apos;REFUSED&apos;).value()?1:0
    }
    if(0==qcount) {
      str.push(key+&apos;:100&apos;)
    } else {
      var perc=100.0*rcount/qcount      
      if(0&lt;perc &amp;&amp; 100&gt;perc &amp;&amp; 0!=(perc-Math.floor(perc))) {        
        perc=perc.toFixed(3)
      }
      str.push(key+&apos;:&apos;+perc)
    }  
  }

  res=newValue(&apos;{&apos;+str.join(&apos;,&apos;)+&apos;}&apos;,&apos;text&apos;)
}
res</attribute>
        </attributes>
      </variable>
      <variable name="data_missing_event_pmt" valueType="integer" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">$this(&apos;data_qac_event_pmt&apos;).isNull().and(
  $this(&apos;stage_contraindicated_event_pmt&apos;).eq(0),
  $this(&apos;stage_skip_event_pmt&apos;).isNull()
).value() ? 1 : 0</attribute>
        </attributes>
      </variable>
      <variable name="stage_technician_disease_symptoms" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">$(&apos;clsa-dcs.DiseaseSymptoms:QuestionnaireRun.user&apos;).whenNull(
  $group(&apos;Admin.Action.stage&apos;,&apos;DiseaseSymptoms&apos;,&apos;Admin.Action.user&apos;).asSequence().last()).lowerCase()</attribute>
        </attributes>
      </variable>
      <variable name="stage_skip_disease_symptoms" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">var action=$group(&apos;Admin.Action.stage&apos;,&apos;DiseaseSymptoms&apos;,&apos;Admin.Action.actionType&apos;).asSequence()
var res=$group(&apos;Admin.Action.stage&apos;,&apos;DiseaseSymptoms&apos;,&apos;Admin.Action.eventReason&apos;).asSequence().filter(function(v,i){
  return action.indexOf(&apos;SKIP&apos;)==i
  }).last()
if(res.isNull().not().value()) {
  res=newValue(res.value().slice(14),&apos;text&apos;)  
}
res</attribute>
        </attributes>
      </variable>
      <variable name="stage_contraindicated_disease_symptoms" valueType="integer" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">$group(&apos;clsa-dcs.Participants:Admin.StageInstance.stage&apos;,&apos;DiseaseSymptoms&apos;,
&apos;Admin.StageInstance.lastState&apos;).any(&apos;Contraindicated&apos;,&apos;NotApplicable&apos;).value() 
? 1 : 0</attribute>
        </attributes>
      </variable>
      <variable name="data_qac_disease_symptoms" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">var stage=&apos;clsa-dcs.DiseaseSymptoms:&apos;
var p=$(stage+&apos;QuestionnaireMetric.missingCount&apos;).asSequence()
var q=$(stage+&apos;QuestionnaireMetric.questionCount&apos;).asSequence()
var res=null
if(p.isNull().and(q.isNull()).not().value() &amp;&amp; 0!=q.sum()) {
  var str=[]
  str.push(
    &apos;complete:&apos;+
    Math.round(q.sum().minus(p.sum()).multiply(100).div(q.sum()).value()))

var sections={
&apos;CAO&apos;:[
&apos;CCC_ASTHM_DCS&apos;,
&apos;CAO_ASTHMAGE_DCS&apos;,
&apos;CAO_WHEZ_DCS&apos;,
&apos;CAO_SOBFLAT_DCS&apos;,
&apos;CAO_EXERT_DCS&apos;,
&apos;CAO_SOBUP_DCS&apos;,
&apos;CAO_SOBPM_DCS&apos;,
&apos;CAO_WKWHEZ_DCS&apos;,
&apos;CAO_WKCOF_DCS&apos;,
&apos;CAO_WKSOB_DCS&apos;,
&apos;CCC_COPD_DCS&apos;,
&apos;CAO_COPDAGE_DCS&apos;,
&apos;CAO_COLD_DCS&apos;,
&apos;CAO_COFPY_DCS&apos;,
&apos;CAO_COFAM_DCS&apos;,
&apos;CAO_COFMAM_DCS&apos;,
&apos;CAO_PHLEGMPY_DCS&apos;,
&apos;CAO_MED_DCS&apos;,
&apos;CAO_MEDNAME_DCS&apos;,
&apos;CAO_MED_1_DCS&apos;,
&apos;CAO_MED_2_DCS&apos;,
&apos;CAO_MED_3_DCS&apos;,
&apos;CAO_MED_4_DCS&apos;,
&apos;CAO_MED_5_DCS&apos;,
&apos;CAO_MED_6_DCS&apos;,
&apos;CAO_MED_7_DCS&apos;,
&apos;CAO_MED_8_DCS&apos;,
&apos;CAO_MED_9_DCS&apos;,
&apos;CAO_MED_10_DCS&apos;,
&apos;CAO_MED_11_DCS&apos;,
&apos;CAO_MED_12_DCS&apos;,
&apos;CAO_MED_13_DCS&apos;,
&apos;CAO_MED_14_DCS&apos;,
&apos;CAO_MED_15_DCS&apos;,
&apos;CAO_MED_16_DCS&apos;,
&apos;CAO_MED_17_DCS&apos;,
&apos;CAO_MED_18_DCS&apos;,
&apos;CAO_MED_19_DCS&apos;,
&apos;CAO_MED_20_DCS&apos;,
&apos;CAO_MED_21_DCS&apos;,
&apos;CAO_MED_22_DCS&apos;,
&apos;CAO_MED_23_DCS&apos;,
&apos;CAO_MED_24_DCS&apos;,
&apos;CAO_MED_25_DCS&apos;,
&apos;CAO_MED_26_DCS&apos;,
&apos;CAO_MED_27_DCS&apos;,
&apos;CAO_MED_28_DCS&apos;,
&apos;CAO_MED_29_DCS&apos;,
&apos;CAO_MED_30_DCS&apos;,
&apos;CAO_MED_31_DCS&apos;,
&apos;CAO_MED_32_DCS&apos;,
&apos;CAO_MED_33_DCS&apos;,
&apos;CAO_MED_34_DCS&apos;,
&apos;CAO_MED_35_DCS&apos;,
&apos;CAO_MED_36_DCS&apos;,
&apos;CAO_MED_37_DCS&apos;,
&apos;CAO_MED_38_DCS&apos;,
&apos;CAO_MED_39_DCS&apos;,
&apos;CAO_MED_40_DCS&apos;],
&apos;CCC_CANCER&apos;:[
&apos;CCC_CANC_DCS&apos;,
&apos;CCC_CANTP_DCS&apos;],
&apos;CCC_CARDIAC&apos;:[
&apos;CCC_HEART_DCS&apos;,
&apos;CCC_PVD_DCS&apos;],
&apos;CCC_GASTRO&apos;:[
&apos;CCC_ULCR_DCS&apos;,
&apos;CCC_IBDIBS_DCS&apos;,
&apos;CCC_BOWINC_DCS&apos;,
&apos;CCC_URIINC_DCS&apos;],
&apos;CCC_INFECTION&apos;:[
&apos;CCC_DRPNEU_DCS&apos;,
&apos;CCC_DRFLU_DCS&apos;,
&apos;CCC_DRUTI_DCS&apos;,
&apos;CCC_DROT_DCS&apos;,
&apos;CCC_DROTSP_DCS&apos;],
&apos;CCC_MENTAL&apos;:[
&apos;CCC_ANXI_DCS&apos;,
&apos;CCC_MOOD_DCS&apos;],
&apos;CCC_NEURO&apos;:[
&apos;CCC_MEMPB_DCS&apos;,
&apos;CCC_ALZH_DCS&apos;,
&apos;CCC_MS_DCS&apos;,
&apos;CCC_EPIL_DCS&apos;,
&apos;CCC_MGRN_DCS&apos;],
&apos;CCC_OTHER&apos;:[
&apos;CCC_ALLRG_DCS&apos;,
&apos;CCC_BCKP_DCS&apos;,
&apos;CCC_KIDN_DCS&apos;,
&apos;CCC_DITYP_DCS&apos;,
&apos;CCC_DITIM_DCS&apos;,
&apos;CCC_OTCCC_DCS&apos;],
&apos;CCC_VISION&apos;:[
&apos;CCC_MACDEG_DCS&apos;],
&apos;DEP&apos;:[
&apos;DEP_BOTR_DCS&apos;,
&apos;DEP_MIND_DCS&apos;,
&apos;DEP_FLDP_DCS&apos;,
&apos;DEP_FFRT_DCS&apos;,
&apos;DEP_HPFL_DCS&apos;,
&apos;DEP_FRFL_DCS&apos;,
&apos;DEP_RSTLS_DCS&apos;,
&apos;DEP_HAPP_DCS&apos;,
&apos;DEP_LONLY_DCS&apos;,
&apos;DEP_GTGO_DCS&apos;],
&apos;DIA&apos;:[
&apos;DIA_DIAB_DCS&apos;,
&apos;DIA_TYPE_DCS&apos;,
&apos;DIA_AGE_DCS&apos;,
&apos;DIA_EVPRG_DCS&apos;,
&apos;DIA_PRGDIA_DCS&apos;,
&apos;DIA_MED_DCS&apos;,
&apos;DIA_MEDNAME_DCS&apos;,
&apos;DIA_MEDINSNAME_DCS&apos;,
&apos;DIA_MED_1_DCS&apos;,
&apos;DIA_MED_2_DCS&apos;,
&apos;DIA_MED_3_DCS&apos;,
&apos;DIA_MED_4_DCS&apos;,
&apos;DIA_MED_5_DCS&apos;,
&apos;DIA_MED_6_DCS&apos;,
&apos;DIA_MED_7_DCS&apos;,
&apos;DIA_MED_8_DCS&apos;,
&apos;DIA_MED_9_DCS&apos;,
&apos;DIA_MED_10_DCS&apos;,
&apos;DIA_MED_11_DCS&apos;,
&apos;DIA_MED_12_DCS&apos;,
&apos;DIA_MED_13_DCS&apos;,
&apos;DIA_MED_14_DCS&apos;,
&apos;DIA_MED_15_DCS&apos;,
&apos;DIA_MED_16_DCS&apos;,
&apos;DIA_MED_17_DCS&apos;,
&apos;DIA_MED_18_DCS&apos;,
&apos;DIA_MED_19_DCS&apos;,
&apos;DIA_MED_20_DCS&apos;,
&apos;DIA_MED_21_DCS&apos;,
&apos;DIA_MED_22_DCS&apos;,
&apos;DIA_MED_23_DCS&apos;,
&apos;DIA_MED_24_DCS&apos;,
&apos;DIA_MED_25_DCS&apos;,
&apos;DIA_MED_26_DCS&apos;,
&apos;DIA_MED_27_DCS&apos;,
&apos;DIA_MED_28_DCS&apos;,
&apos;DIA_MED_29_DCS&apos;,
&apos;DIA_MED_30_DCS&apos;,
&apos;DIA_MED_31_DCS&apos;,
&apos;DIA_MED_32_DCS&apos;,
&apos;DIA_MED_33_DCS&apos;,
&apos;DIA_MED_34_DCS&apos;,
&apos;DIA_MED_35_DCS&apos;,
&apos;DIA_MED_36_DCS&apos;,
&apos;DIA_MED_37_DCS&apos;,
&apos;DIA_MED_38_DCS&apos;,
&apos;DIA_MED_39_DCS&apos;,
&apos;DIA_MED_40_DCS&apos;,
&apos;DIA_MEDAGE_DCS&apos;],
&apos;DPR&apos;:[
&apos;DPR_CLINDEP_DCS&apos;,
&apos;DPR_AGE_DCS&apos;,
&apos;DPR_MED_DCS&apos;,
&apos;DPR_MEDNAME_DCS&apos;,
&apos;DPR_MED_1_DCS&apos;,
&apos;DPR_MED_2_DCS&apos;,
&apos;DPR_MED_3_DCS&apos;,
&apos;DPR_MED_4_DCS&apos;,
&apos;DPR_MED_5_DCS&apos;,
&apos;DPR_MED_6_DCS&apos;,
&apos;DPR_MED_7_DCS&apos;,
&apos;DPR_MED_8_DCS&apos;,
&apos;DPR_MED_9_DCS&apos;,
&apos;DPR_MED_10_DCS&apos;,
&apos;DPR_MED_11_DCS&apos;,
&apos;DPR_MED_12_DCS&apos;,
&apos;DPR_MED_13_DCS&apos;,
&apos;DPR_MED_14_DCS&apos;,
&apos;DPR_MED_15_DCS&apos;,
&apos;DPR_MED_16_DCS&apos;,
&apos;DPR_MED_17_DCS&apos;,
&apos;DPR_MED_18_DCS&apos;,
&apos;DPR_MED_19_DCS&apos;,
&apos;DPR_MED_20_DCS&apos;,
&apos;DPR_MED_21_DCS&apos;,
&apos;DPR_MED_22_DCS&apos;,
&apos;DPR_MED_23_DCS&apos;,
&apos;DPR_MED_24_DCS&apos;,
&apos;DPR_MED_25_DCS&apos;,
&apos;DPR_MED_26_DCS&apos;,
&apos;DPR_MED_27_DCS&apos;,
&apos;DPR_MED_28_DCS&apos;,
&apos;DPR_MED_29_DCS&apos;,
&apos;DPR_MED_30_DCS&apos;,
&apos;DPR_MED_31_DCS&apos;,
&apos;DPR_MED_32_DCS&apos;,
&apos;DPR_MED_33_DCS&apos;,
&apos;DPR_MED_34_DCS&apos;,
&apos;DPR_MED_35_DCS&apos;,
&apos;DPR_MED_36_DCS&apos;,
&apos;DPR_MED_37_DCS&apos;,
&apos;DPR_MED_38_DCS&apos;,
&apos;DPR_MED_39_DCS&apos;,
&apos;DPR_MED_40_DCS&apos;,
&apos;DPR_OTHMD_DCS&apos;,
&apos;DPR_EVRMED_DCS&apos;],
&apos;HBP&apos;:[
&apos;CCC_HBP_DCS&apos;,
&apos;HBP_AGE_DCS&apos;,
&apos;HBP_PRG_DCS&apos;,
&apos;HBP_OTPRG_DCS&apos;,
&apos;HBP_MED_DCS&apos;,
&apos;HBP_MEDNAME_DCS&apos;,
&apos;HBP_MED_1_DCS&apos;,
&apos;HBP_MED_2_DCS&apos;,
&apos;HBP_MED_3_DCS&apos;,
&apos;HBP_MED_4_DCS&apos;,
&apos;HBP_MED_5_DCS&apos;,
&apos;HBP_MED_6_DCS&apos;,
&apos;HBP_MED_7_DCS&apos;,
&apos;HBP_MED_8_DCS&apos;,
&apos;HBP_MED_9_DCS&apos;,
&apos;HBP_MED_10_DCS&apos;,
&apos;HBP_MED_11_DCS&apos;,
&apos;HBP_MED_12_DCS&apos;,
&apos;HBP_MED_13_DCS&apos;,
&apos;HBP_MED_14_DCS&apos;,
&apos;HBP_MED_15_DCS&apos;,
&apos;HBP_MED_16_DCS&apos;,
&apos;HBP_MED_17_DCS&apos;,
&apos;HBP_MED_18_DCS&apos;,
&apos;HBP_MED_19_DCS&apos;,
&apos;HBP_MED_20_DCS&apos;,
&apos;HBP_MED_21_DCS&apos;,
&apos;HBP_MED_22_DCS&apos;,
&apos;HBP_MED_23_DCS&apos;,
&apos;HBP_MED_24_DCS&apos;,
&apos;HBP_MED_25_DCS&apos;,
&apos;HBP_MED_26_DCS&apos;,
&apos;HBP_MED_27_DCS&apos;,
&apos;HBP_MED_28_DCS&apos;,
&apos;HBP_MED_29_DCS&apos;,
&apos;HBP_MED_30_DCS&apos;,
&apos;HBP_MED_31_DCS&apos;,
&apos;HBP_MED_32_DCS&apos;,
&apos;HBP_MED_33_DCS&apos;,
&apos;HBP_MED_34_DCS&apos;,
&apos;HBP_MED_35_DCS&apos;,
&apos;HBP_MED_36_DCS&apos;,
&apos;HBP_MED_37_DCS&apos;,
&apos;HBP_MED_38_DCS&apos;,
&apos;HBP_MED_39_DCS&apos;,
&apos;HBP_MED_40_DCS&apos;,
&apos;HBP_EVRMED_DCS&apos;,
&apos;HBP_TRT_DCS&apos;,
&apos;HBP_EVTRT_DCS&apos;],
&apos;HYP&apos;:[
&apos;CCC_UTHYR_DCS&apos;,
&apos;HYP_UTHYRAGE_DCS&apos;,
&apos;HYP_UTHYRMED_DCS&apos;,
&apos;HYP_UTHYRMEDNAME_DCS&apos;,
&apos;HYP_UTHYRMED_1_DCS&apos;,
&apos;HYP_UTHYRMED_2_DCS&apos;,
&apos;HYP_UTHYRMED_3_DCS&apos;,
&apos;HYP_UTHYRMED_4_DCS&apos;,
&apos;HYP_UTHYRMED_5_DCS&apos;,
&apos;HYP_UTHYRMED_6_DCS&apos;,
&apos;HYP_UTHYRMED_7_DCS&apos;,
&apos;HYP_UTHYRMED_8_DCS&apos;,
&apos;HYP_UTHYRMED_9_DCS&apos;,
&apos;HYP_UTHYRMED_10_DCS&apos;,
&apos;HYP_UTHYRMED_11_DCS&apos;,
&apos;HYP_UTHYRMED_12_DCS&apos;,
&apos;HYP_UTHYRMED_13_DCS&apos;,
&apos;HYP_UTHYRMED_14_DCS&apos;,
&apos;HYP_UTHYRMED_15_DCS&apos;,
&apos;HYP_UTHYRMED_16_DCS&apos;,
&apos;HYP_UTHYRMED_17_DCS&apos;,
&apos;HYP_UTHYRMED_18_DCS&apos;,
&apos;HYP_UTHYRMED_19_DCS&apos;,
&apos;HYP_UTHYRMED_20_DCS&apos;,
&apos;HYP_UTHYRMED_21_DCS&apos;,
&apos;HYP_UTHYRMED_22_DCS&apos;,
&apos;HYP_UTHYRMED_23_DCS&apos;,
&apos;HYP_UTHYRMED_24_DCS&apos;,
&apos;HYP_UTHYRMED_25_DCS&apos;,
&apos;HYP_UTHYRMED_26_DCS&apos;,
&apos;HYP_UTHYRMED_27_DCS&apos;,
&apos;HYP_UTHYRMED_28_DCS&apos;,
&apos;HYP_UTHYRMED_29_DCS&apos;,
&apos;HYP_UTHYRMED_30_DCS&apos;,
&apos;HYP_UTHYRMED_31_DCS&apos;,
&apos;HYP_UTHYRMED_32_DCS&apos;,
&apos;HYP_UTHYRMED_33_DCS&apos;,
&apos;HYP_UTHYRMED_34_DCS&apos;,
&apos;HYP_UTHYRMED_35_DCS&apos;,
&apos;HYP_UTHYRMED_36_DCS&apos;,
&apos;HYP_UTHYRMED_37_DCS&apos;,
&apos;HYP_UTHYRMED_38_DCS&apos;,
&apos;HYP_UTHYRMED_39_DCS&apos;,
&apos;HYP_UTHYRMED_40_DCS&apos;,
&apos;HYP_UTHYREVRMED_DCS&apos;,
&apos;CCC_OTHYR_DCS&apos;,
&apos;HYP_OTHYRAGE_DCS&apos;,
&apos;HYP_OTHYRMED_DCS&apos;,
&apos;HYP_OTHYRMEDNAME_DCS&apos;,
&apos;HYP_OTHYRMED_1_DCS&apos;,
&apos;HYP_OTHYRMED_2_DCS&apos;,
&apos;HYP_OTHYRMED_3_DCS&apos;,
&apos;HYP_OTHYRMED_4_DCS&apos;,
&apos;HYP_OTHYRMED_5_DCS&apos;,
&apos;HYP_OTHYRMED_6_DCS&apos;,
&apos;HYP_OTHYRMED_7_DCS&apos;,
&apos;HYP_OTHYRMED_8_DCS&apos;,
&apos;HYP_OTHYRMED_9_DCS&apos;,
&apos;HYP_OTHYRMED_10_DCS&apos;,
&apos;HYP_OTHYRMED_11_DCS&apos;,
&apos;HYP_OTHYRMED_12_DCS&apos;,
&apos;HYP_OTHYRMED_13_DCS&apos;,
&apos;HYP_OTHYRMED_14_DCS&apos;,
&apos;HYP_OTHYRMED_15_DCS&apos;,
&apos;HYP_OTHYRMED_16_DCS&apos;,
&apos;HYP_OTHYRMED_17_DCS&apos;,
&apos;HYP_OTHYRMED_18_DCS&apos;,
&apos;HYP_OTHYRMED_19_DCS&apos;,
&apos;HYP_OTHYRMED_20_DCS&apos;,
&apos;HYP_OTHYRMED_21_DCS&apos;,
&apos;HYP_OTHYRMED_22_DCS&apos;,
&apos;HYP_OTHYRMED_23_DCS&apos;,
&apos;HYP_OTHYRMED_24_DCS&apos;,
&apos;HYP_OTHYRMED_25_DCS&apos;,
&apos;HYP_OTHYRMED_26_DCS&apos;,
&apos;HYP_OTHYRMED_27_DCS&apos;,
&apos;HYP_OTHYRMED_28_DCS&apos;,
&apos;HYP_OTHYRMED_29_DCS&apos;,
&apos;HYP_OTHYRMED_30_DCS&apos;,
&apos;HYP_OTHYRMED_31_DCS&apos;,
&apos;HYP_OTHYRMED_32_DCS&apos;,
&apos;HYP_OTHYRMED_33_DCS&apos;,
&apos;HYP_OTHYRMED_34_DCS&apos;,
&apos;HYP_OTHYRMED_35_DCS&apos;,
&apos;HYP_OTHYRMED_36_DCS&apos;,
&apos;HYP_OTHYRMED_37_DCS&apos;,
&apos;HYP_OTHYRMED_38_DCS&apos;,
&apos;HYP_OTHYRMED_39_DCS&apos;,
&apos;HYP_OTHYRMED_40_DCS&apos;,
&apos;HYP_OTHYREVRMD_DCS&apos;],
&apos;IHD&apos;:[
&apos;CCC_ANGI_DCS&apos;,
&apos;IHD_ANGIAGE_DCS&apos;,
&apos;CCC_AMI_DCS&apos;,
&apos;IHD_AMIAGE_DCS&apos;,
&apos;IHD_CAB_DCS&apos;,
&apos;IHD_ANGIO_DCS&apos;,
&apos;IHD_BLOCK_DCS&apos;,
&apos;IHD_MED_DCS&apos;,
&apos;IHD_MEDNAME_DCS&apos;,
&apos;IHD_MED_1_DCS&apos;,
&apos;IHD_MED_2_DCS&apos;,
&apos;IHD_MED_3_DCS&apos;,
&apos;IHD_MED_4_DCS&apos;,
&apos;IHD_MED_5_DCS&apos;,
&apos;IHD_MED_6_DCS&apos;,
&apos;IHD_MED_7_DCS&apos;,
&apos;IHD_MED_8_DCS&apos;,
&apos;IHD_MED_9_DCS&apos;,
&apos;IHD_MED_10_DCS&apos;,
&apos;IHD_MED_11_DCS&apos;,
&apos;IHD_MED_12_DCS&apos;,
&apos;IHD_MED_13_DCS&apos;,
&apos;IHD_MED_14_DCS&apos;,
&apos;IHD_MED_15_DCS&apos;,
&apos;IHD_MED_16_DCS&apos;,
&apos;IHD_MED_17_DCS&apos;,
&apos;IHD_MED_18_DCS&apos;,
&apos;IHD_MED_19_DCS&apos;,
&apos;IHD_MED_20_DCS&apos;,
&apos;IHD_MED_21_DCS&apos;,
&apos;IHD_MED_22_DCS&apos;,
&apos;IHD_MED_23_DCS&apos;,
&apos;IHD_MED_24_DCS&apos;,
&apos;IHD_MED_25_DCS&apos;,
&apos;IHD_MED_26_DCS&apos;,
&apos;IHD_MED_27_DCS&apos;,
&apos;IHD_MED_28_DCS&apos;,
&apos;IHD_MED_29_DCS&apos;,
&apos;IHD_MED_30_DCS&apos;,
&apos;IHD_MED_31_DCS&apos;,
&apos;IHD_MED_32_DCS&apos;,
&apos;IHD_MED_33_DCS&apos;,
&apos;IHD_MED_34_DCS&apos;,
&apos;IHD_MED_35_DCS&apos;,
&apos;IHD_MED_36_DCS&apos;,
&apos;IHD_MED_37_DCS&apos;,
&apos;IHD_MED_38_DCS&apos;,
&apos;IHD_MED_39_DCS&apos;,
&apos;IHD_MED_40_DCS&apos;,
&apos;IHD_EVRMED_DCS&apos;],
&apos;OAR&apos;:[
&apos;CCC_RA_DCS&apos;,
&apos;CCC_ARTOT_DCS&apos;,
&apos;OAR_AGE_DCS&apos;,
&apos;OAR_MED_DCS&apos;,
&apos;OAR_MEDOT_DCS&apos;],
&apos;OSA&apos;:[
&apos;CCC_OAHAND_DCS&apos;,
&apos;OSA_AGE_DCS&apos;,
&apos;OSA_LGJNT_DCS&apos;,
&apos;OSA_NBFNG_DCS&apos;,
&apos;OSA_PAINJNT_DCS&apos;,
&apos;OSA_LGTMB_DCS&apos;,
&apos;OSA_PAINTMB_DCS&apos;],
&apos;OSH&apos;:[
&apos;CCC_OAHIP_DCS&apos;,
&apos;OSH_AGE_DCS&apos;,
&apos;OSH_HIPRPL_DCS&apos;,
&apos;OSH_FRAC_DCS&apos;,
&apos;OSH_PAIN_DCS&apos;,
&apos;OSH_PAINSL_DCS&apos;,
&apos;OSH_LOM_DCS&apos;],
&apos;OSK&apos;:[
&apos;CCC_OAKNEE_DCS&apos;,
&apos;OSK_AGE_DCS&apos;,
&apos;OSK_KNERPL_DCS&apos;,
&apos;OSK_PAIN_DCS&apos;,
&apos;OSK_PAINSL_DCS&apos;,
&apos;OSK_SWELL_DCS&apos;],
&apos;OST&apos;:[
&apos;CCC_OSTPO_DCS&apos;,
&apos;OST_AGE_DCS&apos;,
&apos;OST_MED_DCS&apos;,
&apos;OST_MEDNAME_DCS&apos;,
&apos;OST_MED_1_DCS&apos;,
&apos;OST_MED_2_DCS&apos;,
&apos;OST_MED_3_DCS&apos;,
&apos;OST_MED_4_DCS&apos;,
&apos;OST_MED_5_DCS&apos;,
&apos;OST_MED_6_DCS&apos;,
&apos;OST_MED_7_DCS&apos;,
&apos;OST_MED_8_DCS&apos;,
&apos;OST_MED_9_DCS&apos;,
&apos;OST_MED_10_DCS&apos;,
&apos;OST_MED_11_DCS&apos;,
&apos;OST_MED_12_DCS&apos;,
&apos;OST_MED_13_DCS&apos;,
&apos;OST_MED_14_DCS&apos;,
&apos;OST_MED_15_DCS&apos;,
&apos;OST_MED_16_DCS&apos;,
&apos;OST_MED_17_DCS&apos;,
&apos;OST_MED_18_DCS&apos;,
&apos;OST_MED_19_DCS&apos;,
&apos;OST_MED_20_DCS&apos;,
&apos;OST_MED_21_DCS&apos;,
&apos;OST_MED_22_DCS&apos;,
&apos;OST_MED_23_DCS&apos;,
&apos;OST_MED_24_DCS&apos;,
&apos;OST_MED_25_DCS&apos;,
&apos;OST_MED_26_DCS&apos;,
&apos;OST_MED_27_DCS&apos;,
&apos;OST_MED_28_DCS&apos;,
&apos;OST_MED_29_DCS&apos;,
&apos;OST_MED_30_DCS&apos;,
&apos;OST_MED_31_DCS&apos;,
&apos;OST_MED_32_DCS&apos;,
&apos;OST_MED_33_DCS&apos;,
&apos;OST_MED_34_DCS&apos;,
&apos;OST_MED_35_DCS&apos;,
&apos;OST_MED_36_DCS&apos;,
&apos;OST_MED_37_DCS&apos;,
&apos;OST_MED_38_DCS&apos;,
&apos;OST_MED_39_DCS&apos;,
&apos;OST_MED_40_DCS&apos;,
&apos;OST_EVRMD_DCS&apos;,
&apos;OST_BONE_DCS&apos;,
&apos;OST_FRAC_DCS&apos;,
&apos;OST_MOM_DCS&apos;,
&apos;OST_DAD_DCS&apos;,
&apos;OST_HGT_DCS&apos;,
&apos;OST_CST_DCS&apos;,
&apos;OST_CSTAGE_DCS&apos;,
&apos;OST_CST_MT_DCS&apos;,
&apos;OST_BP_DCS&apos;,
&apos;OST_BP_DUR_DCS&apos;,
&apos;OST_BCKPPM_DCS&apos;,
&apos;OST_BCKPLOC_DCS&apos;],
&apos;PKD&apos;:[
&apos;CCC_PARK_DCS&apos;,
&apos;PKD_AGE_DCS&apos;,
&apos;PKD_MED_DCS&apos;,
&apos;PKD_MEDNAME_DCS&apos;,
&apos;PKD_MED_1_DCS&apos;,
&apos;PKD_MED_2_DCS&apos;,
&apos;PKD_MED_3_DCS&apos;,
&apos;PKD_MED_4_DCS&apos;,
&apos;PKD_MED_5_DCS&apos;,
&apos;PKD_MED_6_DCS&apos;,
&apos;PKD_MED_7_DCS&apos;,
&apos;PKD_MED_8_DCS&apos;,
&apos;PKD_MED_9_DCS&apos;,
&apos;PKD_MED_10_DCS&apos;,
&apos;PKD_MED_11_DCS&apos;,
&apos;PKD_MED_12_DCS&apos;,
&apos;PKD_MED_13_DCS&apos;,
&apos;PKD_MED_14_DCS&apos;,
&apos;PKD_MED_15_DCS&apos;,
&apos;PKD_MED_16_DCS&apos;,
&apos;PKD_MED_17_DCS&apos;,
&apos;PKD_MED_18_DCS&apos;,
&apos;PKD_MED_19_DCS&apos;,
&apos;PKD_MED_20_DCS&apos;,
&apos;PKD_MED_21_DCS&apos;,
&apos;PKD_MED_22_DCS&apos;,
&apos;PKD_MED_23_DCS&apos;,
&apos;PKD_MED_24_DCS&apos;,
&apos;PKD_MED_25_DCS&apos;,
&apos;PKD_MED_26_DCS&apos;,
&apos;PKD_MED_27_DCS&apos;,
&apos;PKD_MED_28_DCS&apos;,
&apos;PKD_MED_29_DCS&apos;,
&apos;PKD_MED_30_DCS&apos;,
&apos;PKD_MED_31_DCS&apos;,
&apos;PKD_MED_32_DCS&apos;,
&apos;PKD_MED_33_DCS&apos;,
&apos;PKD_MED_34_DCS&apos;,
&apos;PKD_MED_35_DCS&apos;,
&apos;PKD_MED_36_DCS&apos;,
&apos;PKD_MED_37_DCS&apos;,
&apos;PKD_MED_38_DCS&apos;,
&apos;PKD_MED_39_DCS&apos;,
&apos;PKD_MED_40_DCS&apos;,
&apos;PKD_OTHMD_DCS&apos;,
&apos;PKD_EVRMED_DCS&apos;,
&apos;PKD_SHKE_DCS&apos;,
&apos;PKD_SHKSEV_DCS&apos;,
&apos;PKD_SMWRT_DCS&apos;,
&apos;PKD_BUTON_DCS&apos;,
&apos;PKD_VOICE_DCS&apos;,
&apos;PKD_FEET_DCS&apos;,
&apos;PKD_WALK_DCS&apos;,
&apos;PKD_BAL_DCS&apos;,
&apos;PKD_FACE_DCS&apos;,
&apos;PKD_RISE_DCS&apos;],
&apos;ROS&apos;:[
&apos;ROS_PAIN_DCS&apos;,
&apos;ROS_HILL_DCS&apos;,
&apos;ROS_LEVEL_DCS&apos;,
&apos;ROS_BLOCK_DCS&apos;,
&apos;ROS_DOWLK_DCS&apos;,
&apos;ROS_STILL_DCS&apos;,
&apos;ROS_SOON_DCS&apos;,
&apos;ROS_LOC_DCS&apos;,
&apos;ROS_SEVPAIN_DCS&apos;],
&apos;STR&apos;:[
&apos;CCC_CVA_DCS&apos;,
&apos;STR_CVAAGE_DCS&apos;,
&apos;STR_MED_DCS&apos;,
&apos;STR_MEDNAME_DCS&apos;,
&apos;STR_MED_1_DCS&apos;,
&apos;STR_MED_2_DCS&apos;,
&apos;STR_MED_3_DCS&apos;,
&apos;STR_MED_4_DCS&apos;,
&apos;STR_MED_5_DCS&apos;,
&apos;STR_MED_6_DCS&apos;,
&apos;STR_MED_7_DCS&apos;,
&apos;STR_MED_8_DCS&apos;,
&apos;STR_MED_9_DCS&apos;,
&apos;STR_MED_10_DCS&apos;,
&apos;STR_MED_11_DCS&apos;,
&apos;STR_MED_12_DCS&apos;,
&apos;STR_MED_13_DCS&apos;,
&apos;STR_MED_14_DCS&apos;,
&apos;STR_MED_15_DCS&apos;,
&apos;STR_MED_16_DCS&apos;,
&apos;STR_MED_17_DCS&apos;,
&apos;STR_MED_18_DCS&apos;,
&apos;STR_MED_19_DCS&apos;,
&apos;STR_MED_20_DCS&apos;,
&apos;STR_MED_21_DCS&apos;,
&apos;STR_MED_22_DCS&apos;,
&apos;STR_MED_23_DCS&apos;,
&apos;STR_MED_24_DCS&apos;,
&apos;STR_MED_25_DCS&apos;,
&apos;STR_MED_26_DCS&apos;,
&apos;STR_MED_27_DCS&apos;,
&apos;STR_MED_28_DCS&apos;,
&apos;STR_MED_29_DCS&apos;,
&apos;STR_MED_30_DCS&apos;,
&apos;STR_MED_31_DCS&apos;,
&apos;STR_MED_32_DCS&apos;,
&apos;STR_MED_33_DCS&apos;,
&apos;STR_MED_34_DCS&apos;,
&apos;STR_MED_35_DCS&apos;,
&apos;STR_MED_36_DCS&apos;,
&apos;STR_MED_37_DCS&apos;,
&apos;STR_MED_38_DCS&apos;,
&apos;STR_MED_39_DCS&apos;,
&apos;STR_MED_40_DCS&apos;,
&apos;STR_OTHMD_DCS&apos;,
&apos;STR_EVRMD_DCS&apos;,
&apos;CCC_TIA_DCS&apos;,
&apos;STR_TIAAGE_DCS&apos;,
&apos;STR_TIAMED_DCS&apos;,
&apos;STR_TIAMEDNAME_DCS&apos;,
&apos;STR_TIAMED_1_DCS&apos;,
&apos;STR_TIAMED_2_DCS&apos;,
&apos;STR_TIAMED_3_DCS&apos;,
&apos;STR_TIAMED_4_DCS&apos;,
&apos;STR_TIAMED_5_DCS&apos;,
&apos;STR_TIAMED_6_DCS&apos;,
&apos;STR_TIAMED_7_DCS&apos;,
&apos;STR_TIAMED_8_DCS&apos;,
&apos;STR_TIAMED_9_DCS&apos;,
&apos;STR_TIAMED_10_DCS&apos;,
&apos;STR_TIAMED_11_DCS&apos;,
&apos;STR_TIAMED_12_DCS&apos;,
&apos;STR_TIAMED_13_DCS&apos;,
&apos;STR_TIAMED_14_DCS&apos;,
&apos;STR_TIAMED_15_DCS&apos;,
&apos;STR_TIAMED_16_DCS&apos;,
&apos;STR_TIAMED_17_DCS&apos;,
&apos;STR_TIAMED_18_DCS&apos;,
&apos;STR_TIAMED_19_DCS&apos;,
&apos;STR_TIAMED_20_DCS&apos;,
&apos;STR_TIAMED_21_DCS&apos;,
&apos;STR_TIAMED_22_DCS&apos;,
&apos;STR_TIAMED_23_DCS&apos;,
&apos;STR_TIAMED_24_DCS&apos;,
&apos;STR_TIAMED_25_DCS&apos;,
&apos;STR_TIAMED_26_DCS&apos;,
&apos;STR_TIAMED_27_DCS&apos;,
&apos;STR_TIAMED_28_DCS&apos;,
&apos;STR_TIAMED_29_DCS&apos;,
&apos;STR_TIAMED_30_DCS&apos;,
&apos;STR_TIAMED_31_DCS&apos;,
&apos;STR_TIAMED_32_DCS&apos;,
&apos;STR_TIAMED_33_DCS&apos;,
&apos;STR_TIAMED_34_DCS&apos;,
&apos;STR_TIAMED_35_DCS&apos;,
&apos;STR_TIAMED_36_DCS&apos;,
&apos;STR_TIAMED_37_DCS&apos;,
&apos;STR_TIAMED_38_DCS&apos;,
&apos;STR_TIAMED_39_DCS&apos;,
&apos;STR_TIAMED_40_DCS&apos;,
&apos;STR_TIAOTHMD_DCS&apos;,
&apos;STR_TIAEVMD_DCS&apos;,
&apos;CCC_CVAFX_DCS&apos;,
&apos;STR_WEAK_DCS&apos;,
&apos;STR_WEAK_DUR_DCS&apos;,
&apos;STR_NUMB_DCS&apos;,
&apos;STR_NUMB_DUR_DCS&apos;,
&apos;STR_VIS_DCS&apos;,
&apos;STR_VIS_DUR_DCS&apos;,
&apos;STR_NOVIS_DCS&apos;,
&apos;STR_NOVIS_DUR_DCS&apos;,
&apos;STR_NOUND_DCS&apos;,
&apos;STR_NOUND_DUR_DCS&apos;,
&apos;STR_NOEXP_DCS&apos;,
&apos;STR_NOEXP_DUR_DCS&apos;],
&apos;TBI&apos;:[
&apos;TBI_TYP_DCS&apos;,
&apos;TBI_NMBR_DCS&apos;,
&apos;TBI_RSLT_DCS&apos;,
&apos;TBI_MCR_DCS&apos;,
&apos;TBI_PROB_DCS&apos;]
}

  for(var key in sections) {
    var rcount=0
    var qcount=0
    var arr=sections[key]
    for(var i=0; i&lt;arr.length; i++ ) {
      var j=$(stage+arr[i])
      if(j.isNull().value()) continue
      qcount++      
      rcount+=j.any(&apos;REFUSED&apos;).value()?1:0
    }
    if(0==qcount) {
      str.push(key+&apos;:100&apos;)
    } else {
      var perc=100.0*rcount/qcount      
      if(0&lt;perc &amp;&amp; 100&gt;perc &amp;&amp; 0!=(perc-Math.floor(perc))) {        
        perc=perc.toFixed(3)
      }
      str.push(key+&apos;:&apos;+perc)
    }  
  }

  res=newValue(&apos;{&apos;+str.join(&apos;,&apos;)+&apos;}&apos;,&apos;text&apos;)
}
res  </attribute>
        </attributes>
      </variable>
      <variable name="data_missing_disease_symptoms" valueType="integer" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">$this(&apos;data_qac_disease_symptoms&apos;).isNull().and(
  $this(&apos;stage_contraindicated_disease_symptoms&apos;).eq(0),
  $this(&apos;stage_skip_disease_symptoms&apos;).isNull()
).value() ? 1 : 0</attribute>
        </attributes>
      </variable>
      <variable name="stage_technician_conclusion_questionnaire" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">$(&apos;clsa-dcs.ConclusionQuestionnaire:QuestionnaireRun.user&apos;).whenNull(
  $group(&apos;Admin.Action.stage&apos;,&apos;ConclusionQuestionnaire&apos;,&apos;Admin.Action.user&apos;).asSequence().last()).lowerCase()</attribute>
        </attributes>
      </variable>
      <variable name="stage_skip_conclusion_questionnaire" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">var action=$group(&apos;Admin.Action.stage&apos;,&apos;ConclusionQuestionnaire&apos;,&apos;Admin.Action.actionType&apos;).asSequence()
var res=$group(&apos;Admin.Action.stage&apos;,&apos;ConclusionQuestionnaire&apos;,&apos;Admin.Action.eventReason&apos;).asSequence().filter(function(v,i){
  return action.indexOf(&apos;SKIP&apos;)==i
  }).last()
if(res.isNull().not().value()) {
  res=newValue(res.value().slice(14),&apos;text&apos;)  
}
res</attribute>
        </attributes>
      </variable>
      <variable name="stage_contraindicated_conclusion_questionnaire" valueType="integer" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">$group(&apos;clsa-dcs.Participants:Admin.StageInstance.stage&apos;,&apos;ConclusionQuestionnaire&apos;,
&apos;Admin.StageInstance.lastState&apos;).any(&apos;Contraindicated&apos;,&apos;NotApplicable&apos;).value() 
? 1 : 0</attribute>
        </attributes>
      </variable>
      <variable name="data_qac_conclusion_questionnaire" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">var res=$(&apos;clsa-dcs.ConclusionQuestionnaire:PARTICIPANT_OFFERED_DOCUMENT&apos;).lowerCase()
if(res.isNull().not().value()) {
  var n=0
  if(res.any(&apos;consent_form&apos;).value()) n++
  if(res.any(&apos;physical_measures_report&apos;).value()) n++  
  res=newValue(&apos;{documents:&apos;+n+&apos;}&apos;,&apos;text&apos;)
}
res</attribute>
        </attributes>
      </variable>
      <variable name="data_missing_conclusion_questionnaire" valueType="integer" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">$this(&apos;data_qac_conclusion_questionnaire&apos;).isNull().and(
  $this(&apos;stage_contraindicated_conclusion_questionnaire&apos;).eq(0),
  $this(&apos;stage_skip_conclusion_questionnaire&apos;).isNull()
).value() ? 1 : 0</attribute>
        </attributes>
      </variable>
      <variable name="stage_technician_bone_density_questionnaire" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">$(&apos;clsa-dcs.QuestionnaireBoneDensity:QuestionnaireRun.user&apos;).whenNull(
  $group(&apos;Admin.Action.stage&apos;,&apos;QuestionnaireBoneDensity&apos;,&apos;Admin.Action.user&apos;).asSequence().last()).lowerCase()</attribute>
        </attributes>
      </variable>
      <variable name="stage_skip_bone_density_questionnaire" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">var action=$group(&apos;Admin.Action.stage&apos;,&apos;QuestionnaireBoneDensity&apos;,&apos;Admin.Action.actionType&apos;).asSequence()
var res=$group(&apos;Admin.Action.stage&apos;,&apos;QuestionnaireBoneDensity&apos;,&apos;Admin.Action.eventReason&apos;).asSequence().filter(function(v,i){
  return action.indexOf(&apos;SKIP&apos;)==i
  }).last()
if(res.isNull().not().value()) {
  res=newValue(res.value().slice(14),&apos;text&apos;)  
}
res</attribute>
        </attributes>
      </variable>
      <variable name="stage_contraindicated_bone_density_questionnaire" valueType="integer" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">$group(&apos;clsa-dcs.Participants:Admin.StageInstance.stage&apos;,&apos;QuestionnaireBoneDensity&apos;,
&apos;Admin.StageInstance.lastState&apos;).any(&apos;Contraindicated&apos;,&apos;NotApplicable&apos;).value() 
? 1 : 0</attribute>
        </attributes>
      </variable>
      <variable name="data_qac_bone_density_questionnaire" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">var p=$(&apos;clsa-dcs.QuestionnaireBoneDensity:QuestionnaireMetric.missingCount&apos;).asSequence()
var q=$(&apos;clsa-dcs.QuestionnaireBoneDensity:QuestionnaireMetric.questionCount&apos;).asSequence()
var res=null
if(p.isNull().and(q.isNull()).not().value() &amp;&amp; 0!=q.sum()){
  res=newValue(
    &apos;{complete:&apos;+
    Math.round(q.sum().minus(p.sum()).multiply(100).div(q.sum()).value())
    +&apos;}&apos;,&apos;text&apos;)
}
res</attribute>
        </attributes>
      </variable>
      <variable name="data_missing_bone_density_questionnaire" valueType="integer" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">$this(&apos;data_qac_bone_density_questionnaire&apos;).isNull().and(
  $this(&apos;stage_contraindicated_bone_density_questionnaire&apos;).eq(0),
  $this(&apos;stage_skip_bone_density_questionnaire&apos;).isNull()
).value() ? 1 : 0</attribute>
        </attributes>
      </variable>
      <variable name="stage_technician_hearing_questionnaire" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">$(&apos;clsa-dcs.HearingQuestionnaire:QuestionnaireRun.user&apos;).whenNull(
  $group(&apos;Admin.Action.stage&apos;,&apos;HearingQuestionnaire&apos;,&apos;Admin.Action.user&apos;).asSequence().last()).lowerCase()</attribute>
        </attributes>
      </variable>
      <variable name="stage_skip_hearing_questionnaire" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">var action=$group(&apos;Admin.Action.stage&apos;,&apos;HearingQuestionnaire&apos;,&apos;Admin.Action.actionType&apos;).asSequence()
var res=$group(&apos;Admin.Action.stage&apos;,&apos;HearingQuestionnaire&apos;,&apos;Admin.Action.eventReason&apos;).asSequence().filter(function(v,i){
  return action.indexOf(&apos;SKIP&apos;)==i
  }).last()
if(res.isNull().not().value()) {
  res=newValue(res.value().slice(14),&apos;text&apos;)  
}
res</attribute>
        </attributes>
      </variable>
      <variable name="stage_contraindicated_hearing_questionnaire" valueType="integer" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">$group(&apos;clsa-dcs.Participants:Admin.StageInstance.stage&apos;,&apos;HearingQuestionnaire&apos;,
&apos;Admin.StageInstance.lastState&apos;).any(&apos;Contraindicated&apos;,&apos;NotApplicable&apos;).value() 
? 1 : 0</attribute>
        </attributes>
      </variable>
      <variable name="data_qac_hearing_questionnaire" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">var l=$(&apos;clsa-dcs.HearingQuestionnaire:STATUS_EAR.LEFT_EAR_2&apos;).lowerCase()
var r=$(&apos;clsa-dcs.HearingQuestionnaire:STATUS_EAR.RIGHT_EAR_2&apos;).lowerCase()
var res=null
if(l.isNull().and(r.isNull()).not().value()){
  res=newValue(
    &apos;{status_left:&apos;+
     (l.isNull().value()?&apos;missing&apos;:l.value()) +
    &apos;,status_right:&apos;+
     (r.isNull().value()?&apos;missing&apos;:r.value()) +
    &apos;}&apos;,&apos;text&apos;)
}
res</attribute>
        </attributes>
      </variable>
      <variable name="data_missing_hearing_questionnaire" valueType="integer" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">$this(&apos;data_qac_hearing_questionnaire&apos;).isNull().and(
  $this(&apos;stage_contraindicated_hearing_questionnaire&apos;).eq(0),
  $this(&apos;stage_skip_hearing_questionnaire&apos;).isNull()
).value() ? 1 : 0</attribute>
        </attributes>
      </variable>
      <variable name="stage_technician_functional_status" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">$(&apos;clsa-dcs.FunctionalStatus:QuestionnaireRun.user&apos;).whenNull(
  $group(&apos;Admin.Action.stage&apos;,&apos;FunctionalStatus&apos;,&apos;Admin.Action.user&apos;).asSequence().last()).lowerCase()</attribute>
        </attributes>
      </variable>
      <variable name="stage_skip_functional_status" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">var action=$group(&apos;Admin.Action.stage&apos;,&apos;FunctionalStatus&apos;,&apos;Admin.Action.actionType&apos;).asSequence()
var res=$group(&apos;Admin.Action.stage&apos;,&apos;FunctionalStatus&apos;,&apos;Admin.Action.eventReason&apos;).asSequence().filter(function(v,i){
  return action.indexOf(&apos;SKIP&apos;)==i
  }).last()
if(res.isNull().not().value()) {
  res=newValue(res.value().slice(14),&apos;text&apos;)
}
res</attribute>
        </attributes>
      </variable>
      <variable name="stage_contraindicated_functional_status" valueType="integer" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">$group(&apos;clsa-dcs.Participants:Admin.StageInstance.stage&apos;,&apos;FunctionalStatus&apos;,
&apos;Admin.StageInstance.lastState&apos;).any(&apos;Contraindicated&apos;,&apos;NotApplicable&apos;).value() 
? 1 : 0</attribute>
        </attributes>
      </variable>
      <variable name="data_qac_functional_status" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">var stage=&apos;clsa-dcs.FunctionalStatus:&apos;
var p=$(stage+&apos;QuestionnaireMetric.missingCount&apos;).asSequence()
var q=$(stage+&apos;QuestionnaireMetric.questionCount&apos;).asSequence()
var res=null
if(p.isNull().and(q.isNull()).not().value() &amp;&amp; 0!=q.sum()) {
  var str=[]
  str.push(
    &apos;complete:&apos;+
    Math.round(q.sum().minus(p.sum()).multiply(100).div(q.sum()).value()))

var sections={
&apos;Fun&apos;:[
&apos;FUL_SHLD_COM&apos;,
&apos;FUL_SHLDDG_COM&apos;,
&apos;FUL_STOOP_COM&apos;,
&apos;FUL_STOOPDG_COM&apos;,
&apos;FUL_PUSH_COM&apos;,
&apos;FUL_PUSHDG_COM&apos;,
&apos;FUL_LFT10_COM&apos;,
&apos;FUL_LFT1ODG_COM&apos;,
&apos;FUL_HDLG_COM&apos;,
&apos;FUL_HDLGDG_COM&apos;,
&apos;FUL_ST15_COM&apos;,
&apos;FUL_ST15DG_COM&apos;,
&apos;FUL_SIT1H_COM&apos;,
&apos;FUL_SIT1HDG_COM&apos;,
&apos;FUL_STDUP_COM&apos;,
&apos;FUL_STDUPDG_COM&apos;,
&apos;FUL_FSTR_COM&apos;,
&apos;FUL_FSTRDG_COM&apos;,
&apos;FUL_WK23B_COM&apos;,
&apos;FUL_WK23BDG_COM&apos;,
&apos;FUL_MKBED_COM&apos;,
&apos;FUL_MKBEDDG_COM&apos;,
&apos;FUL_WSHBK_COM&apos;,
&apos;FUL_WSHBKDG_COM&apos;,
&apos;FUL_KNCUT_COM&apos;,
&apos;FUL_KNCUTDG_COM&apos;,
&apos;FUL_FORC_COM&apos;,
&apos;FUL_FORCDG_COM&apos;]  
}

  for(var key in sections) {
    var rcount=0
    var qcount=0
    var arr=sections[key]
    for(var i=0; i&lt;arr.length; i++ ) {
      var j=$(stage+arr[i])
      if(j.isNull().value()) continue
      qcount++      
      rcount+=j.any(&apos;REFUSED&apos;).value()?1:0
    }
    if(0==qcount) {
      str.push(key+&apos;:100&apos;)
    } else {
      var perc=100.0*rcount/qcount      
      if(0&lt;perc &amp;&amp; 100&gt;perc &amp;&amp; 0!=(perc-Math.floor(perc))) {        
        perc=perc.toFixed(3)
      }
      str.push(key+&apos;:&apos;+perc)
    }  
  }

  res=newValue(&apos;{&apos;+str.join(&apos;,&apos;)+&apos;}&apos;,&apos;text&apos;)
}
res</attribute>
        </attributes>
      </variable>
      <variable name="data_missing_functional_status" valueType="integer" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">$this(&apos;data_qac_functional_status&apos;).isNull().and(
  $this(&apos;stage_contraindicated_functional_status&apos;).eq(0),
  $this(&apos;stage_skip_functional_status&apos;).isNull()
).value() ? 1 : 0</attribute>
        </attributes>
      </variable>
      <variable name="stage_technician_time_based_pmt" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">$(&apos;clsa-dcs.TimeBasedProspectiveMemoryTask:QuestionnaireRun.user&apos;).whenNull(
  $group(&apos;Admin.Action.stage&apos;,&apos;TimeBasedProspectiveMemoryTask&apos;,&apos;Admin.Action.user&apos;).asSequence().last()).lowerCase()</attribute>
        </attributes>
      </variable>
      <variable name="stage_skip_time_based_pmt" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">var action=$group(&apos;Admin.Action.stage&apos;,&apos;TimeBasedProspectiveMemoryTask&apos;,&apos;Admin.Action.actionType&apos;).asSequence()
var res=$group(&apos;Admin.Action.stage&apos;,&apos;TimeBasedProspectiveMemoryTask&apos;,&apos;Admin.Action.eventReason&apos;).asSequence().filter(function(v,i){
  return action.indexOf(&apos;SKIP&apos;)==i
  }).last()
if(res.isNull().not().value()) {
  res=newValue(res.value().slice(14),&apos;text&apos;)  
}
res</attribute>
        </attributes>
      </variable>
      <variable name="stage_contraindicated_time_based_pmt" valueType="integer" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">$group(&apos;clsa-dcs.Participants:Admin.StageInstance.stage&apos;,&apos;TimeBasedProspectiveMemoryTask&apos;,
&apos;Admin.StageInstance.lastState&apos;).any(&apos;Contraindicated&apos;,&apos;NotApplicable&apos;).value() 
? 1 : 0</attribute>
        </attributes>
      </variable>
      <variable name="data_qac_time_based_pmt" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">var stage=&apos;clsa-dcs.TimeBasedProspectiveMemoryTask:&apos;
var p=$(stage+&apos;QuestionnaireMetric.missingCount&apos;).asSequence()
var q=$(stage+&apos;QuestionnaireMetric.questionCount&apos;).asSequence()
var res=null
if(p.isNull().and(q.isNull()).not().value() &amp;&amp; 0!=q.sum()) {
  var str=[]
  str.push(
    &apos;complete:&apos;+
    Math.round(q.sum().minus(p.sum()).multiply(100).div(q.sum()).value()))

var sections={
&apos;TMT&apos;:[
&apos;TMT_PASS_DCS&apos;,
&apos;TMT_TST_DCS&apos;,
&apos;TMT_FCT_DCS&apos;,
&apos;TMT_DOTIM_DCS&apos;,
&apos;TMT_DOTIM_REP_DCS&apos;,
&apos;TMT_DOTIM_OBS_DCS&apos;,
&apos;TMT_DOENV_DCS&apos;,
&apos;TMT_DOENV_OBS_DCS&apos;,
&apos;TMT_DOCARD_DCS&apos;,
&apos;TMT_DOCARD_OBS_DCS&apos;,
&apos;TMT_ITPEXACT_DCS&apos;,
&apos;TMT_ACC_DCS&apos;,
&apos;TMT_RMD_DCS&apos;]  
}

  for(var key in sections) {
    var rcount=0
    var qcount=0
    var arr=sections[key]
    for(var i=0; i&lt;arr.length; i++ ) {
      var j=$(stage+arr[i])
      if(j.isNull().value()) continue
      qcount++      
      rcount+=j.any(&apos;REFUSED&apos;).value()?1:0
    }
    if(0==qcount) {
      str.push(key+&apos;:100&apos;)
    } else {
      var perc=100.0*rcount/qcount      
      if(0&lt;perc &amp;&amp; 100&gt;perc &amp;&amp; 0!=(perc-Math.floor(perc))) {        
        perc=perc.toFixed(3)
      }
      str.push(key+&apos;:&apos;+perc)
    }  
  }

  res=newValue(&apos;{&apos;+str.join(&apos;,&apos;)+&apos;}&apos;,&apos;text&apos;)
}
res</attribute>
        </attributes>
      </variable>
      <variable name="data_missing_time_based_pmt" valueType="integer" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">$this(&apos;data_qac_time_based_pmt&apos;).isNull().and(
  $this(&apos;stage_contraindicated_time_based_pmt&apos;).eq(0),
  $this(&apos;stage_skip_time_based_pmt&apos;).isNull()
).value() ? 1 : 0</attribute>
        </attributes>
      </variable>
      <variable name="test_stage" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">var s=$(&apos;clsa-dcs.Participants:Admin.StageInstance.stage&apos;).asSequence()
s.filter(function(v,i){
 return s.indexOf(v)==i  
}).join(&apos;,&apos;)</attribute>
        </attributes>
      </variable>
      <variable name="stage_technician_urine" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">$(&apos;clsa-dcs.Urine:QuestionnaireRun.user&apos;).whenNull(
  $group(&apos;Admin.Action.stage&apos;,&apos;Urine&apos;,&apos;Admin.Action.user&apos;).asSequence().last()).lowerCase()</attribute>
        </attributes>
      </variable>
      <variable name="stage_skip_urine" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">var action=$group(&apos;Admin.Action.stage&apos;,&apos;Urine&apos;,&apos;Admin.Action.actionType&apos;).asSequence()
var res=$group(&apos;Admin.Action.stage&apos;,&apos;Urine&apos;,&apos;Admin.Action.eventReason&apos;).asSequence().filter(function(v,i){
  return action.indexOf(&apos;SKIP&apos;)==i
  }).last()
if(res.isNull().not().value()) {
  res=newValue(res.value().slice(14),&apos;text&apos;)  
}
res</attribute>
        </attributes>
      </variable>
      <variable name="stage_contraindicated_urine" valueType="integer" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">$group(&apos;clsa-dcs.Participants:Admin.StageInstance.stage&apos;,&apos;Urine&apos;,
&apos;Admin.StageInstance.lastState&apos;).any(&apos;Contraindicated&apos;,&apos;NotApplicable&apos;).value() 
? 1 : 0</attribute>
        </attributes>
      </variable>
      <variable name="data_qac_urine" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">var stage=&apos;clsa-dcs.Urine:&apos;
var p=$(stage+&apos;QuestionnaireMetric.missingCount&apos;).asSequence()
var q=$(stage+&apos;QuestionnaireMetric.questionCount&apos;).asSequence()
var res=null
if(p.isNull().and(q.isNull()).not().value() &amp;&amp; 0!=q.sum()) {
  var str=[]
  str.push(
    &apos;complete:&apos;+
    Math.round(q.sum().minus(p.sum()).multiply(100).div(q.sum()).value()))

var sections={
&apos;URINE&apos;:[
&apos;FOOD_DRINK_24_U&apos;,
&apos;CAFFEINE_24_U&apos;,
&apos;TOBACCO_24_U&apos;,
&apos;ALCOHOL_24_U&apos;,
&apos;CURRENTLY_MENSTRUAL_U&apos;,
&apos;AGREE_URINE_U&apos;,
&apos;WHY_NOT_AGREE_URINE_U&apos;,
&apos;PART_DECLINED_URINE_U&apos;,
&apos;TECH_REASON_URINE_U&apos;]
}

  for(var key in sections) {
    var rcount=0
    var qcount=0
    var arr=sections[key]
    for(var i=0; i&lt;arr.length; i++ ) {
      var j=$(stage+arr[i])
      if(j.isNull().value()) continue
      qcount++      
      rcount+=j.any(&apos;REFUSED&apos;).value()?1:0
    }
    if(0==qcount) {
      str.push(key+&apos;:100&apos;)
    } else {
      var perc=100.0*rcount/qcount      
      if(0&lt;perc &amp;&amp; 100&gt;perc &amp;&amp; 0!=(perc-Math.floor(perc))) {        
        perc=perc.toFixed(3)
      }
      str.push(key+&apos;:&apos;+perc)
    }  
  }

  res=newValue(&apos;{&apos;+str.join(&apos;,&apos;)+&apos;}&apos;,&apos;text&apos;)
}
res</attribute>
        </attributes>
      </variable>
      <variable name="data_missing_urine" valueType="integer" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">$this(&apos;data_qac_urine&apos;).isNull().and(
  $this(&apos;stage_contraindicated_urine&apos;).eq(0),
  $this(&apos;stage_skip_urine&apos;).isNull()
).value() ? 1 : 0</attribute>
        </attributes>
      </variable>
      <variable name="stage_technician_blood" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">var stage=$this(&apos;group_blood&apos;)
var res=null
if(stage.isNull().not().value()) {
  stage=stage.value()
  res=$(&apos;clsa-dcs.&apos;+stage+&apos;:QuestionnaireRun.user&apos;).whenNull(
    $group(&apos;Admin.Action.stage&apos;,stage,&apos;Admin.Action.user&apos;).asSequence().last()).lowerCase()
}
res</attribute>
        </attributes>
      </variable>
      <variable name="stage_skip_blood" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">var stage=$this(&apos;group_blood&apos;)
var res=null
if(stage.isNull().not().value()) {
  stage=stage.value()
  var action=$group(&apos;Admin.Action.stage&apos;,stage,&apos;Admin.Action.actionType&apos;).asSequence()
  var res=$group(&apos;Admin.Action.stage&apos;,stage,&apos;Admin.Action.eventReason&apos;).asSequence().filter(function(v,i){
    return action.indexOf(&apos;SKIP&apos;)==i
    }).last()
  if(res.isNull().not().value()) {
    res=newValue(res.value().slice(14),&apos;text&apos;)
  }
}  
res</attribute>
        </attributes>
      </variable>
      <variable name="data_qac_blood" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">var stage=$this(&apos;group_blood&apos;)
var res=null
if(stage.isNull().not().value()) {
  stage=&apos;clsa-dcs.&apos;+stage.value()+&apos;:&apos;
  var p=$(stage+&apos;QuestionnaireMetric.missingCount&apos;).asSequence()
  var q=$(stage+&apos;QuestionnaireMetric.questionCount&apos;).asSequence()
  if(p.isNull().and(q.isNull()).not().value() &amp;&amp; 0!=q.sum()) {
    var str=[]
    str.push(
      &apos;complete:&apos;+
      Math.round(q.sum().minus(p.sum()).multiply(100).div(q.sum()).value()))

var sections={
&apos;BLOOD&apos;:[
&apos;AGREE_BS_B&apos;,
&apos;ALCOHOL_24_B&apos;,
&apos;BLOOD_COLLECTED_B&apos;,
&apos;CAFFEINE_24_B&apos;,
&apos;CURRENTLY_MENSTRUAL_B&apos;,
&apos;DECLINE_POST_B&apos;,
&apos;FIRST_ATTEMPT_B&apos;,
&apos;FOOD_DRINK_24_B&apos;,
&apos;NEEDLE_B&apos;,
&apos;NOTE_DRAW_SITE_B.FIBROSED_INFLAMED&apos;,
&apos;NOTE_DRAW_SITE_B.HEMATOMA&apos;,
&apos;NOTE_DRAW_SITE_B.PARALYZED&apos;,
&apos;NOTE_DRAW_SITE_B.PETECHIAE&apos;,
&apos;NOTE_DRAW_SITE_B.PICC_LINE&apos;,
&apos;NOTE_DRAW_SITE_B.RED_SWOLLEN&apos;,
&apos;NOTE_DRAW_SITE_B.SCARRING&apos;,
&apos;NOTE_DRAW_SITE_B.SCLEROTIC_HARDVEINS&apos;,
&apos;NOTE_DRAW_SITE_B.SEVERE_PROBLEM&apos;,
&apos;NOTE_DRAW_SITE_B.TATTOOS&apos;,
&apos;NOTE_DRAW_SITE_B.VASCULAR_GRAFT&apos;,
&apos;NOTE_OTHER_B.OTHER&apos;,
&apos;PART_DECLINED_B&apos;,
&apos;PART_POSTPONED_B&apos;,
&apos;SIT_RECLIN_B&apos;,
&apos;TECH_REASON_B&apos;,
&apos;TOBACCO_24_B&apos;,
&apos;WHICH_ARM_CHOSEN_2_B&apos;,
&apos;WHY_NOT_AGREE_BLOOD_B&apos;,
&apos;WHY_NO_BLOOD_B&apos;]
}

    for(var key in sections) {
      var rcount=0
      var qcount=0
      var arr=sections[key]
      for(var i=0; i&lt;arr.length; i++ ) {
        var j=$(stage+arr[i])
        if(j.isNull().value()) continue
        qcount++      
        rcount+=j.any(&apos;REFUSED&apos;).value()?1:0
      }
      if(0==qcount) {
        str.push(key+&apos;:100&apos;)
      } else {
        var perc=100.0*rcount/qcount      
        if(0&lt;perc &amp;&amp; 100&gt;perc &amp;&amp; 0!=(perc-Math.floor(perc))) {        
          perc=perc.toFixed(3)
        }
        str.push(key+&apos;:&apos;+perc)
      }
    }
    res=newValue(&apos;{&apos;+str.join(&apos;,&apos;)+&apos;}&apos;,&apos;text&apos;)
  }
}
res</attribute>
        </attributes>
      </variable>
      <variable name="data_missing_blood" valueType="integer" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">$this(&apos;data_qac_blood&apos;).isNull().and(
  $this(&apos;stage_contraindicated_blood&apos;).eq(0),
  $this(&apos;stage_skip_blood&apos;).isNull()
).value() ? 1 : 0</attribute>
        </attributes>
      </variable>
      <variable name="stage_contraindicated_blood" valueType="integer" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">var stage=$this(&apos;group_blood&apos;)
var res=null
if(stage.isNull().not().value()) {
  stage=stage.value()
  res=$group(&apos;clsa-dcs.Participants:Admin.StageInstance.stage&apos;,stage,&apos;Admin.StageInstance.lastState&apos;).whenNull(
      $group(&apos;clsa-dcs.Participants:Admin.StageInstance.stage&apos;,stage,&apos;Admin.StageInstance.lastState&apos;)).any(
        &apos;Contraindicated&apos;,&apos;NotApplicable&apos;).value() ? 1 : 0
}
res</attribute>
        </attributes>
      </variable>
      <variable name="group_blood" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">var res=null
var u=$group(&apos;Admin.StageInstance.stage&apos;,&apos;Phlebotomy&apos;,&apos;Admin.StageInstance.lastState&apos;).asSequence().last()
var v=$group(&apos;Admin.StageInstance.stage&apos;,&apos;Blood&apos;,&apos;Admin.StageInstance.lastState&apos;).asSequence().last()
var w=$group(&apos;Admin.StageInstance.stage&apos;,&apos;Blood2&apos;,&apos;Admin.StageInstance.lastState&apos;).asSequence().last()
var p=$(&apos;Admin.StageInstance.stage&apos;).any(&apos;Phlebotomy&apos;).and(w.isNull().not()).value()
var q=$(&apos;Admin.StageInstance.stage&apos;).any(&apos;Blood&apos;).and(u.isNull().not()).value()
var r=$(&apos;Admin.StageInstance.stage&apos;).any(&apos;Blood2&apos;).and(v.isNull().not()).value()
if(p &amp;&amp; !(q || r)) {
  res=newValue( &apos;Phlebotomy&apos;, &apos;text&apos;) 
} else if(q &amp;&amp; !(p || r)) {
  res=newValue( &apos;Blood&apos;, &apos;text&apos;) 
} else if(r &amp;&amp; !(p || q)) {
  res=newValue( &apos;Blood2&apos;, &apos;text&apos;) 
} else if(p || q || r) {
  var s=[]
  var n=[&apos;Phlebotomy&apos;,&apos;Blood&apos;,&apos;Blood2&apos;]
  if(p) s.push(u)
  if(q) s.push(v)
  if(r) s.push(w)
  var x=[]
  var y=[]
  for(var i=0;i&lt;s.length; i++) {
    if(s[i].any(&apos;Completed&apos;).value()) x.push(n[i])
    if(s[i].any(&apos;NotApplicable&apos;).value()) y.push(n[i])
  }
  if(0&lt;x.length) {
    res=newValue(x[x.length-1],&apos;text&apos;)
  } else if(0&lt;y.length) {
    res=newValue(y[y.length-1],&apos;text&apos;)
  }
}
res</attribute>
        </attributes>
      </variable>
      <variable name="stage_technician_neuropsychological_battery_scoring" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">$(&apos;clsa-dcs.NeuropsychologicalBatteryScoring:QuestionnaireRun.user&apos;).whenNull(
  $group(&apos;Admin.Action.stage&apos;,&apos;NeuropsychologicalBatteryScoring&apos;,&apos;Admin.Action.user&apos;).asSequence().last()).lowerCase()</attribute>
        </attributes>
      </variable>
      <variable name="stage_skip_neuropsychological_battery_scoring" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">var action=$group(&apos;Admin.Action.stage&apos;,&apos;NeuropsychologicalBatteryScoring&apos;,&apos;Admin.Action.actionType&apos;).asSequence()
var res=$group(&apos;Admin.Action.stage&apos;,&apos;NeuropsychologicalBatteryScoring&apos;,&apos;Admin.Action.eventReason&apos;).asSequence().filter(function(v,i){
  return action.indexOf(&apos;SKIP&apos;)==i
  }).last()
if(res.isNull().not().value()) {
  res=newValue(res.value().slice(14),&apos;text&apos;)  
}
res</attribute>
        </attributes>
      </variable>
      <variable name="stage_contraindicated_neuropsychological_battery_scoring" valueType="integer" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">$group(&apos;clsa-dcs.Participants:Admin.StageInstance.stage&apos;,&apos;NeuropsychologicalBatteryScoring&apos;,
&apos;Admin.StageInstance.lastState&apos;).any(&apos;Contraindicated&apos;,&apos;NotApplicable&apos;).value() 
? 1 : 0</attribute>
        </attributes>
      </variable>
      <variable name="data_qac_neuropsychological_battery_scoring" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">var p=$(&apos;clsa-dcs.NeuropsychologicalBatteryScoring:QuestionnaireMetric.missingCount&apos;).asSequence()
var q=$(&apos;clsa-dcs.NeuropsychologicalBatteryScoring:QuestionnaireMetric.questionCount&apos;).asSequence()
var res=null
if(p.isNull().and(q.isNull()).not().value() &amp;&amp; 0!=q.sum()){
  res=newValue(
    &apos;{complete:&apos;+
    Math.round(q.sum().minus(p.sum()).multiply(100).div(q.sum()).value())
    +&apos;}&apos;,&apos;text&apos;)
}
res</attribute>
        </attributes>
      </variable>
      <variable name="data_missing_neuropsychological_battery_scoring" valueType="integer" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">$this(&apos;data_qac_neuropsychological_battery_scoring&apos;).isNull().and(
  $this(&apos;stage_contraindicated_neuropsychological_battery_scoring&apos;).eq(0),
  $this(&apos;stage_skip_neuropsychological_battery_scoring&apos;).isNull()
).value() ? 1 : 0</attribute>
        </attributes>
      </variable>
      <variable name="data_qac_cognition_recording" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">var res=null
var d=$(&apos;clsa-dcs.NeuropsychologicalBattery:STP_DOTREC_DCS&apos;)
var w=$(&apos;clsa-dcs.NeuropsychologicalBattery:STP_WORREC_DCS&apos;)
var c=$(&apos;clsa-dcs.NeuropsychologicalBattery:STP_COLREC_DCS&apos;)
var f=$(&apos;clsa-dcs.NeuropsychologicalBattery:FAS_FREC_DCS&apos;)
var a=$(&apos;clsa-dcs.NeuropsychologicalBattery:FAS_AREC_DCS&apos;)
var s=$(&apos;clsa-dcs.NeuropsychologicalBattery:FAS_SREC_DCS&apos;)
if(!d.isNull().and(w.isNull(),c.isNull,f.isNull(),a.isNull(),s.isNull()).value()) {
  var str=[]
  str.push(&apos;filesize_dot:&apos;+(d.isNull().value()?&apos;0&apos;:d.length().value()))
  str.push(&apos;filesize_wor:&apos;+(w.isNull().value()?&apos;0&apos;:w.length().value()))
  str.push(&apos;filesize_col:&apos;+(c.isNull().value()?&apos;0&apos;:c.length().value()))
  str.push(&apos;filesize_f:&apos;+(f.isNull().value()?&apos;0&apos;:f.length().value()))
  str.push(&apos;filesize_a:&apos;+(a.isNull().value()?&apos;0&apos;:a.length().value()))
  str.push(&apos;filesize_s:&apos;+(s.isNull().value()?&apos;0&apos;:s.length().value()))    
  res=newValue(&apos;{&apos;+str.join(&apos;,&apos;)+&apos;}&apos;,&apos;text&apos;)
}
res</attribute>
        </attributes>
      </variable>
      <variable name="stage_technician_cognition_recording" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">$this(&apos;stage_technician_neuropsychological_battery&apos;)</attribute>
        </attributes>
      </variable>
      <variable name="stage_skip_cognition_recording" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">$this(&apos;stage_skip_neuropsychological_battery&apos;)</attribute>
        </attributes>
      </variable>
      <variable name="stage_contraindicated_cognition_recording" valueType="integer" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">$this(&apos;stage_contraindicated_neuropsychological_battery&apos;)</attribute>
        </attributes>
      </variable>
      <variable name="data_missing_cognition_recording" valueType="integer" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">$this(&apos;data_qac_cognition_recording&apos;).isNull().and(
  $this(&apos;stage_contraindicated_cognition_recording&apos;).eq(0),
  $this(&apos;stage_skip_cognition_recording&apos;).isNull()
).value() ? 1 : 0</attribute>
        </attributes>
      </variable>
    </variables>
  </variables>
  <created valueType="datetime">2018-05-15T17:37:52.240-04</created>
  <updated valueType="datetime">2018-10-12T14:53:59.540-04</updated>
</org.obiba.magma.views.View>