<org.obiba.magma.views.View>
  <name>QC_F1</name>
  <from class="org.obiba.magma.views.JoinTable">
    <list>
      <table inner="false" class="org.obiba.magma.support.ValueTableReference">
        <reference>clsa-dcs-f1.Participants</reference>
      </table>
      <table inner="false" class="org.obiba.magma.support.ValueTableReference">
        <reference>clsa-dcs-f1.BloodPressure</reference>
      </table>
      <table inner="false" class="org.obiba.magma.support.ValueTableReference">
        <reference>clsa-dcs-f1.CognitiveTest</reference>
      </table>
      <table inner="false" class="org.obiba.magma.support.ValueTableReference">
        <reference>clsa-dcs-images-f1.CarotidIntima</reference>
      </table>
      <table inner="false" class="org.obiba.magma.support.ValueTableReference">
        <reference>clsa-dcs-images-f1.DualHipBoneDensity</reference>
      </table>
      <table inner="false" class="org.obiba.magma.support.ValueTableReference">
        <reference>clsa-dcs-f1.ECG</reference>
      </table>
      <table inner="false" class="org.obiba.magma.support.ValueTableReference">
        <reference>clsa-dcs-images-f1.ForearmBoneDensity</reference>
      </table>
      <table inner="false" class="org.obiba.magma.support.ValueTableReference">
        <reference>clsa-dcs-f1.GripStrength</reference>
      </table>
      <table inner="false" class="org.obiba.magma.support.ValueTableReference">
        <reference>clsa-dcs-f1.Hearing</reference>
      </table>
      <table inner="false" class="org.obiba.magma.support.ValueTableReference">
        <reference>clsa-dcs-images-f1.LateralBoneDensity</reference>
      </table>
      <table inner="false" class="org.obiba.magma.support.ValueTableReference">
        <reference>clsa-dcs-images-f1.RetinalScanLeft</reference>
      </table>
      <table inner="false" class="org.obiba.magma.support.ValueTableReference">
        <reference>clsa-dcs-images-f1.RetinalScanRight</reference>
      </table>
      <table inner="false" class="org.obiba.magma.support.ValueTableReference">
        <reference>clsa-dcs-f1.Spirometry</reference>
      </table>
      <table inner="false" class="org.obiba.magma.support.ValueTableReference">
        <reference>clsa-dcs-f1.Tonometer</reference>
      </table>
      <table inner="false" class="org.obiba.magma.support.ValueTableReference">
        <reference>clsa-dcs-f1.Weight</reference>
      </table>
      <table inner="false" class="org.obiba.magma.support.ValueTableReference">
        <reference>clsa-dcs-images-f1.WholeBodyBoneDensity</reference>
      </table>
      <table inner="false" class="org.obiba.magma.support.ValueTableReference">
        <reference>clsa-dcs-f1.StandingHeight</reference>
      </table>
      <table inner="false" class="org.obiba.magma.support.ValueTableReference">
        <reference>clsa-dcs-images-f1.SpineBoneDensity</reference>
      </table>
    </list>
  </from>
  <select class="org.obiba.magma.views.support.NoneClause"/>
  <where class="org.obiba.magma.js.views.JavascriptClause">
    <scriptName>customScript</scriptName>
    <script>$lastupdate().before(newValue(&apos;2018-05-25&apos;,&apos;date&apos;)).and($lastupdate().after(newValue(&apos;2015-05-01&apos;,&apos;date&apos;)))</script>
  </where>
  <variables class="org.obiba.magma.js.views.VariablesClause">
    <variables class="linked-hash-set">
      <variable name="stage_technician_spirometry" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="stage" valueType="text">Spirometry</attribute>
          <attribute name="derivedFrom" namespace="opal" valueType="text">/datasource/clsa-dcs/table/Spirometry/variable/InstrumentRun.user</attribute>
          <attribute name="script" valueType="text">$(&apos;clsa-dcs-f1.Spirometry:InstrumentRun.user&apos;).whenNull(
  $group(&apos;Admin.Action.stage&apos;,&apos;Spirometry&apos;,&apos;Admin.Action.user&apos;).asSequence().last()).lowerCase()</attribute>
        </attributes>
      </variable>
      <variable name="interview_site" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">$(&apos;Admin.ApplicationConfiguration.siteName&apos;).map({
  &apos;BritishColumbia&apos;:&apos;University of BC DCS&apos;,
  &apos;British Columbia&apos;:&apos;University of BC DCS&apos;,
  &apos;Calgary&apos;:&apos;Calgary DCS&apos;,
  &apos;Dalhousie&apos;:&apos;Dalhousie DCS&apos;,
  &apos;Hamilton&apos;:&apos;Hamilton DCS&apos;,
  &apos;Manitoba&apos;:&apos;Manitoba DCS&apos;,
  &apos;McGill&apos;:&apos;McGill DCS&apos;,
  &apos;McMaster&apos;:&apos;Hamilton DCS&apos;,
  &apos;Memorial&apos;:&apos;Memorial DCS&apos;,
  &apos;Memorial University&apos;:&apos;Memorial DCS&apos;,
  &apos;Ottawa&apos;:&apos;Ottawa DCS&apos;,
  &apos;Sherbrooke&apos;:&apos;Sherbrooke DCS&apos;,
  &apos;Simon Fraser&apos;:&apos;Simon Fraser DCS&apos;,
  &apos;SimonFraser&apos;:&apos;Simon Fraser DCS&apos;,
  &apos;UniversityofBC&apos;:&apos;University of BC DCS&apos;,
  &apos;University of Manitoba&apos;:&apos;Manitoba DCS&apos;,
  &apos;University of Victoria&apos;:&apos;Victoria DCS&apos;,
  &apos;Victoria&apos;:&apos;Victoria DCS&apos;},null) </attribute>
        </attributes>
      </variable>
      <variable name="data_missing_spirometry" valueType="integer" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">var stage=newValue($group(&apos;clsa-dcs-f1.Participants:Admin.StageInstance.stage&apos;,&apos;Spirometry&apos;,&apos;Admin.StageInstance.lastState&apos;).asSequence().last(),&apos;text&apos;)
$this(&apos;data_qac_spirometry&apos;).isNull().and(stage.any(&apos;Skipped&apos;,&apos;NotApplicable&apos;).not()).value() ? 1 : 0</attribute>
        </attributes>
      </variable>
      <variable name="stage_skip_spirometry" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">var v1=$group(&apos;Admin.Action.stage&apos;,&apos;Spirometry&apos;,&apos;Admin.Action.actionType&apos;).asSequence()
var v2=$group(&apos;Admin.Action.stage&apos;,&apos;Spirometry&apos;,&apos;Admin.Action.eventReason&apos;).asSequence()
var res=null
var arr=[]  // string array of events
for(var i=0; i&lt;v1.size(); i++) {
  if(v1.valueAt(i).any(&apos;SKIP&apos;).not().value() ||
     v2.valueAt(i).isNull().value()) continue
  var key=v2.valueAt(i).value().slice(14)
  if(-1==arr.indexOf(key))
    arr.push(key)
}
if(undefined!==arr &amp;&amp; 0&lt;arr.length) {
  res=newValue(arr.pop(),&apos;text&apos;)  
}
res</attribute>
        </attributes>
      </variable>
      <variable name="stage_contraindicated_spirometry" valueType="integer" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">$group(&apos;clsa-dcs-f1.Participants:Admin.StageInstance.stage&apos;,&apos;Spirometry&apos;,
&apos;Admin.StageInstance.lastState&apos;).any(&apos;Contraindicated&apos;,&apos;NotApplicable&apos;).value() 
? 1 : 0</attribute>
        </attributes>
      </variable>
      <variable name="interview_start_date" valueType="date" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="derivedFrom" namespace="opal" valueType="text">/datasource/clsa-dcs/table/Participants/variable/Admin.Interview.startDate</attribute>
          <attribute name="script" valueType="text">$(&apos;Admin.Interview.startDate&apos;)</attribute>
        </attributes>
      </variable>
      <variable name="interview_barcode" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="identifier" valueType="text">true</attribute>
          <attribute name="derivedFrom" namespace="opal" valueType="text">/datasource/clsa-dcs/table/Participants/variable/Admin.Participant.barcode</attribute>
          <attribute name="script" valueType="text">$(&apos;Admin.Participant.barcode&apos;)</attribute>
        </attributes>
      </variable>
      <variable name="stage_duration_spirometry" valueType="decimal" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">var res=null
if( $group(
  &apos;clsa-dcs-f1.Participants:Admin.StageInstance.stage&apos;,
  &apos;Spirometry&apos;,
  &apos;Admin.StageInstance.lastState&apos;).asSequence().last().any(&apos;Skipped&apos;,&apos;NotApplicable&apos;).not().value() ) {
  res=$group(
    &apos;clsa-dcs-f1.Participants:Admin.StageInstance.stage&apos;,
    &apos;Spirometry&apos;,
    &apos;Admin.StageInstance.duration&apos;).asSequence().last()
  if(res.isNull().not().value()) {
    res=Math.round(res.div(60.0).multiply(10.0).value()) / 10.0
  }
}
res</attribute>
        </attributes>
      </variable>
      <variable name="data_qac_spirometry" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="stage" valueType="text">Spirometry</attribute>
          <attribute name="validation" valueType="text">[IntegrityCheck-ERROR]</attribute>
          <attribute name="captureMethod" valueType="text">AUTOMATIC</attribute>
          <attribute name="isManualCaptureAllowed" valueType="text">true</attribute>
          <attribute name="vendorName" valueType="text">QUALITY_GRADE</attribute>
          <attribute name="derivedFrom" namespace="opal" valueType="text">/datasource/clsa-dcs/table/Spirometry/variable/OUTPUT_QUALITY_GRADE</attribute>
          <attribute name="script" valueType="text">var res=$(&apos;clsa-dcs-f1.Spirometry:OUTPUT_QUALITY_GRADE&apos;)
if(!res.isNull().value()) {
  res=newValue(&apos;{grade:&apos;+res.value()+&apos;}&apos;,&apos;text&apos;)
}
res</attribute>
        </attributes>
      </variable>
      <variable name="stage_technician_grip_strength" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">$(&apos;clsa-dcs-f1.GripStrength:InstrumentRun.user&apos;).whenNull(
  $group(&apos;Admin.Action.stage&apos;,&apos;GripStrength&apos;,&apos;Admin.Action.user&apos;).asSequence().last()).lowerCase()</attribute>
        </attributes>
      </variable>
      <variable name="stage_contraindicated_grip_strength" valueType="integer" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">$group(&apos;clsa-dcs-f1.Participants:Admin.StageInstance.stage&apos;,&apos;GripStrength&apos;,
&apos;Admin.StageInstance.lastState&apos;).any(&apos;Contraindicated&apos;,&apos;NotApplicable&apos;).value() 
? 1 : 0</attribute>
        </attributes>
      </variable>
      <variable name="stage_skip_grip_strength" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">var v1=$group(&apos;Admin.Action.stage&apos;,&apos;GripStrength&apos;,&apos;Admin.Action.actionType&apos;).asSequence()
var v2=$group(&apos;Admin.Action.stage&apos;,&apos;GripStrength&apos;,&apos;Admin.Action.eventReason&apos;).asSequence()
var res=null
var arr=[]  // string array of events
for(var i=0; i&lt;v1.size(); i++) {
  if(v1.valueAt(i).any(&apos;SKIP&apos;).not().value() ||
     v2.valueAt(i).isNull().value()) continue
  var key=v2.valueAt(i).value().slice(14)
  if(-1==arr.indexOf(key))
    arr.push(key)
}
if(undefined!==arr &amp;&amp; 0&lt;arr.length) {
  res=newValue(arr.pop(),&apos;text&apos;)  
}
res</attribute>
        </attributes>
      </variable>
      <variable name="data_missing_grip_strength" valueType="integer" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">var stage=newValue($group(&apos;clsa-dcs-f1.Participants:Admin.StageInstance.stage&apos;,&apos;GripStrength&apos;,&apos;Admin.StageInstance.lastState&apos;).asSequence().last(),&apos;text&apos;)
$this(&apos;data_qac_grip_strength&apos;).isNull().and(stage.any(&apos;Skipped&apos;,&apos;NotApplicable&apos;).not()).value() ? 1 : 0</attribute>
        </attributes>
      </variable>
      <variable name="data_qac_grip_strength" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">var res=null
if($(&apos;clsa-dcs-f1.GripStrength:Measure.RES_TRIAL_MAX&apos;).isNull().not().value()) {
  res=newValue(&apos;{trial_count:&apos;+$(&apos;clsa-dcs-f1.GripStrength:Measure.RES_TRIAL_MAX&apos;).size()+&apos;}&apos;,&apos;text&apos;)
}
res</attribute>
        </attributes>
      </variable>
      <variable name="stage_duration_grip_strength" valueType="decimal" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">var res=null
if( $group(
  &apos;clsa-dcs-f1.Participants:Admin.StageInstance.stage&apos;,
  &apos;GripStrength&apos;,
  &apos;Admin.StageInstance.lastState&apos;).asSequence().last().any(&apos;Skipped&apos;,&apos;NotApplicable&apos;).not().value() ) {
  res=$group(
    &apos;clsa-dcs-f1.Participants:Admin.StageInstance.stage&apos;,
    &apos;GripStrength&apos;,
    &apos;Admin.StageInstance.duration&apos;).asSequence().last()
  if(res.isNull().not().value()) {
    res=Math.round(res.div(60.0).multiply(10.0).value()) / 10.0
  }
}
res</attribute>
        </attributes>
      </variable>
      <variable name="stage_technician_blood_pressure" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">$(&apos;clsa-dcs-f1.BloodPressure:InstrumentRun.user&apos;).whenNull(
  $group(&apos;Admin.Action.stage&apos;,&apos;BloodPressure&apos;,&apos;Admin.Action.user&apos;).asSequence().last()).lowerCase()</attribute>
        </attributes>
      </variable>
      <variable name="stage_contraindicated_blood_pressure" valueType="integer" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">$group(&apos;clsa-dcs-f1.Participants:Admin.StageInstance.stage&apos;,&apos;BloodPressure&apos;,
&apos;Admin.StageInstance.lastState&apos;).any(&apos;Contraindicated&apos;,&apos;NotApplicable&apos;).value() 
? 1 : 0</attribute>
        </attributes>
      </variable>
      <variable name="stage_skip_blood_pressure" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">var v1=$group(&apos;Admin.Action.stage&apos;,&apos;BloodPressure&apos;,&apos;Admin.Action.actionType&apos;).asSequence()
var v2=$group(&apos;Admin.Action.stage&apos;,&apos;BloodPressure&apos;,&apos;Admin.Action.eventReason&apos;).asSequence()
var res=null
var arr=[]  // string array of events
for(var i=0; i&lt;v1.size(); i++) {
  if(v1.valueAt(i).any(&apos;SKIP&apos;).not().value() ||
     v2.valueAt(i).isNull().value()) continue
  var key=v2.valueAt(i).value().slice(14)
  if(-1==arr.indexOf(key))
    arr.push(key)
}
if(undefined!==arr &amp;&amp; 0&lt;arr.length) {
  res=newValue(arr.pop(),&apos;text&apos;)  
}
res</attribute>
        </attributes>
      </variable>
      <variable name="data_missing_blood_pressure" valueType="integer" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">var stage=newValue($group(&apos;clsa-dcs-f1.Participants:Admin.StageInstance.stage&apos;,&apos;BloodPressure&apos;,&apos;Admin.StageInstance.lastState&apos;).asSequence().last(),&apos;text&apos;)
$this(&apos;data_qac_blood_pressure&apos;).isNull().and(stage.any(&apos;Skipped&apos;,&apos;NotApplicable&apos;).not()).value() ? 1 : 0</attribute>
        </attributes>
      </variable>
      <variable name="data_qac_blood_pressure" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">var res=null
if($(&apos;clsa-dcs-f1.BloodPressure:RES_AVG_COUNT&apos;).isNull().not().value()) {
  res=newValue(&apos;{trial_count:&apos;+$(&apos;clsa-dcs-f1.BloodPressure:RES_AVG_COUNT&apos;)+&apos;}&apos;,&apos;text&apos;)
}
res</attribute>
        </attributes>
      </variable>
      <variable name="stage_duration_blood_pressure" valueType="decimal" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">var res=null
if( $group(
  &apos;clsa-dcs-f1.Participants:Admin.StageInstance.stage&apos;,
  &apos;BloodPressure&apos;,
  &apos;Admin.StageInstance.lastState&apos;).asSequence().last().any(&apos;Skipped&apos;,&apos;NotApplicable&apos;).not().value() ) {
  res=$group(
    &apos;clsa-dcs-f1.Participants:Admin.StageInstance.stage&apos;,
    &apos;BloodPressure&apos;,
    &apos;Admin.StageInstance.duration&apos;).asSequence().last()
  if(res.isNull().not().value()) {
    res=Math.round(res.div(60.0).multiply(10.0).value()) / 10.0
  }
}
res</attribute>
        </attributes>
      </variable>
      <variable name="stage_technician_ecg" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">$(&apos;clsa-dcs-f1.ECG:InstrumentRun.user&apos;).whenNull(
  $group(&apos;Admin.Action.stage&apos;,&apos;ECG&apos;,&apos;Admin.Action.user&apos;).asSequence().last()).lowerCase()</attribute>
        </attributes>
      </variable>
      <variable name="stage_contraindicated_ecg" valueType="integer" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">$group(&apos;clsa-dcs-f1.Participants:Admin.StageInstance.stage&apos;,&apos;ECG&apos;,
&apos;Admin.StageInstance.lastState&apos;).any(&apos;Contraindicated&apos;,&apos;NotApplicable&apos;).value() 
? 1 : 0</attribute>
        </attributes>
      </variable>
      <variable name="stage_skip_ecg" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">var v1=$group(&apos;Admin.Action.stage&apos;,&apos;ECG&apos;,&apos;Admin.Action.actionType&apos;).asSequence()
var v2=$group(&apos;Admin.Action.stage&apos;,&apos;ECG&apos;,&apos;Admin.Action.eventReason&apos;).asSequence()
var res=null
var arr=[]  // string array of events
for(var i=0; i&lt;v1.size(); i++) {
  if(v1.valueAt(i).any(&apos;SKIP&apos;).not().value() ||
     v2.valueAt(i).isNull().value()) continue
  var key=v2.valueAt(i).value().slice(14)
  if(-1==arr.indexOf(key))
    arr.push(key)
}
if(undefined!==arr &amp;&amp; 0&lt;arr.length) {
  res=newValue(arr.pop(),&apos;text&apos;)  
}
res</attribute>
        </attributes>
      </variable>
      <variable name="data_missing_ecg" valueType="integer" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">var stage=newValue($group(&apos;clsa-dcs-f1.Participants:Admin.StageInstance.stage&apos;,&apos;ECG&apos;,&apos;Admin.StageInstance.lastState&apos;).asSequence().last(),&apos;text&apos;)
$this(&apos;data_qac_ecg&apos;).isNull().and(stage.any(&apos;Skipped&apos;,&apos;NotApplicable&apos;).not()).value() ? 1 : 0</attribute>
        </attributes>
      </variable>
      <variable name="data_qac_ecg" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">var f=$(&apos;clsa-dcs-f1.ECG:RES_XML_FILE&apos;)
var q=$(&apos;clsa-dcs-f1.ECG:RES_DIAGNOSIS&apos;)
var res=null
if(f.isNull().not().value()) {
  var str=&apos;{file_size:&apos;+f.length()+&apos;,quality:&apos;
  if(q.lowerCase().matches(/poor data quality/).value()) {
    str += &apos;0}&apos;
  } else {
    str += &apos;1}&apos;  
  }
  res = newValue(str,&apos;text&apos;)
}
res</attribute>
        </attributes>
      </variable>
      <variable name="stage_duration_ecg" valueType="decimal" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">var res=null
if( $group(
  &apos;clsa-dcs-f1.Participants:Admin.StageInstance.stage&apos;,
  &apos;ECG&apos;,
  &apos;Admin.StageInstance.lastState&apos;).asSequence().last().any(&apos;Skipped&apos;,&apos;NotApplicable&apos;).not().value() ) {
  res=$group(
    &apos;clsa-dcs-f1.Participants:Admin.StageInstance.stage&apos;,
    &apos;ECG&apos;,
    &apos;Admin.StageInstance.duration&apos;).asSequence().last()
  if(res.isNull().not().value()) {
    res=Math.round(res.div(60.0).multiply(10.0).value()) / 10.0
  }
}
res</attribute>
        </attributes>
      </variable>
      <variable name="stage_technician_cognitive_test" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">$(&apos;clsa-dcs-f1.CognitiveTest:InstrumentRun.user&apos;).whenNull(
  $group(&apos;Admin.Action.stage&apos;,&apos;CognitiveTest&apos;,&apos;Admin.Action.user&apos;).asSequence().last()).lowerCase()</attribute>
        </attributes>
      </variable>
      <variable name="stage_contraindicated_cognitive_test" valueType="integer" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">$group(&apos;clsa-dcs-f1.Participants:Admin.StageInstance.stage&apos;,&apos;CognitiveTest&apos;,
&apos;Admin.StageInstance.lastState&apos;).any(&apos;Contraindicated&apos;,&apos;NotApplicable&apos;).value() 
? 1 : 0</attribute>
        </attributes>
      </variable>
      <variable name="stage_skip_cognitive_test" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">var v1=$group(&apos;Admin.Action.stage&apos;,&apos;CognitiveTest&apos;,&apos;Admin.Action.actionType&apos;).asSequence()
var v2=$group(&apos;Admin.Action.stage&apos;,&apos;CognitiveTest&apos;,&apos;Admin.Action.eventReason&apos;).asSequence()
var res=null
var arr=[]  // string array of events
for(var i=0; i&lt;v1.size(); i++) {
  if(v1.valueAt(i).any(&apos;SKIP&apos;).not().value() ||
     v2.valueAt(i).isNull().value()) continue
  var key=v2.valueAt(i).value().slice(14)
  if(-1==arr.indexOf(key))
    arr.push(key)
}
if(undefined!==arr &amp;&amp; 0&lt;arr.length) {
  res=newValue(arr.pop(),&apos;text&apos;)  
}
res</attribute>
        </attributes>
      </variable>
      <variable name="data_missing_cognitive_test" valueType="integer" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">var stage=newValue($group(&apos;clsa-dcs-f1.Participants:Admin.StageInstance.stage&apos;,&apos;CognitiveTest&apos;,&apos;Admin.StageInstance.lastState&apos;).asSequence().last(),&apos;text&apos;)
$this(&apos;data_qac_cognitive_test&apos;).isNull().and(stage.any(&apos;Skipped&apos;,&apos;NotApplicable&apos;).not()).value() ? 1 : 0</attribute>
        </attributes>
      </variable>
      <variable name="data_qac_cognitive_test" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">var res=$(&apos;clsa-dcs-f1.CognitiveTest:RES_RESULT_FILE&apos;)
if(res.isNull().not().value()) {
  res = newValue(&apos;{filesize:&apos;+res.length()+&apos;}&apos;,&apos;text&apos;)
}  
res</attribute>
        </attributes>
      </variable>
      <variable name="stage_duration_cognitive_test" valueType="decimal" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">var res=null
if( $group(
  &apos;clsa-dcs-f1.Participants:Admin.StageInstance.stage&apos;,
  &apos;CognitiveTest&apos;,
  &apos;Admin.StageInstance.lastState&apos;).asSequence().last().any(&apos;Skipped&apos;,&apos;NotApplicable&apos;).not().value() ) {
  res=$group(
    &apos;clsa-dcs-f1.Participants:Admin.StageInstance.stage&apos;,
    &apos;CognitiveTest&apos;,
    &apos;Admin.StageInstance.duration&apos;).asSequence().last()
  if(res.isNull().not().value()) {
    res=Math.round(res.div(60.0).multiply(10.0).value()) / 10.0
  }
}
res</attribute>
        </attributes>
      </variable>
      <variable name="stage_technician_hearing" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">$(&apos;clsa-dcs-f1.Hearing:InstrumentRun.user&apos;).whenNull(
  $group(&apos;Admin.Action.stage&apos;,&apos;Hearing&apos;,&apos;Admin.Action.user&apos;).asSequence().last()).lowerCase()</attribute>
        </attributes>
      </variable>
      <variable name="stage_contraindicated_hearing" valueType="integer" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">$group(&apos;clsa-dcs-f1.Participants:Admin.StageInstance.stage&apos;,&apos;Hearing&apos;,
&apos;Admin.StageInstance.lastState&apos;).any(&apos;Contraindicated&apos;,&apos;NotApplicable&apos;).value() 
? 1 : 0</attribute>
        </attributes>
      </variable>
      <variable name="stage_skip_hearing" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">var v1=$group(&apos;Admin.Action.stage&apos;,&apos;Hearing&apos;,&apos;Admin.Action.actionType&apos;).asSequence()
var v2=$group(&apos;Admin.Action.stage&apos;,&apos;Hearing&apos;,&apos;Admin.Action.eventReason&apos;).asSequence()
var res=null
var arr=[]  // string array of events
for(var i=0; i&lt;v1.size(); i++) {
  if(v1.valueAt(i).any(&apos;SKIP&apos;).not().value() ||
     v2.valueAt(i).isNull().value()) continue
  var key=v2.valueAt(i).value().slice(14)
  if(-1==arr.indexOf(key))
    arr.push(key)
}
if(undefined!==arr &amp;&amp; 0&lt;arr.length) {
  res=newValue(arr.pop(),&apos;text&apos;)  
}
res</attribute>
        </attributes>
      </variable>
      <variable name="data_missing_hearing" valueType="integer" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">var stage=newValue($group(&apos;clsa-dcs-f1.Participants:Admin.StageInstance.stage&apos;,&apos;Hearing&apos;,&apos;Admin.StageInstance.lastState&apos;).asSequence().last(),&apos;text&apos;)
$this(&apos;data_qac_hearing&apos;).isNull().and(stage.any(&apos;Skipped&apos;,&apos;NotApplicable&apos;).not()).value() ? 1 : 0</attribute>
        </attributes>
      </variable>
      <variable name="data_qac_hearing" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">var side = [&apos;RIGHT&apos;,&apos;LEFT&apos;]
var freq = [&apos;1KT&apos;,&apos;500&apos;,&apos;1K&apos;,&apos;2K&apos;,&apos;3K&apos;,&apos;4K&apos;,&apos;6K&apos;,&apos;8K&apos;]
var count = {RIGHT:0,LEFT:0}
for(var i=0;i&lt;side.length;i++) {
  var s = side[i]
  var v = &apos;clsa-dcs-f1.Hearing:RES_&apos; + s + &apos;_&apos;
  for(var j=0;j&lt;freq.length;j++) {
    var f = v + freq[j]
    if ($(f).isNull().not().or($(f + &apos;_ERR&apos;).isNull().not()).value()) count[s]++;
  }
}
res = (0 == count.RIGHT &amp;&amp; 0 == count.LEFT &amp;&amp; 
  $(&apos;clsa-dcs-f1.Hearing:RES_TEST_ID&apos;).isNull().and(
    $(&apos;clsa-dcs-f1.Hearing:RES_TEST_DATETIME&apos;).isNull()).value()) ?
      null : newValue(&apos;{freq_left:&apos;+count.LEFT+&apos;,freq_right:&apos;+count.RIGHT+&apos;}&apos;,&apos;text&apos;)</attribute>
        </attributes>
      </variable>
      <variable name="stage_duration_hearing" valueType="decimal" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">var res=null
if( $group(
  &apos;clsa-dcs-f1.Participants:Admin.StageInstance.stage&apos;,
  &apos;Hearing&apos;,
  &apos;Admin.StageInstance.lastState&apos;).asSequence().last().any(&apos;Skipped&apos;,&apos;NotApplicable&apos;).not().value() ) {
  res=$group(
    &apos;clsa-dcs-f1.Participants:Admin.StageInstance.stage&apos;,
    &apos;Hearing&apos;,
    &apos;Admin.StageInstance.duration&apos;).asSequence().last()
  if(res.isNull().not().value()) {
    res=Math.round(res.div(60.0).multiply(10.0).value()) / 10.0
  }
}
res</attribute>
        </attributes>
      </variable>
      <variable name="stage_technician_tonometer" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">$(&apos;clsa-dcs-f1.Tonometer:InstrumentRun.user&apos;).whenNull(
  $group(&apos;Admin.Action.stage&apos;,&apos;Tonometer&apos;,&apos;Admin.Action.user&apos;).asSequence().last()).lowerCase()</attribute>
        </attributes>
      </variable>
      <variable name="stage_contraindicated_tonometer" valueType="integer" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">$group(&apos;clsa-dcs-f1.Participants:Admin.StageInstance.stage&apos;,&apos;Tonometer&apos;,
&apos;Admin.StageInstance.lastState&apos;).any(&apos;Contraindicated&apos;,&apos;NotApplicable&apos;).value() 
? 1 : 0</attribute>
        </attributes>
      </variable>
      <variable name="stage_skip_tonometer" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">var v1=$group(&apos;Admin.Action.stage&apos;,&apos;Tonometer&apos;,&apos;Admin.Action.actionType&apos;).asSequence()
var v2=$group(&apos;Admin.Action.stage&apos;,&apos;Tonometer&apos;,&apos;Admin.Action.eventReason&apos;).asSequence()
var res=null
var arr=[]  // string array of events
for(var i=0; i&lt;v1.size(); i++) {
  if(v1.valueAt(i).any(&apos;SKIP&apos;).not().value() ||
     v2.valueAt(i).isNull().value()) continue
  var key=v2.valueAt(i).value().slice(14)
  if(-1==arr.indexOf(key))
    arr.push(key)
}
if(undefined!==arr &amp;&amp; 0&lt;arr.length) {
  res=newValue(arr.pop(),&apos;text&apos;)  
}
res</attribute>
        </attributes>
      </variable>
      <variable name="data_missing_tonometer" valueType="integer" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">var stage=newValue($group(&apos;clsa-dcs-f1.Participants:Admin.StageInstance.stage&apos;,&apos;Tonometer&apos;,&apos;Admin.StageInstance.lastState&apos;).asSequence().last(),&apos;text&apos;)
$this(&apos;data_qac_tonometer&apos;).isNull().and(stage.any(&apos;Skipped&apos;,&apos;NotApplicable&apos;).not()).value() ? 1 : 0</attribute>
        </attributes>
      </variable>
      <variable name="data_qac_tonometer" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">var eye=$(&apos;clsa-dcs-f1.Tonometer:Measure.TON_EYE&apos;).lowerCase().map({
  &apos;l&apos;:&apos;L&apos;,
  &apos;r&apos;:&apos;R&apos;,
  &apos;right&apos;:&apos;R&apos;,
  &apos;left&apos;:&apos;L&apos;,
  &apos;left eye&apos;:&apos;L&apos;,
  &apos;right eye&apos;:&apos;R&apos;,
  &apos;righr&apos;:&apos;R&apos;,
  &apos;rigth&apos;:&apos;R&apos;,
  &apos;rught&apos;:&apos;R&apos;,
  &apos;lrft&apos;:&apos;L&apos;,
  &apos;0&apos;:&apos;L&apos;,
  &apos;1&apos;:&apos;R&apos;,
  &apos;ll&apos;:&apos;L&apos;,
  &apos;rr&apos;:&apos;R&apos;,
  &apos;le&apos;:&apos;L&apos;,
  &apos;leeft&apos;:&apos;L&apos;,
  &apos;gauche&apos;:&apos;L&apos;,
  &apos;droit&apos;:&apos;R&apos;,
  &apos;droite&apos;:&apos;R&apos;},null)

// bare minimum useful data is IOPcc: Corneal Compensated Intraocular Pressure
var iopcc=$(&apos;clsa-dcs-f1.Tonometer:Measure.TON_IOPCC&apos;).asSequence() 

// if there is raw applanation and pressure data there will be a quality index
// for each set of measurements
var qual=$(&apos;clsa-dcs-f1.Tonometer:Measure.TON_QUALITYINDEX&apos;).asSequence()
var appl=$(&apos;clsa-dcs-f1.Tonometer:Measure.TON_PRESSURE&apos;).asSequence()
var pres=$(&apos;clsa-dcs-f1.Tonometer:Measure.TON_APPLANATION&apos;).asSequence()

var has_iopcc=iopcc.size().eq(eye.size()).value()
var has_qual=qual.size().eq(eye.size()).value()
var has_appl=appl.size().eq(eye.size()).value()
var has_pres=pres.size().eq(eye.size()).value()
var res=null
if(eye.isNull().not().value()) {
  var side={L:{left_iopcc:&apos;0&apos;,left_qi:&apos;-1&apos;,left_appl:&apos;0&apos;,left_pres:&apos;0&apos;},
            R:{right_iopcc:&apos;0&apos;,right_qi:&apos;-1&apos;,right_appl:&apos;0&apos;,right_pres:&apos;0&apos;}}
  for(var i=0;i&lt;eye.size();i++) {
    var e=eye.valueAt(i).value()
    if(has_iopcc) {
      var q=newValue(iopcc.valueAt(i).value(),&apos;text&apos;)
      if(q.matches(/^(\d*\.)?\d+$/)) {
        if(&apos;L&apos;==e) {
          side[e].left_iopcc=&apos;1&apos;
        } else if(&apos;R&apos;==e) {
          side[e].right_iopcc=&apos;1&apos;
        }
      }
    }
    if(has_qual) {
      var q=newValue(qual.valueAt(i).round(2).value(),&apos;text&apos;)
      if(q.matches(/^(\d*\.)?\d+$/)) {
        if(&apos;L&apos;==e) {
          side[e].left_qi=q.value()
        } else if(&apos;R&apos;==e) {
          side[e].right_qi=q.value()
        }
      }
    }
    if(has_appl) {
      var q=appl.valueAt(i).value().split(&apos;,&apos;).length
      if(&apos;L&apos;==e) {
        side[e].left_appl=q
      } else if(&apos;R&apos;==e) {
        side[e].right_appl=q
      }      
    }        
    if(has_pres) {
      var q=pres.valueAt(i).value().split(&apos;,&apos;).length
      if(&apos;L&apos;==e) {
        side[e].left_pres=q
      } else if(&apos;R&apos;==e) {
        side[e].right_pres=q
      }
    }
  }
  res=newValue(
    JSON.stringify(side.L).replace(/&quot;/g,&apos;&apos;).replace(/}/g,&apos;,&apos;) +
    JSON.stringify(side.R).replace(/&quot;/g,&apos;&apos;).replace(/{/g,&apos;&apos;), &apos;text&apos;)
}
res</attribute>
        </attributes>
      </variable>
      <variable name="stage_duration_tonometer" valueType="decimal" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">var res=null
if( $group(
  &apos;clsa-dcs-f1.Participants:Admin.StageInstance.stage&apos;,
  &apos;Tonometer&apos;,
  &apos;Admin.StageInstance.lastState&apos;).asSequence().last().any(&apos;Skipped&apos;,&apos;NotApplicable&apos;).not().value() ) {
  res=$group(
    &apos;clsa-dcs-f1.Participants:Admin.StageInstance.stage&apos;,
    &apos;Tonometer&apos;,
    &apos;Admin.StageInstance.duration&apos;).asSequence().last()
  if(res.isNull().not().value()) {
    res=Math.round(res.div(60.0).multiply(10.0).value()) / 10.0
  }
}
res</attribute>
        </attributes>
      </variable>
    </variables>
  </variables>
  <created valueType="datetime">2018-05-03T13:40:11.946-04</created>
  <updated valueType="datetime">2018-05-28T10:06:36.292-04</updated>
</org.obiba.magma.views.View>
